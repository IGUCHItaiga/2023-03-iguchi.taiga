// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fin_11_reload,
        fin_10_reload,
        fin_9_reload,
        fin_8_reload,
        fin_7_reload,
        fin_6_reload,
        fin_5_reload,
        fin_4_reload,
        fin_3_reload,
        fin_2_reload,
        fin_1_reload,
        fin_0_reload,
        fin_15_reload,
        fin_14_reload,
        fin_13_reload,
        fin_12_reload,
        rk_address0,
        rk_ce0,
        rk_we0,
        rk_d0,
        rk_address1,
        rk_ce1,
        rk_we1,
        rk_d1,
        con128_address0,
        con128_ce0,
        con128_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] fin_11_reload;
input  [7:0] fin_10_reload;
input  [7:0] fin_9_reload;
input  [7:0] fin_8_reload;
input  [7:0] fin_7_reload;
input  [7:0] fin_6_reload;
input  [7:0] fin_5_reload;
input  [7:0] fin_4_reload;
input  [7:0] fin_3_reload;
input  [7:0] fin_2_reload;
input  [7:0] fin_1_reload;
input  [7:0] fin_0_reload;
input  [7:0] fin_15_reload;
input  [7:0] fin_14_reload;
input  [7:0] fin_13_reload;
input  [7:0] fin_12_reload;
output  [7:0] rk_address0;
output   rk_ce0;
output   rk_we0;
output  [7:0] rk_d0;
output  [7:0] rk_address1;
output   rk_ce1;
output   rk_we1;
output  [7:0] rk_d1;
output  [7:0] con128_address0;
output   con128_ce0;
input  [7:0] con128_q0;

reg ap_idle;
reg[7:0] rk_address0;
reg rk_ce0;
reg rk_we0;
reg[7:0] rk_d0;
reg[7:0] rk_address1;
reg rk_ce1;
reg rk_we1;
reg[7:0] rk_d1;
reg[7:0] con128_address0;
reg con128_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln309_reg_1857;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
reg   [7:0] reg_648;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln309_fu_745_p2;
wire   [3:0] add_ln309_fu_751_p2;
reg   [3:0] add_ln309_reg_1861;
wire   [7:0] shl_ln_fu_757_p3;
reg   [7:0] shl_ln_reg_1866;
wire   [0:0] empty_46_fu_776_p1;
reg   [0:0] empty_46_reg_1890;
reg   [0:0] empty_46_reg_1890_pp0_iter1_reg;
reg   [7:0] idx42_load_1_reg_1899;
reg   [7:0] rk_addr_reg_1906;
wire   [7:0] xor_ln124_fu_801_p2;
reg   [7:0] xor_ln124_reg_1911;
wire   [7:0] or_ln124_fu_818_p2;
reg   [7:0] or_ln124_reg_1921;
reg   [7:0] rk_addr_1_reg_1926;
wire   [7:0] xor_ln124_1_fu_828_p2;
reg   [7:0] xor_ln124_1_reg_1931;
reg   [7:0] rk_addr_2_reg_1941;
wire   [7:0] xor_ln124_2_fu_861_p2;
reg   [7:0] xor_ln124_2_reg_1946;
wire   [7:0] or_ln124_1_fu_884_p2;
reg   [7:0] or_ln124_1_reg_1956;
reg   [7:0] rk_addr_3_reg_1963;
wire   [7:0] xor_ln124_3_fu_894_p2;
reg   [7:0] xor_ln124_3_reg_1968;
reg   [7:0] rk_addr_4_reg_1978;
wire   [7:0] xor_ln124_4_fu_927_p2;
reg   [7:0] xor_ln124_4_reg_1983;
reg   [7:0] rk_addr_5_reg_1993;
wire   [7:0] xor_ln124_5_fu_960_p2;
reg   [7:0] xor_ln124_5_reg_1998;
reg   [7:0] rk_addr_6_reg_2008;
wire   [7:0] xor_ln124_6_fu_993_p2;
reg   [7:0] xor_ln124_6_reg_2013;
wire   [7:0] or_ln124_2_fu_1016_p2;
reg   [7:0] or_ln124_2_reg_2023;
reg   [7:0] rk_addr_7_reg_2035;
wire   [7:0] xor_ln124_7_fu_1026_p2;
reg   [7:0] xor_ln124_7_reg_2040;
reg   [7:0] rk_addr_8_reg_2050;
wire   [7:0] xor_ln124_8_fu_1059_p2;
reg   [7:0] xor_ln124_8_reg_2055;
reg   [7:0] rk_addr_9_reg_2065;
wire   [7:0] xor_ln124_9_fu_1092_p2;
reg   [7:0] xor_ln124_9_reg_2070;
reg   [7:0] rk_addr_10_reg_2080;
wire   [7:0] xor_ln124_10_fu_1125_p2;
reg   [7:0] xor_ln124_10_reg_2085;
reg   [7:0] rk_addr_11_reg_2095;
wire   [7:0] xor_ln124_11_fu_1158_p2;
reg   [7:0] xor_ln124_11_reg_2100;
reg   [7:0] rk_addr_12_reg_2110;
wire   [7:0] xor_ln124_12_fu_1191_p2;
reg   [7:0] xor_ln124_12_reg_2115;
reg   [7:0] rk_addr_13_reg_2125;
wire   [7:0] xor_ln124_13_fu_1224_p2;
reg   [7:0] xor_ln124_13_reg_2130;
reg   [7:0] rk_addr_14_reg_2140;
wire   [7:0] xor_ln124_14_fu_1261_p2;
reg   [7:0] xor_ln124_14_reg_2145;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln310_fu_771_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln124_fu_785_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln300_fu_796_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln124_2_fu_813_p1;
wire   [63:0] zext_ln124_1_fu_823_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln124_4_fu_840_p1;
wire   [63:0] zext_ln124_3_fu_856_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln124_6_fu_873_p1;
wire   [63:0] zext_ln124_5_fu_889_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln124_8_fu_906_p1;
wire   [63:0] zext_ln124_7_fu_922_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln124_10_fu_939_p1;
wire   [63:0] zext_ln124_9_fu_955_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln124_12_fu_972_p1;
wire   [63:0] zext_ln124_11_fu_988_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln124_14_fu_1005_p1;
wire   [63:0] zext_ln124_13_fu_1021_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln124_16_fu_1038_p1;
wire   [63:0] zext_ln124_15_fu_1054_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln124_18_fu_1071_p1;
wire   [63:0] zext_ln124_17_fu_1087_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln124_20_fu_1104_p1;
wire   [63:0] zext_ln124_19_fu_1120_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln124_22_fu_1137_p1;
wire   [63:0] zext_ln124_21_fu_1153_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln124_24_fu_1170_p1;
wire   [63:0] zext_ln124_23_fu_1186_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln124_26_fu_1203_p1;
wire   [63:0] zext_ln124_25_fu_1219_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln124_28_fu_1236_p1;
wire   [63:0] zext_ln124_27_fu_1256_p1;
wire   [63:0] zext_ln124_29_fu_1286_p1;
reg   [7:0] idx42_fu_162;
wire   [7:0] add_ln315_fu_1639_p2;
wire    ap_loop_init;
reg   [3:0] i_fu_166;
reg   [3:0] ap_sig_allocacmp_i_3;
reg   [7:0] lk_0_fu_170;
wire   [7:0] t_fu_1321_p3;
reg   [7:0] dst_read_assign_fu_174;
wire   [7:0] t_16_fu_1343_p3;
reg   [7:0] dst_read_assign_1_fu_178;
wire   [7:0] t_17_fu_1365_p3;
reg   [7:0] dst_read_assign_2_fu_182;
wire   [7:0] t_18_fu_1387_p3;
reg   [7:0] dst_read_assign_3_fu_186;
wire   [7:0] t_19_fu_1409_p3;
reg   [7:0] dst_read_assign_4_fu_190;
wire   [7:0] t_20_fu_1431_p3;
reg   [7:0] dst_read_assign_5_fu_194;
wire   [7:0] t_21_fu_1453_p3;
reg   [7:0] dst_read_assign_6_fu_198;
wire   [7:0] t_22_fu_1465_p3;
reg   [7:0] dst_read_assign_7_fu_202;
wire   [7:0] t_23_fu_1491_p3;
reg   [7:0] dst_read_assign_8_fu_206;
wire   [7:0] t_24_fu_1511_p3;
reg   [7:0] dst_read_assign_9_fu_210;
wire   [7:0] t_25_fu_1531_p3;
reg   [7:0] dst_read_assign_10_fu_214;
wire   [7:0] t_26_fu_1551_p3;
reg   [7:0] dst_read_assign_11_fu_218;
wire   [7:0] t_27_fu_1571_p3;
reg   [7:0] dst_read_assign_12_fu_222;
wire   [7:0] t_28_fu_1591_p3;
reg   [7:0] dst_read_assign_13_fu_226;
wire   [7:0] t_29_fu_1611_p3;
reg   [7:0] dst_read_assign_14_fu_230;
wire   [7:0] t_30_fu_1631_p3;
wire   [7:0] xor_ln124_16_fu_845_p2;
wire   [7:0] xor_ln124_17_fu_878_p2;
wire   [7:0] xor_ln124_18_fu_911_p2;
wire   [7:0] xor_ln124_19_fu_944_p2;
wire   [7:0] xor_ln124_20_fu_977_p2;
wire   [7:0] xor_ln124_21_fu_1010_p2;
wire   [7:0] xor_ln124_22_fu_1043_p2;
wire   [7:0] xor_ln124_23_fu_1076_p2;
wire   [7:0] xor_ln124_24_fu_1109_p2;
wire   [7:0] xor_ln124_25_fu_1142_p2;
wire   [7:0] xor_ln124_26_fu_1175_p2;
wire   [7:0] xor_ln124_27_fu_1208_p2;
wire   [7:0] xor_ln124_28_fu_1241_p2;
wire   [7:0] xor_ln124_29_fu_1268_p2;
wire   [7:0] xor_ln124_15_fu_1291_p2;
wire   [7:0] xor_ln124_30_fu_1298_p2;
wire   [7:0] add_ln310_fu_765_p2;
wire   [7:0] add_ln124_fu_780_p2;
wire   [7:0] or_ln300_fu_790_p2;
wire   [7:0] add_ln124_1_fu_808_p2;
wire   [7:0] add_ln124_3_fu_835_p2;
wire   [7:0] add_ln124_2_fu_851_p2;
wire   [7:0] add_ln124_4_fu_868_p2;
wire   [7:0] add_ln124_6_fu_901_p2;
wire   [7:0] add_ln124_5_fu_917_p2;
wire   [7:0] add_ln124_8_fu_934_p2;
wire   [7:0] add_ln124_7_fu_950_p2;
wire   [7:0] add_ln124_10_fu_967_p2;
wire   [7:0] add_ln124_9_fu_983_p2;
wire   [7:0] add_ln124_11_fu_1000_p2;
wire   [7:0] add_ln124_13_fu_1033_p2;
wire   [7:0] add_ln124_12_fu_1049_p2;
wire   [7:0] add_ln124_15_fu_1066_p2;
wire   [7:0] add_ln124_14_fu_1082_p2;
wire   [7:0] add_ln124_17_fu_1099_p2;
wire   [7:0] add_ln124_16_fu_1115_p2;
wire   [7:0] add_ln124_19_fu_1132_p2;
wire   [7:0] add_ln124_18_fu_1148_p2;
wire   [7:0] add_ln124_21_fu_1165_p2;
wire   [7:0] add_ln124_20_fu_1181_p2;
wire   [7:0] add_ln124_23_fu_1198_p2;
wire   [7:0] add_ln124_22_fu_1214_p2;
wire   [7:0] add_ln124_25_fu_1231_p2;
wire   [7:0] add_ln124_24_fu_1251_p2;
wire   [7:0] add_ln124_26_fu_1281_p2;
wire   [0:0] trunc_ln246_fu_1307_p1;
wire   [6:0] lshr_ln_fu_1311_p4;
wire   [0:0] trunc_ln247_fu_1329_p1;
wire   [6:0] lshr_ln1_fu_1333_p4;
wire   [0:0] trunc_ln248_fu_1351_p1;
wire   [6:0] lshr_ln2_fu_1355_p4;
wire   [0:0] trunc_ln249_fu_1373_p1;
wire   [6:0] lshr_ln3_fu_1377_p4;
wire   [0:0] trunc_ln250_fu_1395_p1;
wire   [6:0] lshr_ln4_fu_1399_p4;
wire   [0:0] trunc_ln251_fu_1417_p1;
wire   [6:0] lshr_ln5_fu_1421_p4;
wire   [0:0] trunc_ln252_fu_1439_p1;
wire   [6:0] lshr_ln6_fu_1443_p4;
wire   [0:0] trunc_ln253_fu_1461_p1;
wire   [6:0] trunc_ln309_fu_1277_p1;
wire   [6:0] tmp_8_fu_1481_p4;
wire   [0:0] tmp_fu_1473_p3;
wire   [6:0] trunc_ln256_fu_1507_p1;
wire   [0:0] tmp_1_fu_1499_p3;
wire   [6:0] trunc_ln257_fu_1527_p1;
wire   [0:0] tmp_2_fu_1519_p3;
wire   [6:0] trunc_ln258_fu_1547_p1;
wire   [0:0] tmp_3_fu_1539_p3;
wire   [6:0] trunc_ln259_fu_1567_p1;
wire   [0:0] tmp_4_fu_1559_p3;
wire   [6:0] trunc_ln260_fu_1587_p1;
wire   [0:0] tmp_5_fu_1579_p3;
wire   [6:0] trunc_ln261_fu_1607_p1;
wire   [0:0] tmp_6_fu_1599_p3;
wire   [6:0] trunc_ln262_fu_1627_p1;
wire   [0:0] tmp_7_fu_1619_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_10_fu_214 <= fin_7_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_10_fu_214 <= t_26_fu_1551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_11_fu_218 <= fin_8_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_11_fu_218 <= t_27_fu_1571_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_12_fu_222 <= fin_9_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_12_fu_222 <= t_28_fu_1591_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_13_fu_226 <= fin_10_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_13_fu_226 <= t_29_fu_1611_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_14_fu_230 <= fin_11_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_14_fu_230 <= t_30_fu_1631_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_1_fu_178 <= fin_14_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_1_fu_178 <= t_17_fu_1365_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_2_fu_182 <= fin_15_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_2_fu_182 <= t_18_fu_1387_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_3_fu_186 <= fin_0_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_3_fu_186 <= t_19_fu_1409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_4_fu_190 <= fin_1_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_4_fu_190 <= t_20_fu_1431_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_5_fu_194 <= fin_2_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_5_fu_194 <= t_21_fu_1453_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_6_fu_198 <= fin_3_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_6_fu_198 <= t_22_fu_1465_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_7_fu_202 <= fin_4_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_7_fu_202 <= t_23_fu_1491_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_8_fu_206 <= fin_5_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_8_fu_206 <= t_24_fu_1511_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_9_fu_210 <= fin_6_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_9_fu_210 <= t_25_fu_1531_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dst_read_assign_fu_174 <= fin_13_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        dst_read_assign_fu_174 <= t_16_fu_1343_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_166 <= 4'd0;
    end else if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        i_fu_166 <= add_ln309_reg_1861;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx42_fu_162 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        idx42_fu_162 <= add_ln315_fu_1639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lk_0_fu_170 <= fin_12_reload;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        lk_0_fu_170 <= t_fu_1321_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln309_reg_1861 <= add_ln309_fu_751_p2;
        empty_46_reg_1890_pp0_iter1_reg <= empty_46_reg_1890;
        icmp_ln309_reg_1857 <= icmp_ln309_fu_745_p2;
        rk_addr_14_reg_2140[7 : 4] <= zext_ln124_27_fu_1256_p1[7 : 4];
        xor_ln124_14_reg_2145 <= xor_ln124_14_fu_1261_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln309_fu_745_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_46_reg_1890 <= empty_46_fu_776_p1;
        shl_ln_reg_1866[7 : 4] <= shl_ln_fu_757_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        idx42_load_1_reg_1899 <= idx42_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        or_ln124_1_reg_1956[2] <= or_ln124_1_fu_884_p2[2];
or_ln124_1_reg_1956[7 : 4] <= or_ln124_1_fu_884_p2[7 : 4];
        rk_addr_3_reg_1963[2] <= zext_ln124_5_fu_889_p1[2];
rk_addr_3_reg_1963[7 : 4] <= zext_ln124_5_fu_889_p1[7 : 4];
        xor_ln124_3_reg_1968 <= xor_ln124_3_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        or_ln124_2_reg_2023[7 : 4] <= or_ln124_2_fu_1016_p2[7 : 4];
        rk_addr_7_reg_2035[7 : 4] <= zext_ln124_13_fu_1021_p1[7 : 4];
        xor_ln124_7_reg_2040 <= xor_ln124_7_fu_1026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        or_ln124_reg_1921[2 : 1] <= or_ln124_fu_818_p2[2 : 1];
or_ln124_reg_1921[7 : 4] <= or_ln124_fu_818_p2[7 : 4];
        rk_addr_1_reg_1926[2 : 1] <= zext_ln124_1_fu_823_p1[2 : 1];
rk_addr_1_reg_1926[7 : 4] <= zext_ln124_1_fu_823_p1[7 : 4];
        xor_ln124_1_reg_1931 <= xor_ln124_1_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_648 <= con128_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_addr_10_reg_2080[7 : 4] <= zext_ln124_19_fu_1120_p1[7 : 4];
        xor_ln124_10_reg_2085 <= xor_ln124_10_fu_1125_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_addr_11_reg_2095[7 : 4] <= zext_ln124_21_fu_1153_p1[7 : 4];
        xor_ln124_11_reg_2100 <= xor_ln124_11_fu_1158_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_addr_12_reg_2110[7 : 4] <= zext_ln124_23_fu_1186_p1[7 : 4];
        xor_ln124_12_reg_2115 <= xor_ln124_12_fu_1191_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_addr_13_reg_2125[7 : 4] <= zext_ln124_25_fu_1219_p1[7 : 4];
        xor_ln124_13_reg_2130 <= xor_ln124_13_fu_1224_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_addr_2_reg_1941[7 : 1] <= zext_ln124_3_fu_856_p1[7 : 1];
        xor_ln124_2_reg_1946 <= xor_ln124_2_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_addr_4_reg_1978[7 : 2] <= zext_ln124_7_fu_922_p1[7 : 2];
        xor_ln124_4_reg_1983 <= xor_ln124_4_fu_927_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_addr_5_reg_1993[7 : 2] <= zext_ln124_9_fu_955_p1[7 : 2];
        xor_ln124_5_reg_1998 <= xor_ln124_5_fu_960_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_addr_6_reg_2008[7 : 2] <= zext_ln124_11_fu_988_p1[7 : 2];
        xor_ln124_6_reg_2013 <= xor_ln124_6_fu_993_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_addr_8_reg_2050[7 : 4] <= zext_ln124_15_fu_1054_p1[7 : 4];
        xor_ln124_8_reg_2055 <= xor_ln124_8_fu_1059_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_addr_9_reg_2065[7 : 4] <= zext_ln124_17_fu_1087_p1[7 : 4];
        xor_ln124_9_reg_2070 <= xor_ln124_9_fu_1092_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_addr_reg_1906[2 : 0] <= zext_ln300_fu_796_p1[2 : 0];
rk_addr_reg_1906[7 : 4] <= zext_ln300_fu_796_p1[7 : 4];
        xor_ln124_reg_1911 <= xor_ln124_fu_801_p2;
    end
end

always @ (*) begin
    if (((icmp_ln309_reg_1857 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_166;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            con128_address0 = zext_ln124_28_fu_1236_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            con128_address0 = zext_ln124_26_fu_1203_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            con128_address0 = zext_ln124_24_fu_1170_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            con128_address0 = zext_ln124_22_fu_1137_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            con128_address0 = zext_ln124_20_fu_1104_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            con128_address0 = zext_ln124_18_fu_1071_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            con128_address0 = zext_ln124_16_fu_1038_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            con128_address0 = zext_ln124_14_fu_1005_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            con128_address0 = zext_ln124_12_fu_972_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            con128_address0 = zext_ln124_10_fu_939_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            con128_address0 = zext_ln124_8_fu_906_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            con128_address0 = zext_ln124_6_fu_873_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            con128_address0 = zext_ln124_4_fu_840_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            con128_address0 = zext_ln124_2_fu_813_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            con128_address0 = zext_ln124_fu_785_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            con128_address0 = zext_ln310_fu_771_p1;
        end else begin
            con128_address0 = 'bx;
        end
    end else begin
        con128_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce0 = 1'b1;
    end else begin
        con128_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_address0 = rk_addr_14_reg_2140;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_address0 = rk_addr_13_reg_2125;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_address0 = zext_ln124_25_fu_1219_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_address0 = zext_ln124_23_fu_1186_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_address0 = zext_ln124_21_fu_1153_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_address0 = zext_ln124_19_fu_1120_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_address0 = zext_ln124_17_fu_1087_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_address0 = zext_ln124_15_fu_1054_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_address0 = zext_ln124_13_fu_1021_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_address0 = zext_ln124_11_fu_988_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_address0 = zext_ln124_9_fu_955_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_address0 = zext_ln124_7_fu_922_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_address0 = zext_ln124_5_fu_889_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_address0 = zext_ln124_3_fu_856_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_address0 = zext_ln124_1_fu_823_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_address0 = zext_ln300_fu_796_p1;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_address1 = zext_ln124_29_fu_1286_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_address1 = zext_ln124_27_fu_1256_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_address1 = rk_addr_12_reg_2110;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_address1 = rk_addr_11_reg_2095;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_address1 = rk_addr_10_reg_2080;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_address1 = rk_addr_9_reg_2065;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_address1 = rk_addr_8_reg_2050;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_address1 = rk_addr_7_reg_2035;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_address1 = rk_addr_6_reg_2008;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_address1 = rk_addr_5_reg_1993;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_address1 = rk_addr_4_reg_1978;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_address1 = rk_addr_3_reg_1963;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_address1 = rk_addr_2_reg_1941;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_address1 = rk_addr_1_reg_1926;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_address1 = rk_addr_reg_1906;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce0 = 1'b1;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce1 = 1'b1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_d0 = xor_ln124_30_fu_1298_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_d0 = xor_ln124_29_fu_1268_p2;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_d0 = xor_ln124_13_fu_1224_p2;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_d0 = xor_ln124_12_fu_1191_p2;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_d0 = xor_ln124_11_fu_1158_p2;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_d0 = xor_ln124_10_fu_1125_p2;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_d0 = xor_ln124_9_fu_1092_p2;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_d0 = xor_ln124_8_fu_1059_p2;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_d0 = xor_ln124_7_fu_1026_p2;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_d0 = xor_ln124_6_fu_993_p2;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_d0 = xor_ln124_5_fu_960_p2;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_d0 = xor_ln124_4_fu_927_p2;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_d0 = xor_ln124_3_fu_894_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_d0 = xor_ln124_2_fu_861_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_d0 = xor_ln124_1_fu_828_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_d0 = xor_ln124_fu_801_p2;
    end else begin
        rk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_d1 = xor_ln124_15_fu_1291_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_d1 = xor_ln124_14_fu_1261_p2;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_d1 = xor_ln124_28_fu_1241_p2;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_d1 = xor_ln124_27_fu_1208_p2;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_d1 = xor_ln124_26_fu_1175_p2;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_d1 = xor_ln124_25_fu_1142_p2;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_d1 = xor_ln124_24_fu_1109_p2;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_d1 = xor_ln124_23_fu_1076_p2;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_d1 = xor_ln124_22_fu_1043_p2;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_d1 = xor_ln124_21_fu_1010_p2;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_d1 = xor_ln124_20_fu_977_p2;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_d1 = xor_ln124_19_fu_944_p2;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_d1 = xor_ln124_18_fu_911_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_d1 = xor_ln124_17_fu_878_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_d1 = xor_ln124_16_fu_845_p2;
    end else begin
        rk_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_1890 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_46_reg_1890_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_we0 = 1'b1;
    end else begin
        rk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1857 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (empty_46_reg_1890 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_we1 = 1'b1;
    end else begin
        rk_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln124_10_fu_967_p2 = (shl_ln_reg_1866 + 8'd103);

assign add_ln124_11_fu_1000_p2 = (shl_ln_reg_1866 + 8'd104);

assign add_ln124_12_fu_1049_p2 = (or_ln124_2_reg_2023 + 8'd1);

assign add_ln124_13_fu_1033_p2 = (shl_ln_reg_1866 + 8'd105);

assign add_ln124_14_fu_1082_p2 = (or_ln124_2_reg_2023 + 8'd2);

assign add_ln124_15_fu_1066_p2 = (shl_ln_reg_1866 + 8'd106);

assign add_ln124_16_fu_1115_p2 = (or_ln124_2_reg_2023 + 8'd3);

assign add_ln124_17_fu_1099_p2 = (shl_ln_reg_1866 + 8'd107);

assign add_ln124_18_fu_1148_p2 = (or_ln124_2_reg_2023 + 8'd4);

assign add_ln124_19_fu_1132_p2 = (shl_ln_reg_1866 + 8'd108);

assign add_ln124_1_fu_808_p2 = (shl_ln_reg_1866 + 8'd98);

assign add_ln124_20_fu_1181_p2 = (or_ln124_2_reg_2023 + 8'd5);

assign add_ln124_21_fu_1165_p2 = (shl_ln_reg_1866 + 8'd109);

assign add_ln124_22_fu_1214_p2 = (or_ln124_2_reg_2023 + 8'd6);

assign add_ln124_23_fu_1198_p2 = (shl_ln_reg_1866 + 8'd110);

assign add_ln124_24_fu_1251_p2 = (or_ln124_2_reg_2023 + 8'd7);

assign add_ln124_25_fu_1231_p2 = (shl_ln_reg_1866 + 8'd111);

assign add_ln124_26_fu_1281_p2 = (or_ln124_2_reg_2023 + 8'd8);

assign add_ln124_2_fu_851_p2 = (or_ln124_reg_1921 + 8'd1);

assign add_ln124_3_fu_835_p2 = (shl_ln_reg_1866 + 8'd99);

assign add_ln124_4_fu_868_p2 = (shl_ln_reg_1866 + 8'd100);

assign add_ln124_5_fu_917_p2 = (or_ln124_1_reg_1956 + 8'd1);

assign add_ln124_6_fu_901_p2 = (shl_ln_reg_1866 + 8'd101);

assign add_ln124_7_fu_950_p2 = (or_ln124_1_reg_1956 + 8'd2);

assign add_ln124_8_fu_934_p2 = (shl_ln_reg_1866 + 8'd102);

assign add_ln124_9_fu_983_p2 = (or_ln124_1_reg_1956 + 8'd3);

assign add_ln124_fu_780_p2 = (shl_ln_reg_1866 + 8'd97);

assign add_ln309_fu_751_p2 = (ap_sig_allocacmp_i_3 + 4'd1);

assign add_ln310_fu_765_p2 = (shl_ln_fu_757_p3 + 8'd96);

assign add_ln315_fu_1639_p2 = (idx42_fu_162 + 8'd16);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign empty_46_fu_776_p1 = ap_sig_allocacmp_i_3[0:0];

assign icmp_ln309_fu_745_p2 = ((ap_sig_allocacmp_i_3 == 4'd9) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_1333_p4 = {{dst_read_assign_1_fu_178[7:1]}};

assign lshr_ln2_fu_1355_p4 = {{dst_read_assign_2_fu_182[7:1]}};

assign lshr_ln3_fu_1377_p4 = {{dst_read_assign_3_fu_186[7:1]}};

assign lshr_ln4_fu_1399_p4 = {{dst_read_assign_4_fu_190[7:1]}};

assign lshr_ln5_fu_1421_p4 = {{dst_read_assign_5_fu_194[7:1]}};

assign lshr_ln6_fu_1443_p4 = {{dst_read_assign_6_fu_198[7:1]}};

assign lshr_ln_fu_1311_p4 = {{dst_read_assign_fu_174[7:1]}};

assign or_ln124_1_fu_884_p2 = (idx42_load_1_reg_1899 | 8'd11);

assign or_ln124_2_fu_1016_p2 = (idx42_load_1_reg_1899 | 8'd15);

assign or_ln124_fu_818_p2 = (idx42_load_1_reg_1899 | 8'd9);

assign or_ln300_fu_790_p2 = (idx42_fu_162 | 8'd8);

assign shl_ln_fu_757_p3 = {{ap_sig_allocacmp_i_3}, {4'd0}};

assign t_16_fu_1343_p3 = {{trunc_ln247_fu_1329_p1}, {lshr_ln1_fu_1333_p4}};

assign t_17_fu_1365_p3 = {{trunc_ln248_fu_1351_p1}, {lshr_ln2_fu_1355_p4}};

assign t_18_fu_1387_p3 = {{trunc_ln249_fu_1373_p1}, {lshr_ln3_fu_1377_p4}};

assign t_19_fu_1409_p3 = {{trunc_ln250_fu_1395_p1}, {lshr_ln4_fu_1399_p4}};

assign t_20_fu_1431_p3 = {{trunc_ln251_fu_1417_p1}, {lshr_ln5_fu_1421_p4}};

assign t_21_fu_1453_p3 = {{trunc_ln252_fu_1439_p1}, {lshr_ln6_fu_1443_p4}};

assign t_22_fu_1465_p3 = {{trunc_ln253_fu_1461_p1}, {trunc_ln309_fu_1277_p1}};

assign t_23_fu_1491_p3 = {{tmp_8_fu_1481_p4}, {tmp_fu_1473_p3}};

assign t_24_fu_1511_p3 = {{trunc_ln256_fu_1507_p1}, {tmp_1_fu_1499_p3}};

assign t_25_fu_1531_p3 = {{trunc_ln257_fu_1527_p1}, {tmp_2_fu_1519_p3}};

assign t_26_fu_1551_p3 = {{trunc_ln258_fu_1547_p1}, {tmp_3_fu_1539_p3}};

assign t_27_fu_1571_p3 = {{trunc_ln259_fu_1567_p1}, {tmp_4_fu_1559_p3}};

assign t_28_fu_1591_p3 = {{trunc_ln260_fu_1587_p1}, {tmp_5_fu_1579_p3}};

assign t_29_fu_1611_p3 = {{trunc_ln261_fu_1607_p1}, {tmp_6_fu_1599_p3}};

assign t_30_fu_1631_p3 = {{trunc_ln262_fu_1627_p1}, {tmp_7_fu_1619_p3}};

assign t_fu_1321_p3 = {{trunc_ln246_fu_1307_p1}, {lshr_ln_fu_1311_p4}};

assign tmp_1_fu_1499_p3 = dst_read_assign_8_fu_206[32'd7];

assign tmp_2_fu_1519_p3 = dst_read_assign_9_fu_210[32'd7];

assign tmp_3_fu_1539_p3 = dst_read_assign_10_fu_214[32'd7];

assign tmp_4_fu_1559_p3 = dst_read_assign_11_fu_218[32'd7];

assign tmp_5_fu_1579_p3 = dst_read_assign_12_fu_222[32'd7];

assign tmp_6_fu_1599_p3 = dst_read_assign_13_fu_226[32'd7];

assign tmp_7_fu_1619_p3 = dst_read_assign_14_fu_230[32'd7];

assign tmp_8_fu_1481_p4 = {{lk_0_fu_170[7:1]}};

assign tmp_fu_1473_p3 = dst_read_assign_7_fu_202[32'd7];

assign trunc_ln246_fu_1307_p1 = lk_0_fu_170[0:0];

assign trunc_ln247_fu_1329_p1 = dst_read_assign_fu_174[0:0];

assign trunc_ln248_fu_1351_p1 = dst_read_assign_1_fu_178[0:0];

assign trunc_ln249_fu_1373_p1 = dst_read_assign_2_fu_182[0:0];

assign trunc_ln250_fu_1395_p1 = dst_read_assign_3_fu_186[0:0];

assign trunc_ln251_fu_1417_p1 = dst_read_assign_4_fu_190[0:0];

assign trunc_ln252_fu_1439_p1 = dst_read_assign_5_fu_194[0:0];

assign trunc_ln253_fu_1461_p1 = dst_read_assign_6_fu_198[0:0];

assign trunc_ln256_fu_1507_p1 = dst_read_assign_7_fu_202[6:0];

assign trunc_ln257_fu_1527_p1 = dst_read_assign_8_fu_206[6:0];

assign trunc_ln258_fu_1547_p1 = dst_read_assign_9_fu_210[6:0];

assign trunc_ln259_fu_1567_p1 = dst_read_assign_10_fu_214[6:0];

assign trunc_ln260_fu_1587_p1 = dst_read_assign_11_fu_218[6:0];

assign trunc_ln261_fu_1607_p1 = dst_read_assign_12_fu_222[6:0];

assign trunc_ln262_fu_1627_p1 = dst_read_assign_13_fu_226[6:0];

assign trunc_ln309_fu_1277_p1 = dst_read_assign_14_fu_230[6:0];

assign xor_ln124_10_fu_1125_p2 = (reg_648 ^ dst_read_assign_9_fu_210);

assign xor_ln124_11_fu_1158_p2 = (reg_648 ^ dst_read_assign_10_fu_214);

assign xor_ln124_12_fu_1191_p2 = (reg_648 ^ dst_read_assign_11_fu_218);

assign xor_ln124_13_fu_1224_p2 = (reg_648 ^ dst_read_assign_12_fu_222);

assign xor_ln124_14_fu_1261_p2 = (reg_648 ^ dst_read_assign_13_fu_226);

assign xor_ln124_15_fu_1291_p2 = (reg_648 ^ dst_read_assign_14_fu_230);

assign xor_ln124_16_fu_845_p2 = (xor_ln124_reg_1911 ^ 8'd255);

assign xor_ln124_17_fu_878_p2 = (xor_ln124_1_reg_1931 ^ 8'd238);

assign xor_ln124_18_fu_911_p2 = (xor_ln124_2_reg_1946 ^ 8'd221);

assign xor_ln124_19_fu_944_p2 = (xor_ln124_3_reg_1968 ^ 8'd204);

assign xor_ln124_1_fu_828_p2 = (reg_648 ^ dst_read_assign_fu_174);

assign xor_ln124_20_fu_977_p2 = (xor_ln124_4_reg_1983 ^ 8'd187);

assign xor_ln124_21_fu_1010_p2 = (xor_ln124_5_reg_1998 ^ 8'd170);

assign xor_ln124_22_fu_1043_p2 = (xor_ln124_6_reg_2013 ^ 8'd153);

assign xor_ln124_23_fu_1076_p2 = (xor_ln124_7_reg_2040 ^ 8'd136);

assign xor_ln124_24_fu_1109_p2 = (xor_ln124_8_reg_2055 ^ 8'd119);

assign xor_ln124_25_fu_1142_p2 = (xor_ln124_9_reg_2070 ^ 8'd102);

assign xor_ln124_26_fu_1175_p2 = (xor_ln124_10_reg_2085 ^ 8'd85);

assign xor_ln124_27_fu_1208_p2 = (xor_ln124_11_reg_2100 ^ 8'd68);

assign xor_ln124_28_fu_1241_p2 = (xor_ln124_12_reg_2115 ^ 8'd51);

assign xor_ln124_29_fu_1268_p2 = (xor_ln124_13_reg_2130 ^ 8'd34);

assign xor_ln124_2_fu_861_p2 = (reg_648 ^ dst_read_assign_1_fu_178);

assign xor_ln124_30_fu_1298_p2 = (xor_ln124_14_reg_2145 ^ 8'd17);

assign xor_ln124_3_fu_894_p2 = (reg_648 ^ dst_read_assign_2_fu_182);

assign xor_ln124_4_fu_927_p2 = (reg_648 ^ dst_read_assign_3_fu_186);

assign xor_ln124_5_fu_960_p2 = (reg_648 ^ dst_read_assign_4_fu_190);

assign xor_ln124_6_fu_993_p2 = (reg_648 ^ dst_read_assign_5_fu_194);

assign xor_ln124_7_fu_1026_p2 = (reg_648 ^ dst_read_assign_6_fu_198);

assign xor_ln124_8_fu_1059_p2 = (reg_648 ^ dst_read_assign_7_fu_202);

assign xor_ln124_9_fu_1092_p2 = (reg_648 ^ dst_read_assign_8_fu_206);

assign xor_ln124_fu_801_p2 = (reg_648 ^ lk_0_fu_170);

assign zext_ln124_10_fu_939_p1 = add_ln124_8_fu_934_p2;

assign zext_ln124_11_fu_988_p1 = add_ln124_9_fu_983_p2;

assign zext_ln124_12_fu_972_p1 = add_ln124_10_fu_967_p2;

assign zext_ln124_13_fu_1021_p1 = or_ln124_2_fu_1016_p2;

assign zext_ln124_14_fu_1005_p1 = add_ln124_11_fu_1000_p2;

assign zext_ln124_15_fu_1054_p1 = add_ln124_12_fu_1049_p2;

assign zext_ln124_16_fu_1038_p1 = add_ln124_13_fu_1033_p2;

assign zext_ln124_17_fu_1087_p1 = add_ln124_14_fu_1082_p2;

assign zext_ln124_18_fu_1071_p1 = add_ln124_15_fu_1066_p2;

assign zext_ln124_19_fu_1120_p1 = add_ln124_16_fu_1115_p2;

assign zext_ln124_1_fu_823_p1 = or_ln124_fu_818_p2;

assign zext_ln124_20_fu_1104_p1 = add_ln124_17_fu_1099_p2;

assign zext_ln124_21_fu_1153_p1 = add_ln124_18_fu_1148_p2;

assign zext_ln124_22_fu_1137_p1 = add_ln124_19_fu_1132_p2;

assign zext_ln124_23_fu_1186_p1 = add_ln124_20_fu_1181_p2;

assign zext_ln124_24_fu_1170_p1 = add_ln124_21_fu_1165_p2;

assign zext_ln124_25_fu_1219_p1 = add_ln124_22_fu_1214_p2;

assign zext_ln124_26_fu_1203_p1 = add_ln124_23_fu_1198_p2;

assign zext_ln124_27_fu_1256_p1 = add_ln124_24_fu_1251_p2;

assign zext_ln124_28_fu_1236_p1 = add_ln124_25_fu_1231_p2;

assign zext_ln124_29_fu_1286_p1 = add_ln124_26_fu_1281_p2;

assign zext_ln124_2_fu_813_p1 = add_ln124_1_fu_808_p2;

assign zext_ln124_3_fu_856_p1 = add_ln124_2_fu_851_p2;

assign zext_ln124_4_fu_840_p1 = add_ln124_3_fu_835_p2;

assign zext_ln124_5_fu_889_p1 = or_ln124_1_fu_884_p2;

assign zext_ln124_6_fu_873_p1 = add_ln124_4_fu_868_p2;

assign zext_ln124_7_fu_922_p1 = add_ln124_5_fu_917_p2;

assign zext_ln124_8_fu_906_p1 = add_ln124_6_fu_901_p2;

assign zext_ln124_9_fu_955_p1 = add_ln124_7_fu_950_p2;

assign zext_ln124_fu_785_p1 = add_ln124_fu_780_p2;

assign zext_ln300_fu_796_p1 = or_ln300_fu_790_p2;

assign zext_ln310_fu_771_p1 = add_ln310_fu_765_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1866[3:0] <= 4'b0000;
    rk_addr_reg_1906[3] <= 1'b1;
    or_ln124_reg_1921[0] <= 1'b1;
    or_ln124_reg_1921[3] <= 1'b1;
    rk_addr_1_reg_1926[0] <= 1'b1;
    rk_addr_1_reg_1926[3] <= 1'b1;
    rk_addr_2_reg_1941[0] <= 1'b0;
    or_ln124_1_reg_1956[1:0] <= 2'b11;
    or_ln124_1_reg_1956[3] <= 1'b1;
    rk_addr_3_reg_1963[1:0] <= 2'b11;
    rk_addr_3_reg_1963[3] <= 1'b1;
    rk_addr_4_reg_1978[1:0] <= 2'b00;
    rk_addr_5_reg_1993[1:0] <= 2'b01;
    rk_addr_6_reg_2008[1:0] <= 2'b10;
    or_ln124_2_reg_2023[3:0] <= 4'b1111;
    rk_addr_7_reg_2035[3:0] <= 4'b1111;
    rk_addr_8_reg_2050[3:0] <= 4'b0000;
    rk_addr_9_reg_2065[3:0] <= 4'b0001;
    rk_addr_10_reg_2080[3:0] <= 4'b0010;
    rk_addr_11_reg_2095[3:0] <= 4'b0011;
    rk_addr_12_reg_2110[3:0] <= 4'b0100;
    rk_addr_13_reg_2125[3:0] <= 4'b0101;
    rk_addr_14_reg_2140[3:0] <= 4'b0110;
end

endmodule //clefia_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7
