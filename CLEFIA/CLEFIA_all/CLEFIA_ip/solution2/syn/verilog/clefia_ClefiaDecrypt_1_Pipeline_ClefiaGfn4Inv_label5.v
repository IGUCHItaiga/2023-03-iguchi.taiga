// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rin_44,
        rin_43,
        rin_42,
        rin_41,
        p_read11,
        p_read10,
        p_read9,
        p_read8,
        rin_40,
        rin_39,
        rin_38,
        rin,
        p_read3,
        p_read2,
        p_read1,
        p_read,
        r_cast2,
        shl_ln,
        rk_address0,
        rk_ce0,
        rk_q0,
        rk_address1,
        rk_ce1,
        rk_q1,
        fin_4_out,
        fin_4_out_ap_vld,
        fin_5_out,
        fin_5_out_ap_vld,
        fin_6_out,
        fin_6_out_ap_vld,
        fin_7_out,
        fin_7_out_ap_vld,
        fin_8_out,
        fin_8_out_ap_vld,
        fin_9_out,
        fin_9_out_ap_vld,
        fin_10_out,
        fin_10_out_ap_vld,
        fin_11_out,
        fin_11_out_ap_vld,
        fin_12_out,
        fin_12_out_ap_vld,
        fin_13_out,
        fin_13_out_ap_vld,
        fin_14_out,
        fin_14_out_ap_vld,
        fin_15_out,
        fin_15_out_ap_vld,
        fin_0_out,
        fin_0_out_ap_vld,
        fin_1_out,
        fin_1_out_ap_vld,
        fin_2_out,
        fin_2_out_ap_vld,
        fin_3_out,
        fin_3_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] rin_44;
input  [7:0] rin_43;
input  [7:0] rin_42;
input  [7:0] rin_41;
input  [7:0] p_read11;
input  [7:0] p_read10;
input  [7:0] p_read9;
input  [7:0] p_read8;
input  [7:0] rin_40;
input  [7:0] rin_39;
input  [7:0] rin_38;
input  [7:0] rin;
input  [7:0] p_read3;
input  [7:0] p_read2;
input  [7:0] p_read1;
input  [7:0] p_read;
input  [4:0] r_cast2;
input  [7:0] shl_ln;
output  [7:0] rk_address0;
output   rk_ce0;
input  [7:0] rk_q0;
output  [7:0] rk_address1;
output   rk_ce1;
input  [7:0] rk_q1;
output  [7:0] fin_4_out;
output   fin_4_out_ap_vld;
output  [7:0] fin_5_out;
output   fin_5_out_ap_vld;
output  [7:0] fin_6_out;
output   fin_6_out_ap_vld;
output  [7:0] fin_7_out;
output   fin_7_out_ap_vld;
output  [7:0] fin_8_out;
output   fin_8_out_ap_vld;
output  [7:0] fin_9_out;
output   fin_9_out_ap_vld;
output  [7:0] fin_10_out;
output   fin_10_out_ap_vld;
output  [7:0] fin_11_out;
output   fin_11_out_ap_vld;
output  [7:0] fin_12_out;
output   fin_12_out_ap_vld;
output  [7:0] fin_13_out;
output   fin_13_out_ap_vld;
output  [7:0] fin_14_out;
output   fin_14_out_ap_vld;
output  [7:0] fin_15_out;
output   fin_15_out_ap_vld;
output  [7:0] fin_0_out;
output   fin_0_out_ap_vld;
output  [7:0] fin_1_out;
output   fin_1_out_ap_vld;
output  [7:0] fin_2_out;
output   fin_2_out_ap_vld;
output  [7:0] fin_3_out;
output   fin_3_out_ap_vld;

reg ap_idle;
reg[7:0] rk_address0;
reg rk_ce0;
reg[7:0] rk_address1;
reg rk_ce1;
reg fin_4_out_ap_vld;
reg fin_5_out_ap_vld;
reg fin_6_out_ap_vld;
reg fin_7_out_ap_vld;
reg fin_8_out_ap_vld;
reg fin_9_out_ap_vld;
reg fin_10_out_ap_vld;
reg fin_11_out_ap_vld;
reg fin_12_out_ap_vld;
reg fin_13_out_ap_vld;
reg fin_14_out_ap_vld;
reg fin_15_out_ap_vld;
reg fin_0_out_ap_vld;
reg fin_1_out_ap_vld;
reg fin_2_out_ap_vld;
reg fin_3_out_ap_vld;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire   [0:0] icmp_ln230_fu_660_p2;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [35:0] idx_load_reg_1040;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] fin_0_4_0_load_reg_1045;
reg   [7:0] fin_1_4_0_load_reg_1051;
reg   [7:0] fin_2_4_0_load_reg_1057;
reg   [7:0] fin_3_4_0_load_reg_1063;
reg   [7:0] fin_4_5_0_load_reg_1069;
reg   [7:0] fin_5_5_0_load_reg_1075;
reg   [7:0] fin_6_5_0_load_reg_1081;
reg   [7:0] fin_7_5_0_load_reg_1087;
wire   [7:0] add_ln224_fu_575_p2;
reg   [7:0] add_ln224_reg_1093;
reg   [7:0] fin_4_reg_1099;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [7:0] fin_5_reg_1105;
reg   [7:0] fin_6_reg_1111;
reg   [7:0] fin_7_reg_1117;
reg   [7:0] fin_8_reg_1123;
reg   [7:0] fin_9_reg_1129;
reg   [7:0] fin_10_reg_1135;
reg   [7:0] fin_11_reg_1141;
reg   [7:0] fin_8_4_0_load_reg_1147;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [7:0] fin_9_4_0_load_reg_1153;
reg   [7:0] fin_10_4_0_load_reg_1159;
reg   [7:0] fin_11_4_0_load_reg_1165;
reg   [7:0] fin_12_5_0_load_reg_1171;
reg   [7:0] fin_13_5_0_load_reg_1177;
reg   [7:0] fin_14_5_0_load_reg_1183;
reg   [7:0] fin_15_5_0_load_reg_1189;
wire   [31:0] add_ln224_1_fu_654_p2;
reg   [31:0] add_ln224_1_reg_1195;
wire    ap_block_pp0_stage10_11001;
reg   [0:0] icmp_ln230_reg_1201;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    grp_ClefiaF0Xor_fu_404_ap_start;
wire    grp_ClefiaF0Xor_fu_404_ap_done;
wire    grp_ClefiaF0Xor_fu_404_ap_idle;
wire    grp_ClefiaF0Xor_fu_404_ap_ready;
wire   [7:0] grp_ClefiaF0Xor_fu_404_rk_address0;
wire    grp_ClefiaF0Xor_fu_404_rk_ce0;
wire   [7:0] grp_ClefiaF0Xor_fu_404_rk_address1;
wire    grp_ClefiaF0Xor_fu_404_rk_ce1;
wire   [7:0] grp_ClefiaF0Xor_fu_404_rk_offset;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_0;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_1;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_2;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_3;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_4;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_5;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_6;
wire   [7:0] grp_ClefiaF0Xor_fu_404_ap_return_7;
wire    grp_ClefiaF1Xor_3_fu_423_ap_start;
wire    grp_ClefiaF1Xor_3_fu_423_ap_done;
wire    grp_ClefiaF1Xor_3_fu_423_ap_idle;
wire    grp_ClefiaF1Xor_3_fu_423_ap_ready;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_rk_address0;
wire    grp_ClefiaF1Xor_3_fu_423_rk_ce0;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_rk_address1;
wire    grp_ClefiaF1Xor_3_fu_423_rk_ce1;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_rk_offset;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_0;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_1;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_2;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_3;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_4;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_5;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_6;
wire   [7:0] grp_ClefiaF1Xor_3_fu_423_ap_return_7;
reg    grp_ClefiaF0Xor_fu_404_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
reg    grp_ClefiaF1Xor_3_fu_423_ap_start_reg;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
reg   [35:0] idx_fu_112;
wire   [35:0] add_ln233_fu_706_p2;
wire    ap_loop_init;
reg   [31:0] dec12_i_in_fu_116;
wire   [31:0] r_cast2_cast_fu_442_p1;
reg   [7:0] fin_0_4_0_fu_120;
wire   [7:0] select_ln234_15_fu_813_p3;
reg   [7:0] fin_1_4_0_fu_124;
wire   [7:0] select_ln234_14_fu_806_p3;
reg   [7:0] fin_2_4_0_fu_128;
wire   [7:0] select_ln234_13_fu_799_p3;
reg   [7:0] fin_3_4_0_fu_132;
wire   [7:0] select_ln234_12_fu_792_p3;
reg   [7:0] fin_4_5_0_fu_136;
wire   [7:0] select_ln234_11_fu_786_p3;
reg   [7:0] fin_5_5_0_fu_140;
wire   [7:0] select_ln234_10_fu_780_p3;
reg   [7:0] fin_6_5_0_fu_144;
wire   [7:0] select_ln234_9_fu_774_p3;
reg   [7:0] fin_7_5_0_fu_148;
wire   [7:0] select_ln234_8_fu_768_p3;
reg   [7:0] fin_8_4_0_fu_152;
wire   [7:0] select_ln234_7_fu_762_p3;
reg   [7:0] fin_9_4_0_fu_156;
wire   [7:0] select_ln234_6_fu_756_p3;
reg   [7:0] fin_10_4_0_fu_160;
wire   [7:0] select_ln234_5_fu_750_p3;
reg   [7:0] fin_11_4_0_fu_164;
wire   [7:0] select_ln234_4_fu_744_p3;
reg   [7:0] fin_12_5_0_fu_168;
wire   [7:0] select_ln234_3_fu_737_p3;
reg   [7:0] fin_13_5_0_fu_172;
wire   [7:0] select_ln234_2_fu_730_p3;
reg   [7:0] fin_14_5_0_fu_176;
wire   [7:0] select_ln234_1_fu_723_p3;
reg   [7:0] fin_15_5_0_fu_180;
wire   [7:0] select_ln234_fu_716_p3;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [7:0] trunc_ln224_fu_571_p1;
wire   [0:0] icmp_ln234_fu_711_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_ClefiaF0Xor_fu_404_ap_start_reg = 1'b0;
#0 grp_ClefiaF1Xor_3_fu_423_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

clefia_ClefiaF0Xor grp_ClefiaF0Xor_fu_404(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF0Xor_fu_404_ap_start),
    .ap_done(grp_ClefiaF0Xor_fu_404_ap_done),
    .ap_idle(grp_ClefiaF0Xor_fu_404_ap_idle),
    .ap_ready(grp_ClefiaF0Xor_fu_404_ap_ready),
    .p_read8(fin_0_4_0_fu_120),
    .p_read23(fin_1_4_0_fu_124),
    .p_read24(fin_2_4_0_fu_128),
    .p_read25(fin_3_4_0_fu_132),
    .p_read26(fin_4_5_0_fu_136),
    .p_read27(fin_5_5_0_fu_140),
    .p_read28(fin_6_5_0_fu_144),
    .p_read29(fin_7_5_0_fu_148),
    .rk_address0(grp_ClefiaF0Xor_fu_404_rk_address0),
    .rk_ce0(grp_ClefiaF0Xor_fu_404_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaF0Xor_fu_404_rk_address1),
    .rk_ce1(grp_ClefiaF0Xor_fu_404_rk_ce1),
    .rk_q1(rk_q1),
    .rk_offset(grp_ClefiaF0Xor_fu_404_rk_offset),
    .ap_return_0(grp_ClefiaF0Xor_fu_404_ap_return_0),
    .ap_return_1(grp_ClefiaF0Xor_fu_404_ap_return_1),
    .ap_return_2(grp_ClefiaF0Xor_fu_404_ap_return_2),
    .ap_return_3(grp_ClefiaF0Xor_fu_404_ap_return_3),
    .ap_return_4(grp_ClefiaF0Xor_fu_404_ap_return_4),
    .ap_return_5(grp_ClefiaF0Xor_fu_404_ap_return_5),
    .ap_return_6(grp_ClefiaF0Xor_fu_404_ap_return_6),
    .ap_return_7(grp_ClefiaF0Xor_fu_404_ap_return_7)
);

clefia_ClefiaF1Xor_3 grp_ClefiaF1Xor_3_fu_423(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF1Xor_3_fu_423_ap_start),
    .ap_done(grp_ClefiaF1Xor_3_fu_423_ap_done),
    .ap_idle(grp_ClefiaF1Xor_3_fu_423_ap_idle),
    .ap_ready(grp_ClefiaF1Xor_3_fu_423_ap_ready),
    .src_8_read(fin_8_4_0_fu_152),
    .src_9_read(fin_9_4_0_fu_156),
    .src_10_read(fin_10_4_0_fu_160),
    .src_11_read(fin_11_4_0_fu_164),
    .src_12_read(fin_12_5_0_fu_168),
    .src_13_read(fin_13_5_0_fu_172),
    .src_14_read(fin_14_5_0_fu_176),
    .src_15_read(fin_15_5_0_fu_180),
    .rk_address0(grp_ClefiaF1Xor_3_fu_423_rk_address0),
    .rk_ce0(grp_ClefiaF1Xor_3_fu_423_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaF1Xor_3_fu_423_rk_address1),
    .rk_ce1(grp_ClefiaF1Xor_3_fu_423_rk_ce1),
    .rk_q1(rk_q1),
    .rk_offset(grp_ClefiaF1Xor_3_fu_423_rk_offset),
    .ap_return_0(grp_ClefiaF1Xor_3_fu_423_ap_return_0),
    .ap_return_1(grp_ClefiaF1Xor_3_fu_423_ap_return_1),
    .ap_return_2(grp_ClefiaF1Xor_3_fu_423_ap_return_2),
    .ap_return_3(grp_ClefiaF1Xor_3_fu_423_ap_return_3),
    .ap_return_4(grp_ClefiaF1Xor_3_fu_423_ap_return_4),
    .ap_return_5(grp_ClefiaF1Xor_3_fu_423_ap_return_5),
    .ap_return_6(grp_ClefiaF1Xor_3_fu_423_ap_return_6),
    .ap_return_7(grp_ClefiaF1Xor_3_fu_423_ap_return_7)
);

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF0Xor_fu_404_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_ClefiaF0Xor_fu_404_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF0Xor_fu_404_ap_ready == 1'b1)) begin
            grp_ClefiaF0Xor_fu_404_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF1Xor_3_fu_423_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_ClefiaF1Xor_3_fu_423_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF1Xor_3_fu_423_ap_ready == 1'b1)) begin
            grp_ClefiaF1Xor_3_fu_423_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            dec12_i_in_fu_116 <= r_cast2_cast_fu_442_p1;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            dec12_i_in_fu_116 <= add_ln224_1_reg_1195;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_0_4_0_fu_120 <= p_read;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_0_4_0_fu_120 <= select_ln234_15_fu_813_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_10_4_0_fu_160 <= p_read10;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_10_4_0_fu_160 <= select_ln234_5_fu_750_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_11_4_0_fu_164 <= p_read11;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_11_4_0_fu_164 <= select_ln234_4_fu_744_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_12_5_0_fu_168 <= rin_41;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_12_5_0_fu_168 <= select_ln234_3_fu_737_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_13_5_0_fu_172 <= rin_42;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_13_5_0_fu_172 <= select_ln234_2_fu_730_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_14_5_0_fu_176 <= rin_43;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_14_5_0_fu_176 <= select_ln234_1_fu_723_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_15_5_0_fu_180 <= rin_44;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_15_5_0_fu_180 <= select_ln234_fu_716_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_1_4_0_fu_124 <= p_read1;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_1_4_0_fu_124 <= select_ln234_14_fu_806_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_2_4_0_fu_128 <= p_read2;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_2_4_0_fu_128 <= select_ln234_13_fu_799_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_3_4_0_fu_132 <= p_read3;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_3_4_0_fu_132 <= select_ln234_12_fu_792_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_4_5_0_fu_136 <= rin;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_4_5_0_fu_136 <= select_ln234_11_fu_786_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_5_5_0_fu_140 <= rin_38;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_5_5_0_fu_140 <= select_ln234_10_fu_780_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_6_5_0_fu_144 <= rin_39;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_6_5_0_fu_144 <= select_ln234_9_fu_774_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_7_5_0_fu_148 <= rin_40;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_7_5_0_fu_148 <= select_ln234_8_fu_768_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_8_4_0_fu_152 <= p_read8;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_8_4_0_fu_152 <= select_ln234_7_fu_762_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_9_4_0_fu_156 <= p_read9;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            fin_9_4_0_fu_156 <= select_ln234_6_fu_756_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            idx_fu_112 <= 36'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd1))) begin
            idx_fu_112 <= add_ln233_fu_706_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln224_1_reg_1195 <= add_ln224_1_fu_654_p2;
        icmp_ln230_reg_1201 <= icmp_ln230_fu_660_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln224_reg_1093 <= add_ln224_fu_575_p2;
        fin_0_4_0_load_reg_1045 <= fin_0_4_0_fu_120;
        fin_1_4_0_load_reg_1051 <= fin_1_4_0_fu_124;
        fin_2_4_0_load_reg_1057 <= fin_2_4_0_fu_128;
        fin_3_4_0_load_reg_1063 <= fin_3_4_0_fu_132;
        fin_4_5_0_load_reg_1069 <= fin_4_5_0_fu_136;
        fin_5_5_0_load_reg_1075 <= fin_5_5_0_fu_140;
        fin_6_5_0_load_reg_1081 <= fin_6_5_0_fu_144;
        fin_7_5_0_load_reg_1087 <= fin_7_5_0_fu_148;
        idx_load_reg_1040 <= idx_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        fin_10_4_0_load_reg_1159 <= fin_10_4_0_fu_160;
        fin_11_4_0_load_reg_1165 <= fin_11_4_0_fu_164;
        fin_12_5_0_load_reg_1171 <= fin_12_5_0_fu_168;
        fin_13_5_0_load_reg_1177 <= fin_13_5_0_fu_172;
        fin_14_5_0_load_reg_1183 <= fin_14_5_0_fu_176;
        fin_15_5_0_load_reg_1189 <= fin_15_5_0_fu_180;
        fin_8_4_0_load_reg_1147 <= fin_8_4_0_fu_152;
        fin_9_4_0_load_reg_1153 <= fin_9_4_0_fu_156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        fin_10_reg_1135 <= grp_ClefiaF0Xor_fu_404_ap_return_6;
        fin_11_reg_1141 <= grp_ClefiaF0Xor_fu_404_ap_return_7;
        fin_4_reg_1099 <= grp_ClefiaF0Xor_fu_404_ap_return_0;
        fin_5_reg_1105 <= grp_ClefiaF0Xor_fu_404_ap_return_1;
        fin_6_reg_1111 <= grp_ClefiaF0Xor_fu_404_ap_return_2;
        fin_7_reg_1117 <= grp_ClefiaF0Xor_fu_404_ap_return_3;
        fin_8_reg_1123 <= grp_ClefiaF0Xor_fu_404_ap_return_4;
        fin_9_reg_1129 <= grp_ClefiaF0Xor_fu_404_ap_return_5;
    end
end

always @ (*) begin
    if (((icmp_ln230_fu_660_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_0_out_ap_vld = 1'b1;
    end else begin
        fin_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_10_out_ap_vld = 1'b1;
    end else begin
        fin_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_11_out_ap_vld = 1'b1;
    end else begin
        fin_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_12_out_ap_vld = 1'b1;
    end else begin
        fin_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_13_out_ap_vld = 1'b1;
    end else begin
        fin_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_14_out_ap_vld = 1'b1;
    end else begin
        fin_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_15_out_ap_vld = 1'b1;
    end else begin
        fin_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_1_out_ap_vld = 1'b1;
    end else begin
        fin_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_2_out_ap_vld = 1'b1;
    end else begin
        fin_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_3_out_ap_vld = 1'b1;
    end else begin
        fin_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_4_out_ap_vld = 1'b1;
    end else begin
        fin_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_5_out_ap_vld = 1'b1;
    end else begin
        fin_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_6_out_ap_vld = 1'b1;
    end else begin
        fin_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_7_out_ap_vld = 1'b1;
    end else begin
        fin_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_8_out_ap_vld = 1'b1;
    end else begin
        fin_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln230_reg_1201 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_9_out_ap_vld = 1'b1;
    end else begin
        fin_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_address0 = grp_ClefiaF1Xor_3_fu_423_rk_address0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_address0 = grp_ClefiaF0Xor_fu_404_rk_address0;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_address1 = grp_ClefiaF1Xor_3_fu_423_rk_address1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_address1 = grp_ClefiaF0Xor_fu_404_rk_address1;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_ce0 = grp_ClefiaF1Xor_3_fu_423_rk_ce0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce0 = grp_ClefiaF0Xor_fu_404_rk_ce0;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_ce1 = grp_ClefiaF1Xor_3_fu_423_rk_ce1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce1 = grp_ClefiaF0Xor_fu_404_rk_ce1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln224_1_fu_654_p2 = ($signed(dec12_i_in_fu_116) + $signed(32'd4294967295));

assign add_ln224_fu_575_p2 = (shl_ln + trunc_ln224_fu_571_p1);

assign add_ln233_fu_706_p2 = ($signed(idx_load_reg_1040) + $signed(36'd68719476728));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign fin_0_out = grp_ClefiaF1Xor_3_fu_423_ap_return_4;

assign fin_10_out = fin_10_reg_1135;

assign fin_11_out = fin_11_reg_1141;

assign fin_12_out = grp_ClefiaF1Xor_3_fu_423_ap_return_0;

assign fin_13_out = grp_ClefiaF1Xor_3_fu_423_ap_return_1;

assign fin_14_out = grp_ClefiaF1Xor_3_fu_423_ap_return_2;

assign fin_15_out = grp_ClefiaF1Xor_3_fu_423_ap_return_3;

assign fin_1_out = grp_ClefiaF1Xor_3_fu_423_ap_return_5;

assign fin_2_out = grp_ClefiaF1Xor_3_fu_423_ap_return_6;

assign fin_3_out = grp_ClefiaF1Xor_3_fu_423_ap_return_7;

assign fin_4_out = fin_4_reg_1099;

assign fin_5_out = fin_5_reg_1105;

assign fin_6_out = fin_6_reg_1111;

assign fin_7_out = fin_7_reg_1117;

assign fin_8_out = fin_8_reg_1123;

assign fin_9_out = fin_9_reg_1129;

assign grp_ClefiaF0Xor_fu_404_ap_start = grp_ClefiaF0Xor_fu_404_ap_start_reg;

assign grp_ClefiaF0Xor_fu_404_rk_offset = (shl_ln + trunc_ln224_fu_571_p1);

assign grp_ClefiaF1Xor_3_fu_423_ap_start = grp_ClefiaF1Xor_3_fu_423_ap_start_reg;

assign grp_ClefiaF1Xor_3_fu_423_rk_offset = (8'd4 | add_ln224_reg_1093);

assign icmp_ln230_fu_660_p2 = (($signed(add_ln224_1_fu_654_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_711_p2 = ((add_ln224_1_reg_1195 == 32'd0) ? 1'b1 : 1'b0);

assign r_cast2_cast_fu_442_p1 = r_cast2;

assign select_ln234_10_fu_780_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_5_5_0_load_reg_1075 : fin_5_reg_1105);

assign select_ln234_11_fu_786_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_4_5_0_load_reg_1069 : fin_4_reg_1099);

assign select_ln234_12_fu_792_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_3_4_0_load_reg_1063 : grp_ClefiaF1Xor_3_fu_423_ap_return_7);

assign select_ln234_13_fu_799_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_2_4_0_load_reg_1057 : grp_ClefiaF1Xor_3_fu_423_ap_return_6);

assign select_ln234_14_fu_806_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_1_4_0_load_reg_1051 : grp_ClefiaF1Xor_3_fu_423_ap_return_5);

assign select_ln234_15_fu_813_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_0_4_0_load_reg_1045 : grp_ClefiaF1Xor_3_fu_423_ap_return_4);

assign select_ln234_1_fu_723_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_14_5_0_load_reg_1183 : grp_ClefiaF1Xor_3_fu_423_ap_return_2);

assign select_ln234_2_fu_730_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_13_5_0_load_reg_1177 : grp_ClefiaF1Xor_3_fu_423_ap_return_1);

assign select_ln234_3_fu_737_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_12_5_0_load_reg_1171 : grp_ClefiaF1Xor_3_fu_423_ap_return_0);

assign select_ln234_4_fu_744_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_11_4_0_load_reg_1165 : fin_11_reg_1141);

assign select_ln234_5_fu_750_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_10_4_0_load_reg_1159 : fin_10_reg_1135);

assign select_ln234_6_fu_756_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_9_4_0_load_reg_1153 : fin_9_reg_1129);

assign select_ln234_7_fu_762_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_8_4_0_load_reg_1147 : fin_8_reg_1123);

assign select_ln234_8_fu_768_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_7_5_0_load_reg_1087 : fin_7_reg_1117);

assign select_ln234_9_fu_774_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_6_5_0_load_reg_1081 : fin_6_reg_1111);

assign select_ln234_fu_716_p3 = ((icmp_ln234_fu_711_p2[0:0] == 1'b1) ? fin_15_5_0_load_reg_1189 : grp_ClefiaF1Xor_3_fu_423_ap_return_3);

assign trunc_ln224_fu_571_p1 = idx_fu_112[7:0];

endmodule //clefia_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5
