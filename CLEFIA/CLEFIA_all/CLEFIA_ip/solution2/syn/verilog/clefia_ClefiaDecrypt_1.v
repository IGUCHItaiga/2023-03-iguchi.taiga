// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaDecrypt_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Clefia_dec_address0,
        Clefia_dec_ce0,
        Clefia_dec_we0,
        Clefia_dec_d0,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        rk_address0,
        rk_ce0,
        rk_q0,
        rk_address1,
        rk_ce1,
        rk_q1,
        r
);

parameter    ap_ST_fsm_state1 = 23'd1;
parameter    ap_ST_fsm_state2 = 23'd2;
parameter    ap_ST_fsm_state3 = 23'd4;
parameter    ap_ST_fsm_state4 = 23'd8;
parameter    ap_ST_fsm_state5 = 23'd16;
parameter    ap_ST_fsm_state6 = 23'd32;
parameter    ap_ST_fsm_state7 = 23'd64;
parameter    ap_ST_fsm_state8 = 23'd128;
parameter    ap_ST_fsm_state9 = 23'd256;
parameter    ap_ST_fsm_state10 = 23'd512;
parameter    ap_ST_fsm_state11 = 23'd1024;
parameter    ap_ST_fsm_state12 = 23'd2048;
parameter    ap_ST_fsm_state13 = 23'd4096;
parameter    ap_ST_fsm_state14 = 23'd8192;
parameter    ap_ST_fsm_state15 = 23'd16384;
parameter    ap_ST_fsm_state16 = 23'd32768;
parameter    ap_ST_fsm_state17 = 23'd65536;
parameter    ap_ST_fsm_state18 = 23'd131072;
parameter    ap_ST_fsm_state19 = 23'd262144;
parameter    ap_ST_fsm_state20 = 23'd524288;
parameter    ap_ST_fsm_state21 = 23'd1048576;
parameter    ap_ST_fsm_state22 = 23'd2097152;
parameter    ap_ST_fsm_state23 = 23'd4194304;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] Clefia_dec_address0;
output   Clefia_dec_ce0;
output   Clefia_dec_we0;
output  [7:0] Clefia_dec_d0;
input  [7:0] p_read;
input  [7:0] p_read1;
input  [7:0] p_read2;
input  [7:0] p_read3;
input  [7:0] p_read4;
input  [7:0] p_read5;
input  [7:0] p_read6;
input  [7:0] p_read7;
input  [7:0] p_read8;
input  [7:0] p_read9;
input  [7:0] p_read10;
input  [7:0] p_read11;
input  [7:0] p_read12;
input  [7:0] p_read13;
input  [7:0] p_read14;
input  [7:0] p_read15;
output  [7:0] rk_address0;
output   rk_ce0;
input  [7:0] rk_q0;
output  [7:0] rk_address1;
output   rk_ce1;
input  [7:0] rk_q1;
input  [4:0] r;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] Clefia_dec_address0;
reg Clefia_dec_ce0;
reg Clefia_dec_we0;
reg[7:0] Clefia_dec_d0;
reg[7:0] rk_address0;
reg rk_ce0;
reg[7:0] rk_address1;
reg rk_ce1;

(* fsm_encoding = "none" *) reg   [22:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] shl_ln_fu_817_p3;
reg   [7:0] shl_ln_reg_1166;
reg   [7:0] rk_load_40_reg_1187;
wire    ap_CS_fsm_state2;
reg   [7:0] rk_load_41_reg_1197;
reg   [7:0] rk_load_42_reg_1207;
wire    ap_CS_fsm_state3;
reg   [7:0] rk_load_43_reg_1212;
reg   [7:0] rk_load_44_reg_1227;
wire    ap_CS_fsm_state4;
reg   [7:0] rk_load_45_reg_1237;
reg   [7:0] rk_load_46_reg_1247;
wire    ap_CS_fsm_state5;
reg   [7:0] rk_load_47_reg_1252;
wire    ap_CS_fsm_state6;
wire   [7:0] rin_fu_907_p2;
reg   [7:0] rin_reg_1302;
wire   [7:0] rin_38_fu_913_p2;
reg   [7:0] rin_38_reg_1307;
wire   [7:0] rin_39_fu_919_p2;
reg   [7:0] rin_39_reg_1312;
wire   [7:0] rin_40_fu_925_p2;
reg   [7:0] rin_40_reg_1317;
wire   [7:0] rin_41_fu_931_p2;
reg   [7:0] rin_41_reg_1322;
wire   [7:0] rin_42_fu_937_p2;
reg   [7:0] rin_42_reg_1327;
wire   [7:0] rin_43_fu_943_p2;
reg   [7:0] rin_43_reg_1332;
wire   [7:0] rin_44_fu_949_p2;
reg   [7:0] rin_44_reg_1337;
wire   [0:0] icmp_ln230_fu_955_p2;
reg   [0:0] icmp_ln230_reg_1342;
wire   [7:0] xor_ln124_fu_1009_p2;
reg   [7:0] xor_ln124_reg_1391;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_done;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_idle;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_ready;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address0;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce0;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address1;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce1;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_5_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_5_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_6_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_6_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_7_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_7_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_8_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_8_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_9_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_9_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_10_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_10_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_11_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_11_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out_ap_vld;
wire   [7:0] grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out;
wire    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out_ap_vld;
reg   [7:0] ap_phi_mux_fout_0_1_phi_fu_585_p4;
reg   [7:0] fout_0_1_reg_581;
wire    ap_CS_fsm_state8;
reg   [7:0] fout_4_1_reg_593;
reg   [7:0] fout_1_1_reg_604;
reg   [7:0] fout_2_1_reg_616;
reg   [7:0] fout_3_1_reg_628;
reg   [7:0] fout_8_1_reg_640;
reg   [7:0] fout_9_1_reg_652;
reg   [7:0] fout_10_1_reg_664;
reg   [7:0] fout_11_1_reg_676;
reg   [7:0] fout_5_1_reg_688;
reg   [7:0] fout_6_1_reg_699;
reg   [7:0] fout_7_1_reg_710;
reg   [7:0] fout_12_1_reg_721;
reg   [7:0] fout_13_1_reg_732;
reg   [7:0] fout_14_1_reg_743;
reg   [7:0] fout_15_1_reg_754;
reg    grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg;
wire    ap_CS_fsm_state7;
reg   [7:0] fin_12_loc_fu_150;
reg   [7:0] fin_13_loc_fu_146;
reg   [7:0] fin_14_loc_fu_142;
reg   [7:0] fin_15_loc_fu_138;
reg   [7:0] fin_0_loc_fu_134;
reg   [7:0] fin_1_loc_fu_130;
reg   [7:0] fin_2_loc_fu_126;
reg   [7:0] fin_3_loc_fu_122;
wire   [63:0] zext_ln432_fu_831_p1;
wire   [63:0] zext_ln124_fu_842_p1;
wire   [63:0] zext_ln124_87_fu_852_p1;
wire   [63:0] zext_ln124_88_fu_862_p1;
wire   [63:0] zext_ln433_fu_872_p1;
wire   [63:0] zext_ln124_89_fu_882_p1;
wire   [63:0] zext_ln124_90_fu_892_p1;
wire   [63:0] zext_ln124_91_fu_902_p1;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state23;
wire   [7:0] xor_ln124_52_fu_1015_p2;
wire   [7:0] xor_ln124_53_fu_1022_p2;
wire   [7:0] xor_ln124_54_fu_1029_p2;
wire   [7:0] xor_ln124_55_fu_1036_p2;
wire   [7:0] xor_ln124_56_fu_1043_p2;
wire   [7:0] xor_ln124_57_fu_1050_p2;
wire   [7:0] xor_ln124_58_fu_1057_p2;
wire   [7:0] add_ln432_fu_825_p2;
wire   [7:0] add_ln124_fu_836_p2;
wire   [7:0] add_ln124_84_fu_847_p2;
wire   [7:0] add_ln124_85_fu_857_p2;
wire   [7:0] add_ln433_fu_867_p2;
wire   [7:0] add_ln124_86_fu_877_p2;
wire   [7:0] add_ln124_87_fu_887_p2;
wire   [7:0] add_ln124_88_fu_897_p2;
reg   [22:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 23'd1;
#0 grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg = 1'b0;
end

clefia_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5 grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start),
    .ap_done(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_done),
    .ap_idle(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_idle),
    .ap_ready(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_ready),
    .rin_44(rin_44_reg_1337),
    .rin_43(rin_43_reg_1332),
    .rin_42(rin_42_reg_1327),
    .rin_41(rin_41_reg_1322),
    .p_read11(p_read11),
    .p_read10(p_read10),
    .p_read9(p_read9),
    .p_read8(p_read8),
    .rin_40(rin_40_reg_1317),
    .rin_39(rin_39_reg_1312),
    .rin_38(rin_38_reg_1307),
    .rin(rin_reg_1302),
    .p_read3(p_read3),
    .p_read2(p_read2),
    .p_read1(p_read1),
    .p_read(p_read),
    .r_cast2(r),
    .shl_ln(shl_ln_reg_1166),
    .rk_address0(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address0),
    .rk_ce0(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address1),
    .rk_ce1(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce1),
    .rk_q1(rk_q1),
    .fin_4_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out),
    .fin_4_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out_ap_vld),
    .fin_5_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_5_out),
    .fin_5_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_5_out_ap_vld),
    .fin_6_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_6_out),
    .fin_6_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_6_out_ap_vld),
    .fin_7_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_7_out),
    .fin_7_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_7_out_ap_vld),
    .fin_8_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_8_out),
    .fin_8_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_8_out_ap_vld),
    .fin_9_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_9_out),
    .fin_9_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_9_out_ap_vld),
    .fin_10_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_10_out),
    .fin_10_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_10_out_ap_vld),
    .fin_11_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_11_out),
    .fin_11_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_11_out_ap_vld),
    .fin_12_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out),
    .fin_12_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out_ap_vld),
    .fin_13_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out),
    .fin_13_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out_ap_vld),
    .fin_14_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out),
    .fin_14_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out_ap_vld),
    .fin_15_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out),
    .fin_15_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out_ap_vld),
    .fin_0_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out),
    .fin_0_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out_ap_vld),
    .fin_1_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out),
    .fin_1_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out_ap_vld),
    .fin_2_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out),
    .fin_2_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out_ap_vld),
    .fin_3_out(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out),
    .fin_3_out_ap_vld(grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln230_fu_955_p2 == 1'd0))) begin
            grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_ready == 1'b1)) begin
            grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_0_loc_fu_134 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_0_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_12_loc_fu_150 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_12_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_13_loc_fu_146 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_13_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_14_loc_fu_142 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_14_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_15_loc_fu_138 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_15_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_1_loc_fu_130 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_1_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_2_loc_fu_126 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_2_out;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
        fin_3_loc_fu_122 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_3_out;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln230_reg_1342 == 1'd0))) begin
        fout_0_1_reg_581 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out;
        fout_10_1_reg_664 <= fin_14_loc_fu_142;
        fout_11_1_reg_676 <= fin_15_loc_fu_138;
        fout_12_1_reg_721 <= fin_0_loc_fu_134;
        fout_13_1_reg_732 <= fin_1_loc_fu_130;
        fout_14_1_reg_743 <= fin_2_loc_fu_126;
        fout_15_1_reg_754 <= fin_3_loc_fu_122;
        fout_1_1_reg_604 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_5_out;
        fout_2_1_reg_616 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_6_out;
        fout_3_1_reg_628 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_7_out;
        fout_4_1_reg_593 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_8_out;
        fout_5_1_reg_688 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_9_out;
        fout_6_1_reg_699 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_10_out;
        fout_7_1_reg_710 <= grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_11_out;
        fout_8_1_reg_640 <= fin_12_loc_fu_150;
        fout_9_1_reg_652 <= fin_13_loc_fu_146;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln230_reg_1342 <= icmp_ln230_fu_955_p2;
        rin_38_reg_1307 <= rin_38_fu_913_p2;
        rin_39_reg_1312 <= rin_39_fu_919_p2;
        rin_40_reg_1317 <= rin_40_fu_925_p2;
        rin_41_reg_1322 <= rin_41_fu_931_p2;
        rin_42_reg_1327 <= rin_42_fu_937_p2;
        rin_43_reg_1332 <= rin_43_fu_943_p2;
        rin_44_reg_1337 <= rin_44_fu_949_p2;
        rin_reg_1302 <= rin_fu_907_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rk_load_40_reg_1187 <= rk_q1;
        rk_load_41_reg_1197 <= rk_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        rk_load_42_reg_1207 <= rk_q1;
        rk_load_43_reg_1212 <= rk_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_load_44_reg_1227 <= rk_q1;
        rk_load_45_reg_1237 <= rk_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        rk_load_46_reg_1247 <= rk_q1;
        rk_load_47_reg_1252 <= rk_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        shl_ln_reg_1166[7 : 3] <= shl_ln_fu_817_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        xor_ln124_reg_1391 <= xor_ln124_fu_1009_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        Clefia_dec_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Clefia_dec_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        Clefia_dec_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        Clefia_dec_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        Clefia_dec_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        Clefia_dec_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Clefia_dec_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Clefia_dec_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Clefia_dec_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Clefia_dec_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        Clefia_dec_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Clefia_dec_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Clefia_dec_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Clefia_dec_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Clefia_dec_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Clefia_dec_address0 = 64'd0;
    end else begin
        Clefia_dec_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        Clefia_dec_ce0 = 1'b1;
    end else begin
        Clefia_dec_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        Clefia_dec_d0 = xor_ln124_58_fu_1057_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        Clefia_dec_d0 = xor_ln124_57_fu_1050_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        Clefia_dec_d0 = xor_ln124_56_fu_1043_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        Clefia_dec_d0 = xor_ln124_55_fu_1036_p2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        Clefia_dec_d0 = xor_ln124_54_fu_1029_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        Clefia_dec_d0 = xor_ln124_53_fu_1022_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Clefia_dec_d0 = xor_ln124_52_fu_1015_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Clefia_dec_d0 = xor_ln124_reg_1391;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Clefia_dec_d0 = fout_11_1_reg_676;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Clefia_dec_d0 = fout_10_1_reg_664;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        Clefia_dec_d0 = fout_9_1_reg_652;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        Clefia_dec_d0 = fout_8_1_reg_640;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        Clefia_dec_d0 = fout_3_1_reg_628;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        Clefia_dec_d0 = fout_2_1_reg_616;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Clefia_dec_d0 = fout_1_1_reg_604;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        Clefia_dec_d0 = ap_phi_mux_fout_0_1_phi_fu_585_p4;
    end else begin
        Clefia_dec_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        Clefia_dec_we0 = 1'b1;
    end else begin
        Clefia_dec_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln230_reg_1342 == 1'd0))) begin
        ap_phi_mux_fout_0_1_phi_fu_585_p4 = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_fin_4_out;
    end else begin
        ap_phi_mux_fout_0_1_phi_fu_585_p4 = fout_0_1_reg_581;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        rk_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rk_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        rk_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rk_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_address0 = zext_ln124_91_fu_902_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rk_address0 = zext_ln124_89_fu_882_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rk_address0 = zext_ln124_88_fu_862_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        rk_address0 = zext_ln124_fu_842_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        rk_address0 = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address0;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        rk_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        rk_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rk_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        rk_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_address1 = zext_ln124_90_fu_892_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        rk_address1 = zext_ln433_fu_872_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        rk_address1 = zext_ln124_87_fu_852_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        rk_address1 = zext_ln432_fu_831_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        rk_address1 = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_address1;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        rk_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        rk_ce0 = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce0;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        rk_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        rk_ce1 = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_rk_ce1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln230_fu_955_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln124_84_fu_847_p2 = (shl_ln_reg_1166 + 8'd10);

assign add_ln124_85_fu_857_p2 = (shl_ln_reg_1166 + 8'd11);

assign add_ln124_86_fu_877_p2 = (shl_ln_reg_1166 + 8'd13);

assign add_ln124_87_fu_887_p2 = (shl_ln_reg_1166 + 8'd14);

assign add_ln124_88_fu_897_p2 = (shl_ln_reg_1166 + 8'd15);

assign add_ln124_fu_836_p2 = (shl_ln_fu_817_p3 + 8'd9);

assign add_ln432_fu_825_p2 = (shl_ln_fu_817_p3 + 8'd8);

assign add_ln433_fu_867_p2 = (shl_ln_reg_1166 + 8'd12);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start = grp_ClefiaDecrypt_1_Pipeline_ClefiaGfn4Inv_label5_fu_765_ap_start_reg;

assign icmp_ln230_fu_955_p2 = ((r == 5'd0) ? 1'b1 : 1'b0);

assign rin_38_fu_913_p2 = (rk_load_41_reg_1197 ^ p_read5);

assign rin_39_fu_919_p2 = (rk_load_42_reg_1207 ^ p_read6);

assign rin_40_fu_925_p2 = (rk_load_43_reg_1212 ^ p_read7);

assign rin_41_fu_931_p2 = (rk_load_44_reg_1227 ^ p_read12);

assign rin_42_fu_937_p2 = (rk_load_45_reg_1237 ^ p_read13);

assign rin_43_fu_943_p2 = (rk_load_46_reg_1247 ^ p_read14);

assign rin_44_fu_949_p2 = (rk_load_47_reg_1252 ^ p_read15);

assign rin_fu_907_p2 = (rk_load_40_reg_1187 ^ p_read4);

assign shl_ln_fu_817_p3 = {{r}, {3'd0}};

assign xor_ln124_52_fu_1015_p2 = (rk_q1 ^ fout_5_1_reg_688);

assign xor_ln124_53_fu_1022_p2 = (rk_q0 ^ fout_6_1_reg_699);

assign xor_ln124_54_fu_1029_p2 = (rk_q1 ^ fout_7_1_reg_710);

assign xor_ln124_55_fu_1036_p2 = (rk_q0 ^ fout_12_1_reg_721);

assign xor_ln124_56_fu_1043_p2 = (rk_q1 ^ fout_13_1_reg_732);

assign xor_ln124_57_fu_1050_p2 = (rk_q0 ^ fout_14_1_reg_743);

assign xor_ln124_58_fu_1057_p2 = (rk_q1 ^ fout_15_1_reg_754);

assign xor_ln124_fu_1009_p2 = (rk_q0 ^ fout_4_1_reg_593);

assign zext_ln124_87_fu_852_p1 = add_ln124_84_fu_847_p2;

assign zext_ln124_88_fu_862_p1 = add_ln124_85_fu_857_p2;

assign zext_ln124_89_fu_882_p1 = add_ln124_86_fu_877_p2;

assign zext_ln124_90_fu_892_p1 = add_ln124_87_fu_887_p2;

assign zext_ln124_91_fu_902_p1 = add_ln124_88_fu_897_p2;

assign zext_ln124_fu_842_p1 = add_ln124_fu_836_p2;

assign zext_ln432_fu_831_p1 = add_ln432_fu_825_p2;

assign zext_ln433_fu_872_p1 = add_ln433_fu_867_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1166[2:0] <= 3'b000;
end

endmodule //clefia_ClefiaDecrypt_1
