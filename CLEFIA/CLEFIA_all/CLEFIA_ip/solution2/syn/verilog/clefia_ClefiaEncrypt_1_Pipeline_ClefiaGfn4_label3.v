// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaEncrypt_1_Pipeline_ClefiaGfn4_label3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rin_30,
        rin_29,
        rin_28,
        rin_27,
        rin_22,
        rin_21,
        rin_20,
        rin_19,
        rin_26,
        rin_25,
        rin_24,
        rin_23,
        rin_18,
        rin_17,
        rin_16,
        rin,
        r_cast2,
        rk_address0,
        rk_ce0,
        rk_q0,
        rk_address1,
        rk_ce1,
        rk_q1,
        fin_12_out,
        fin_12_out_ap_vld,
        fin_13_out,
        fin_13_out_ap_vld,
        fin_14_out,
        fin_14_out_ap_vld,
        fin_15_out,
        fin_15_out_ap_vld,
        fin_0_out,
        fin_0_out_ap_vld,
        fin_1_out,
        fin_1_out_ap_vld,
        fin_2_out,
        fin_2_out_ap_vld,
        fin_3_out,
        fin_3_out_ap_vld,
        fin_4_out,
        fin_4_out_ap_vld,
        fin_5_out,
        fin_5_out_ap_vld,
        fin_6_out,
        fin_6_out_ap_vld,
        fin_7_out,
        fin_7_out_ap_vld,
        fin_8_out,
        fin_8_out_ap_vld,
        fin_9_out,
        fin_9_out_ap_vld,
        fin_10_out,
        fin_10_out_ap_vld,
        fin_11_out,
        fin_11_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 11'd1;
parameter    ap_ST_fsm_pp0_stage1 = 11'd2;
parameter    ap_ST_fsm_pp0_stage2 = 11'd4;
parameter    ap_ST_fsm_pp0_stage3 = 11'd8;
parameter    ap_ST_fsm_pp0_stage4 = 11'd16;
parameter    ap_ST_fsm_pp0_stage5 = 11'd32;
parameter    ap_ST_fsm_pp0_stage6 = 11'd64;
parameter    ap_ST_fsm_pp0_stage7 = 11'd128;
parameter    ap_ST_fsm_pp0_stage8 = 11'd256;
parameter    ap_ST_fsm_pp0_stage9 = 11'd512;
parameter    ap_ST_fsm_pp0_stage10 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] rin_30;
input  [7:0] rin_29;
input  [7:0] rin_28;
input  [7:0] rin_27;
input  [7:0] rin_22;
input  [7:0] rin_21;
input  [7:0] rin_20;
input  [7:0] rin_19;
input  [7:0] rin_26;
input  [7:0] rin_25;
input  [7:0] rin_24;
input  [7:0] rin_23;
input  [7:0] rin_18;
input  [7:0] rin_17;
input  [7:0] rin_16;
input  [7:0] rin;
input  [4:0] r_cast2;
output  [7:0] rk_address0;
output   rk_ce0;
input  [7:0] rk_q0;
output  [7:0] rk_address1;
output   rk_ce1;
input  [7:0] rk_q1;
output  [7:0] fin_12_out;
output   fin_12_out_ap_vld;
output  [7:0] fin_13_out;
output   fin_13_out_ap_vld;
output  [7:0] fin_14_out;
output   fin_14_out_ap_vld;
output  [7:0] fin_15_out;
output   fin_15_out_ap_vld;
output  [7:0] fin_0_out;
output   fin_0_out_ap_vld;
output  [7:0] fin_1_out;
output   fin_1_out_ap_vld;
output  [7:0] fin_2_out;
output   fin_2_out_ap_vld;
output  [7:0] fin_3_out;
output   fin_3_out_ap_vld;
output  [7:0] fin_4_out;
output   fin_4_out_ap_vld;
output  [7:0] fin_5_out;
output   fin_5_out_ap_vld;
output  [7:0] fin_6_out;
output   fin_6_out_ap_vld;
output  [7:0] fin_7_out;
output   fin_7_out_ap_vld;
output  [7:0] fin_8_out;
output   fin_8_out_ap_vld;
output  [7:0] fin_9_out;
output   fin_9_out_ap_vld;
output  [7:0] fin_10_out;
output   fin_10_out_ap_vld;
output  [7:0] fin_11_out;
output   fin_11_out_ap_vld;

reg ap_idle;
reg[7:0] rk_address0;
reg rk_ce0;
reg[7:0] rk_address1;
reg rk_ce1;
reg fin_12_out_ap_vld;
reg fin_13_out_ap_vld;
reg fin_14_out_ap_vld;
reg fin_15_out_ap_vld;
reg fin_0_out_ap_vld;
reg fin_1_out_ap_vld;
reg fin_2_out_ap_vld;
reg fin_3_out_ap_vld;
reg fin_4_out_ap_vld;
reg fin_5_out_ap_vld;
reg fin_6_out_ap_vld;
reg fin_7_out_ap_vld;
reg fin_8_out_ap_vld;
reg fin_9_out_ap_vld;
reg fin_10_out_ap_vld;
reg fin_11_out_ap_vld;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire   [0:0] icmp_ln193_fu_653_p2;
reg    ap_condition_exit_pp0_iter0_stage10;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] idx_load_reg_1028;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] fin_0_3_0_load_reg_1033;
reg   [7:0] fin_1_3_0_load_reg_1039;
reg   [7:0] fin_2_3_0_load_reg_1045;
reg   [7:0] fin_3_3_0_load_reg_1051;
reg   [7:0] fin_4_3_0_load_reg_1057;
reg   [7:0] fin_5_3_0_load_reg_1063;
reg   [7:0] fin_6_3_0_load_reg_1069;
reg   [7:0] fin_7_3_0_load_reg_1075;
wire   [7:0] trunc_ln188_fu_563_p1;
reg   [7:0] trunc_ln188_reg_1081;
reg   [7:0] fin_12_reg_1086;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
reg   [7:0] fin_13_reg_1092;
reg   [7:0] fin_14_reg_1098;
reg   [7:0] fin_15_reg_1104;
reg   [7:0] fin_0_reg_1110;
reg   [7:0] fin_1_reg_1116;
reg   [7:0] fin_2_reg_1122;
reg   [7:0] fin_3_reg_1128;
reg   [7:0] fin_8_3_0_load_reg_1134;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
reg   [7:0] fin_9_3_0_load_reg_1140;
reg   [7:0] fin_10_3_0_load_reg_1146;
reg   [7:0] fin_11_3_0_load_reg_1152;
reg   [7:0] fin_12_3_0_load_reg_1158;
reg   [7:0] fin_13_3_0_load_reg_1164;
reg   [7:0] fin_14_3_0_load_reg_1170;
reg   [7:0] fin_15_3_0_load_reg_1176;
wire   [31:0] add_ln188_1_fu_647_p2;
reg   [31:0] add_ln188_1_reg_1182;
wire    ap_block_pp0_stage10_11001;
reg   [0:0] icmp_ln193_reg_1188;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire    grp_ClefiaF0Xor_fu_396_ap_start;
wire    grp_ClefiaF0Xor_fu_396_ap_done;
wire    grp_ClefiaF0Xor_fu_396_ap_idle;
wire    grp_ClefiaF0Xor_fu_396_ap_ready;
wire   [7:0] grp_ClefiaF0Xor_fu_396_rk_address0;
wire    grp_ClefiaF0Xor_fu_396_rk_ce0;
wire   [7:0] grp_ClefiaF0Xor_fu_396_rk_address1;
wire    grp_ClefiaF0Xor_fu_396_rk_ce1;
wire   [7:0] grp_ClefiaF0Xor_fu_396_rk_offset;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_0;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_1;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_2;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_3;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_4;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_5;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_6;
wire   [7:0] grp_ClefiaF0Xor_fu_396_ap_return_7;
wire    grp_ClefiaF1Xor_3_fu_415_ap_start;
wire    grp_ClefiaF1Xor_3_fu_415_ap_done;
wire    grp_ClefiaF1Xor_3_fu_415_ap_idle;
wire    grp_ClefiaF1Xor_3_fu_415_ap_ready;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_rk_address0;
wire    grp_ClefiaF1Xor_3_fu_415_rk_ce0;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_rk_address1;
wire    grp_ClefiaF1Xor_3_fu_415_rk_ce1;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_rk_offset;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_0;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_1;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_2;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_3;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_4;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_5;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_6;
wire   [7:0] grp_ClefiaF1Xor_3_fu_415_ap_return_7;
reg    grp_ClefiaF0Xor_fu_396_ap_start_reg;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
reg    grp_ClefiaF1Xor_3_fu_415_ap_start_reg;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
reg   [63:0] idx_fu_110;
wire   [63:0] add_ln188_fu_659_p2;
wire    ap_loop_init;
reg   [31:0] dec12_i_in_fu_114;
wire   [31:0] r_cast2_cast_fu_434_p1;
reg   [7:0] fin_0_3_0_fu_118;
wire   [7:0] select_ln197_30_fu_807_p3;
reg   [7:0] fin_1_3_0_fu_122;
wire   [7:0] select_ln197_29_fu_801_p3;
reg   [7:0] fin_2_3_0_fu_126;
wire   [7:0] select_ln197_28_fu_795_p3;
reg   [7:0] fin_3_3_0_fu_130;
wire   [7:0] select_ln197_27_fu_789_p3;
reg   [7:0] fin_4_3_0_fu_134;
wire   [7:0] select_ln197_26_fu_782_p3;
reg   [7:0] fin_5_3_0_fu_138;
wire   [7:0] select_ln197_25_fu_775_p3;
reg   [7:0] fin_6_3_0_fu_142;
wire   [7:0] select_ln197_24_fu_768_p3;
reg   [7:0] fin_7_3_0_fu_146;
wire   [7:0] select_ln197_23_fu_761_p3;
reg   [7:0] fin_8_3_0_fu_150;
wire   [7:0] select_ln197_22_fu_754_p3;
reg   [7:0] fin_9_3_0_fu_154;
wire   [7:0] select_ln197_21_fu_747_p3;
reg   [7:0] fin_10_3_0_fu_158;
wire   [7:0] select_ln197_20_fu_740_p3;
reg   [7:0] fin_11_3_0_fu_162;
wire   [7:0] select_ln197_19_fu_733_p3;
reg   [7:0] fin_12_3_0_fu_166;
wire   [7:0] select_ln197_18_fu_727_p3;
reg   [7:0] fin_13_3_0_fu_170;
wire   [7:0] select_ln197_17_fu_721_p3;
reg   [7:0] fin_14_3_0_fu_174;
wire   [7:0] select_ln197_16_fu_715_p3;
reg   [7:0] fin_15_3_0_fu_178;
wire   [7:0] select_ln197_fu_709_p3;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln197_fu_704_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [10:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_ClefiaF0Xor_fu_396_ap_start_reg = 1'b0;
#0 grp_ClefiaF1Xor_3_fu_415_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

clefia_ClefiaF0Xor grp_ClefiaF0Xor_fu_396(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF0Xor_fu_396_ap_start),
    .ap_done(grp_ClefiaF0Xor_fu_396_ap_done),
    .ap_idle(grp_ClefiaF0Xor_fu_396_ap_idle),
    .ap_ready(grp_ClefiaF0Xor_fu_396_ap_ready),
    .p_read8(fin_0_3_0_fu_118),
    .p_read23(fin_1_3_0_fu_122),
    .p_read24(fin_2_3_0_fu_126),
    .p_read25(fin_3_3_0_fu_130),
    .p_read26(fin_4_3_0_fu_134),
    .p_read27(fin_5_3_0_fu_138),
    .p_read28(fin_6_3_0_fu_142),
    .p_read29(fin_7_3_0_fu_146),
    .rk_address0(grp_ClefiaF0Xor_fu_396_rk_address0),
    .rk_ce0(grp_ClefiaF0Xor_fu_396_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaF0Xor_fu_396_rk_address1),
    .rk_ce1(grp_ClefiaF0Xor_fu_396_rk_ce1),
    .rk_q1(rk_q1),
    .rk_offset(grp_ClefiaF0Xor_fu_396_rk_offset),
    .ap_return_0(grp_ClefiaF0Xor_fu_396_ap_return_0),
    .ap_return_1(grp_ClefiaF0Xor_fu_396_ap_return_1),
    .ap_return_2(grp_ClefiaF0Xor_fu_396_ap_return_2),
    .ap_return_3(grp_ClefiaF0Xor_fu_396_ap_return_3),
    .ap_return_4(grp_ClefiaF0Xor_fu_396_ap_return_4),
    .ap_return_5(grp_ClefiaF0Xor_fu_396_ap_return_5),
    .ap_return_6(grp_ClefiaF0Xor_fu_396_ap_return_6),
    .ap_return_7(grp_ClefiaF0Xor_fu_396_ap_return_7)
);

clefia_ClefiaF1Xor_3 grp_ClefiaF1Xor_3_fu_415(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF1Xor_3_fu_415_ap_start),
    .ap_done(grp_ClefiaF1Xor_3_fu_415_ap_done),
    .ap_idle(grp_ClefiaF1Xor_3_fu_415_ap_idle),
    .ap_ready(grp_ClefiaF1Xor_3_fu_415_ap_ready),
    .src_8_read(fin_8_3_0_fu_150),
    .src_9_read(fin_9_3_0_fu_154),
    .src_10_read(fin_10_3_0_fu_158),
    .src_11_read(fin_11_3_0_fu_162),
    .src_12_read(fin_12_3_0_fu_166),
    .src_13_read(fin_13_3_0_fu_170),
    .src_14_read(fin_14_3_0_fu_174),
    .src_15_read(fin_15_3_0_fu_178),
    .rk_address0(grp_ClefiaF1Xor_3_fu_415_rk_address0),
    .rk_ce0(grp_ClefiaF1Xor_3_fu_415_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaF1Xor_3_fu_415_rk_address1),
    .rk_ce1(grp_ClefiaF1Xor_3_fu_415_rk_ce1),
    .rk_q1(rk_q1),
    .rk_offset(grp_ClefiaF1Xor_3_fu_415_rk_offset),
    .ap_return_0(grp_ClefiaF1Xor_3_fu_415_ap_return_0),
    .ap_return_1(grp_ClefiaF1Xor_3_fu_415_ap_return_1),
    .ap_return_2(grp_ClefiaF1Xor_3_fu_415_ap_return_2),
    .ap_return_3(grp_ClefiaF1Xor_3_fu_415_ap_return_3),
    .ap_return_4(grp_ClefiaF1Xor_3_fu_415_ap_return_4),
    .ap_return_5(grp_ClefiaF1Xor_3_fu_415_ap_return_5),
    .ap_return_6(grp_ClefiaF1Xor_3_fu_415_ap_return_6),
    .ap_return_7(grp_ClefiaF1Xor_3_fu_415_ap_return_7)
);

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage10),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage10_subdone) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF0Xor_fu_396_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_ClefiaF0Xor_fu_396_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF0Xor_fu_396_ap_ready == 1'b1)) begin
            grp_ClefiaF0Xor_fu_396_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF1Xor_3_fu_415_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_ClefiaF1Xor_3_fu_415_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF1Xor_3_fu_415_ap_ready == 1'b1)) begin
            grp_ClefiaF1Xor_3_fu_415_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            dec12_i_in_fu_114 <= r_cast2_cast_fu_434_p1;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            dec12_i_in_fu_114 <= add_ln188_1_reg_1182;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_0_3_0_fu_118 <= rin;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_0_3_0_fu_118 <= select_ln197_30_fu_807_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_10_3_0_fu_158 <= rin_21;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_10_3_0_fu_158 <= select_ln197_20_fu_740_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_11_3_0_fu_162 <= rin_22;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_11_3_0_fu_162 <= select_ln197_19_fu_733_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_12_3_0_fu_166 <= rin_27;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_12_3_0_fu_166 <= select_ln197_18_fu_727_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_13_3_0_fu_170 <= rin_28;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_13_3_0_fu_170 <= select_ln197_17_fu_721_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_14_3_0_fu_174 <= rin_29;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_14_3_0_fu_174 <= select_ln197_16_fu_715_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_15_3_0_fu_178 <= rin_30;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_15_3_0_fu_178 <= select_ln197_fu_709_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_1_3_0_fu_122 <= rin_16;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_1_3_0_fu_122 <= select_ln197_29_fu_801_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_2_3_0_fu_126 <= rin_17;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_2_3_0_fu_126 <= select_ln197_28_fu_795_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_3_3_0_fu_130 <= rin_18;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_3_3_0_fu_130 <= select_ln197_27_fu_789_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_4_3_0_fu_134 <= rin_23;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_4_3_0_fu_134 <= select_ln197_26_fu_782_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_5_3_0_fu_138 <= rin_24;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_5_3_0_fu_138 <= select_ln197_25_fu_775_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_6_3_0_fu_142 <= rin_25;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_6_3_0_fu_142 <= select_ln197_24_fu_768_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_7_3_0_fu_146 <= rin_26;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_7_3_0_fu_146 <= select_ln197_23_fu_761_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_8_3_0_fu_150 <= rin_19;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_8_3_0_fu_150 <= select_ln197_22_fu_754_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_9_3_0_fu_154 <= rin_20;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            fin_9_3_0_fu_154 <= select_ln197_21_fu_747_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            idx_fu_110 <= 64'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd1))) begin
            idx_fu_110 <= add_ln188_fu_659_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        add_ln188_1_reg_1182 <= add_ln188_1_fu_647_p2;
        icmp_ln193_reg_1188 <= icmp_ln193_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fin_0_3_0_load_reg_1033 <= fin_0_3_0_fu_118;
        fin_1_3_0_load_reg_1039 <= fin_1_3_0_fu_122;
        fin_2_3_0_load_reg_1045 <= fin_2_3_0_fu_126;
        fin_3_3_0_load_reg_1051 <= fin_3_3_0_fu_130;
        fin_4_3_0_load_reg_1057 <= fin_4_3_0_fu_134;
        fin_5_3_0_load_reg_1063 <= fin_5_3_0_fu_138;
        fin_6_3_0_load_reg_1069 <= fin_6_3_0_fu_142;
        fin_7_3_0_load_reg_1075 <= fin_7_3_0_fu_146;
        idx_load_reg_1028 <= idx_fu_110;
        trunc_ln188_reg_1081 <= trunc_ln188_fu_563_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        fin_0_reg_1110 <= grp_ClefiaF0Xor_fu_396_ap_return_4;
        fin_12_reg_1086 <= grp_ClefiaF0Xor_fu_396_ap_return_0;
        fin_13_reg_1092 <= grp_ClefiaF0Xor_fu_396_ap_return_1;
        fin_14_reg_1098 <= grp_ClefiaF0Xor_fu_396_ap_return_2;
        fin_15_reg_1104 <= grp_ClefiaF0Xor_fu_396_ap_return_3;
        fin_1_reg_1116 <= grp_ClefiaF0Xor_fu_396_ap_return_5;
        fin_2_reg_1122 <= grp_ClefiaF0Xor_fu_396_ap_return_6;
        fin_3_reg_1128 <= grp_ClefiaF0Xor_fu_396_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        fin_10_3_0_load_reg_1146 <= fin_10_3_0_fu_158;
        fin_11_3_0_load_reg_1152 <= fin_11_3_0_fu_162;
        fin_12_3_0_load_reg_1158 <= fin_12_3_0_fu_166;
        fin_13_3_0_load_reg_1164 <= fin_13_3_0_fu_170;
        fin_14_3_0_load_reg_1170 <= fin_14_3_0_fu_174;
        fin_15_3_0_load_reg_1176 <= fin_15_3_0_fu_178;
        fin_8_3_0_load_reg_1134 <= fin_8_3_0_fu_150;
        fin_9_3_0_load_reg_1140 <= fin_9_3_0_fu_154;
    end
end

always @ (*) begin
    if (((icmp_ln193_fu_653_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready_pp0_iter1_reg == 1'b0) & (ap_loop_exit_ready == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage10_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_0_out_ap_vld = 1'b1;
    end else begin
        fin_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_10_out_ap_vld = 1'b1;
    end else begin
        fin_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_11_out_ap_vld = 1'b1;
    end else begin
        fin_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_12_out_ap_vld = 1'b1;
    end else begin
        fin_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_13_out_ap_vld = 1'b1;
    end else begin
        fin_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_14_out_ap_vld = 1'b1;
    end else begin
        fin_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_15_out_ap_vld = 1'b1;
    end else begin
        fin_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_1_out_ap_vld = 1'b1;
    end else begin
        fin_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_2_out_ap_vld = 1'b1;
    end else begin
        fin_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_3_out_ap_vld = 1'b1;
    end else begin
        fin_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_4_out_ap_vld = 1'b1;
    end else begin
        fin_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_5_out_ap_vld = 1'b1;
    end else begin
        fin_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_6_out_ap_vld = 1'b1;
    end else begin
        fin_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_7_out_ap_vld = 1'b1;
    end else begin
        fin_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_8_out_ap_vld = 1'b1;
    end else begin
        fin_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln193_reg_1188 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        fin_9_out_ap_vld = 1'b1;
    end else begin
        fin_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_address0 = grp_ClefiaF1Xor_3_fu_415_rk_address0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_address0 = grp_ClefiaF0Xor_fu_396_rk_address0;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_address1 = grp_ClefiaF1Xor_3_fu_415_rk_address1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_address1 = grp_ClefiaF0Xor_fu_396_rk_address1;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_ce0 = grp_ClefiaF1Xor_3_fu_415_rk_ce0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce0 = grp_ClefiaF0Xor_fu_396_rk_ce0;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        rk_ce1 = grp_ClefiaF1Xor_3_fu_415_rk_ce1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce1 = grp_ClefiaF0Xor_fu_396_rk_ce1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln188_1_fu_647_p2 = ($signed(dec12_i_in_fu_114) + $signed(32'd4294967295));

assign add_ln188_fu_659_p2 = (idx_load_reg_1028 + 64'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage10;

assign fin_0_out = fin_0_reg_1110;

assign fin_10_out = grp_ClefiaF1Xor_3_fu_415_ap_return_6;

assign fin_11_out = grp_ClefiaF1Xor_3_fu_415_ap_return_7;

assign fin_12_out = fin_12_reg_1086;

assign fin_13_out = fin_13_reg_1092;

assign fin_14_out = fin_14_reg_1098;

assign fin_15_out = fin_15_reg_1104;

assign fin_1_out = fin_1_reg_1116;

assign fin_2_out = fin_2_reg_1122;

assign fin_3_out = fin_3_reg_1128;

assign fin_4_out = grp_ClefiaF1Xor_3_fu_415_ap_return_0;

assign fin_5_out = grp_ClefiaF1Xor_3_fu_415_ap_return_1;

assign fin_6_out = grp_ClefiaF1Xor_3_fu_415_ap_return_2;

assign fin_7_out = grp_ClefiaF1Xor_3_fu_415_ap_return_3;

assign fin_8_out = grp_ClefiaF1Xor_3_fu_415_ap_return_4;

assign fin_9_out = grp_ClefiaF1Xor_3_fu_415_ap_return_5;

assign grp_ClefiaF0Xor_fu_396_ap_start = grp_ClefiaF0Xor_fu_396_ap_start_reg;

assign grp_ClefiaF0Xor_fu_396_rk_offset = (trunc_ln188_fu_563_p1 + 8'd8);

assign grp_ClefiaF1Xor_3_fu_415_ap_start = grp_ClefiaF1Xor_3_fu_415_ap_start_reg;

assign grp_ClefiaF1Xor_3_fu_415_rk_offset = (trunc_ln188_reg_1081 + 8'd12);

assign icmp_ln193_fu_653_p2 = (($signed(add_ln188_1_fu_647_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln197_fu_704_p2 = ((add_ln188_1_reg_1182 == 32'd0) ? 1'b1 : 1'b0);

assign r_cast2_cast_fu_434_p1 = r_cast2;

assign select_ln197_16_fu_715_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_14_3_0_load_reg_1170 : fin_14_reg_1098);

assign select_ln197_17_fu_721_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_13_3_0_load_reg_1164 : fin_13_reg_1092);

assign select_ln197_18_fu_727_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_12_3_0_load_reg_1158 : fin_12_reg_1086);

assign select_ln197_19_fu_733_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_11_3_0_load_reg_1152 : grp_ClefiaF1Xor_3_fu_415_ap_return_7);

assign select_ln197_20_fu_740_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_10_3_0_load_reg_1146 : grp_ClefiaF1Xor_3_fu_415_ap_return_6);

assign select_ln197_21_fu_747_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_9_3_0_load_reg_1140 : grp_ClefiaF1Xor_3_fu_415_ap_return_5);

assign select_ln197_22_fu_754_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_8_3_0_load_reg_1134 : grp_ClefiaF1Xor_3_fu_415_ap_return_4);

assign select_ln197_23_fu_761_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_7_3_0_load_reg_1075 : grp_ClefiaF1Xor_3_fu_415_ap_return_3);

assign select_ln197_24_fu_768_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_6_3_0_load_reg_1069 : grp_ClefiaF1Xor_3_fu_415_ap_return_2);

assign select_ln197_25_fu_775_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_5_3_0_load_reg_1063 : grp_ClefiaF1Xor_3_fu_415_ap_return_1);

assign select_ln197_26_fu_782_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_4_3_0_load_reg_1057 : grp_ClefiaF1Xor_3_fu_415_ap_return_0);

assign select_ln197_27_fu_789_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_3_3_0_load_reg_1051 : fin_3_reg_1128);

assign select_ln197_28_fu_795_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_2_3_0_load_reg_1045 : fin_2_reg_1122);

assign select_ln197_29_fu_801_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_1_3_0_load_reg_1039 : fin_1_reg_1116);

assign select_ln197_30_fu_807_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_0_3_0_load_reg_1033 : fin_0_reg_1110);

assign select_ln197_fu_709_p3 = ((icmp_ln197_fu_704_p2[0:0] == 1'b1) ? fin_15_3_0_load_reg_1176 : fin_15_reg_1104);

assign trunc_ln188_fu_563_p1 = idx_fu_110[7:0];

endmodule //clefia_ClefiaEncrypt_1_Pipeline_ClefiaGfn4_label3
