-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clefia_ClefiaKeySet128 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce0 : OUT STD_LOGIC;
    rk_we0 : OUT STD_LOGIC;
    rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce1 : OUT STD_LOGIC;
    rk_we1 : OUT STD_LOGIC;
    rk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of clefia_ClefiaKeySet128 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_98 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv64_99 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011001";
    constant ap_const_lv64_9A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011010";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_9B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011011";
    constant ap_const_lv64_9C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_9D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011101";
    constant ap_const_lv64_9E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_9F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010011111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_EE : STD_LOGIC_VECTOR (7 downto 0) := "11101110";
    constant ap_const_lv8_DD : STD_LOGIC_VECTOR (7 downto 0) := "11011101";
    constant ap_const_lv8_CC : STD_LOGIC_VECTOR (7 downto 0) := "11001100";
    constant ap_const_lv8_BB : STD_LOGIC_VECTOR (7 downto 0) := "10111011";
    constant ap_const_lv8_AA : STD_LOGIC_VECTOR (7 downto 0) := "10101010";
    constant ap_const_lv8_99 : STD_LOGIC_VECTOR (7 downto 0) := "10011001";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv8_77 : STD_LOGIC_VECTOR (7 downto 0) := "01110111";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv8_44 : STD_LOGIC_VECTOR (7 downto 0) := "01000100";
    constant ap_const_lv8_33 : STD_LOGIC_VECTOR (7 downto 0) := "00110011";
    constant ap_const_lv8_22 : STD_LOGIC_VECTOR (7 downto 0) := "00100010";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal con128_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal con128_ce0 : STD_LOGIC;
    signal con128_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal con128_ce1 : STD_LOGIC;
    signal con128_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal con128_ce2 : STD_LOGIC;
    signal con128_q2 : STD_LOGIC_VECTOR (7 downto 0);
    signal con128_ce3 : STD_LOGIC;
    signal con128_q3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_12_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_12_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_13_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_13_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_14_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_14_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_15_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_15_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_0_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_0_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_1_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_1_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_2_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_2_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_3_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_3_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out_ap_vld : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce1 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce2 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce3 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce1 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we1 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal fin_4_loc_fu_104 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_5_loc_fu_100 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_6_loc_fu_96 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_loc_fu_92 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_8_loc_fu_88 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_9_loc_fu_84 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_10_loc_fu_80 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_11_loc_fu_76 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fin_12_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_12_out_ap_vld : OUT STD_LOGIC;
        fin_13_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_13_out_ap_vld : OUT STD_LOGIC;
        fin_14_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_14_out_ap_vld : OUT STD_LOGIC;
        fin_15_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_15_out_ap_vld : OUT STD_LOGIC;
        fin_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_0_out_ap_vld : OUT STD_LOGIC;
        fin_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_1_out_ap_vld : OUT STD_LOGIC;
        fin_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_2_out_ap_vld : OUT STD_LOGIC;
        fin_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_3_out_ap_vld : OUT STD_LOGIC;
        fin_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_4_out_ap_vld : OUT STD_LOGIC;
        fin_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_5_out_ap_vld : OUT STD_LOGIC;
        fin_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_6_out_ap_vld : OUT STD_LOGIC;
        fin_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_7_out_ap_vld : OUT STD_LOGIC;
        fin_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_8_out_ap_vld : OUT STD_LOGIC;
        fin_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_9_out_ap_vld : OUT STD_LOGIC;
        fin_10_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_10_out_ap_vld : OUT STD_LOGIC;
        fin_11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_11_out_ap_vld : OUT STD_LOGIC;
        con128_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_ce0 : OUT STD_LOGIC;
        con128_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        con128_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_ce1 : OUT STD_LOGIC;
        con128_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        con128_address2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_ce2 : OUT STD_LOGIC;
        con128_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
        con128_address3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_ce3 : OUT STD_LOGIC;
        con128_q3 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fin_11_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_10_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_9_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_8_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_7_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_6_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_5_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_4_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_3_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_2_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_1_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_0_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_15_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_14_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_13_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_12_reload : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce1 : OUT STD_LOGIC;
        rk_we1 : OUT STD_LOGIC;
        rk_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        con128_ce0 : OUT STD_LOGIC;
        con128_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet128_con128_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address3 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    con128_U : component clefia_ClefiaKeySet128_con128_ROM_AUTO_1R
    generic map (
        DataWidth => 8,
        AddressRange => 240,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => con128_address0,
        ce0 => con128_ce0,
        q0 => con128_q0,
        address1 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address1,
        ce1 => con128_ce1,
        q1 => con128_q1,
        address2 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address2,
        ce2 => con128_ce2,
        q2 => con128_q2,
        address3 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address3,
        ce3 => con128_ce3,
        q3 => con128_q3);

    grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309 : component clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start,
        ap_done => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done,
        ap_idle => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_idle,
        ap_ready => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_ready,
        fin_12_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_12_out,
        fin_12_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_12_out_ap_vld,
        fin_13_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_13_out,
        fin_13_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_13_out_ap_vld,
        fin_14_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_14_out,
        fin_14_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_14_out_ap_vld,
        fin_15_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_15_out,
        fin_15_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_15_out_ap_vld,
        fin_0_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_0_out,
        fin_0_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_0_out_ap_vld,
        fin_1_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_1_out,
        fin_1_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_1_out_ap_vld,
        fin_2_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_2_out,
        fin_2_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_2_out_ap_vld,
        fin_3_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_3_out,
        fin_3_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_3_out_ap_vld,
        fin_4_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out,
        fin_4_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out_ap_vld,
        fin_5_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out,
        fin_5_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out_ap_vld,
        fin_6_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out,
        fin_6_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out_ap_vld,
        fin_7_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out,
        fin_7_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out_ap_vld,
        fin_8_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out,
        fin_8_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out_ap_vld,
        fin_9_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out,
        fin_9_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out_ap_vld,
        fin_10_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out,
        fin_10_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out_ap_vld,
        fin_11_out => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out,
        fin_11_out_ap_vld => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out_ap_vld,
        con128_address0 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address0,
        con128_ce0 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce0,
        con128_q0 => con128_q0,
        con128_address1 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address1,
        con128_ce1 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce1,
        con128_q1 => con128_q1,
        con128_address2 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address2,
        con128_ce2 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce2,
        con128_q2 => con128_q2,
        con128_address3 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address3,
        con128_ce3 => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce3,
        con128_q3 => con128_q3);

    grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335 : component clefia_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start,
        ap_done => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done,
        ap_idle => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_idle,
        ap_ready => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_ready,
        fin_11_reload => fin_11_loc_fu_76,
        fin_10_reload => fin_10_loc_fu_80,
        fin_9_reload => fin_9_loc_fu_84,
        fin_8_reload => fin_8_loc_fu_88,
        fin_7_reload => fin_7_loc_fu_92,
        fin_6_reload => fin_6_loc_fu_96,
        fin_5_reload => fin_5_loc_fu_100,
        fin_4_reload => fin_4_loc_fu_104,
        fin_3_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_3_out,
        fin_2_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_2_out,
        fin_1_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_1_out,
        fin_0_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_0_out,
        fin_15_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_15_out,
        fin_14_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_14_out,
        fin_13_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_13_out,
        fin_12_reload => grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_12_out,
        rk_address0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address0,
        rk_ce0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce0,
        rk_we0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we0,
        rk_d0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d0,
        rk_address1 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address1,
        rk_ce1 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce1,
        rk_we1 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we1,
        rk_d1 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d1,
        con128_address0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_address0,
        con128_ce0 => grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_ce0,
        con128_q0 => con128_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_10_loc_fu_80 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_10_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_11_loc_fu_76 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_11_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_4_loc_fu_104 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_5_loc_fu_100 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_5_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_6_loc_fu_96 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_6_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_7_loc_fu_92 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_7_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_8_loc_fu_88 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_8_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                fin_9_loc_fu_84 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_fin_9_out;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done)
    begin
        if ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done)
    begin
        if ((grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    con128_address0_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address0, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_address0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            con128_address0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            con128_address0 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_address0;
        else 
            con128_address0 <= "XXXXXXXX";
        end if; 
    end process;


    con128_ce0_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce0, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            con128_ce0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_con128_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            con128_ce0 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce0;
        else 
            con128_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce1_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce1, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            con128_ce1 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce1;
        else 
            con128_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce2_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce2, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            con128_ce2 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce2;
        else 
            con128_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce3_assign_proc : process(grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce3, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            con128_ce3 <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_con128_ce3;
        else 
            con128_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start <= grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_start_reg;
    grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_ap_start_reg;

    rk_address0_assign_proc : process(ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rk_address0 <= ap_const_lv64_9F(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rk_address0 <= ap_const_lv64_9D(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_address0 <= ap_const_lv64_9B(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rk_address0 <= ap_const_lv64_99(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address0 <= ap_const_lv64_7(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address0 <= ap_const_lv64_5(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address0 <= ap_const_lv64_3(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address0 <= ap_const_lv64_1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_address0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address0;
        else 
            rk_address0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_address1_assign_proc : process(ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rk_address1 <= ap_const_lv64_9E(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rk_address1 <= ap_const_lv64_9C(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_address1 <= ap_const_lv64_9A(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rk_address1 <= ap_const_lv64_98(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address1 <= ap_const_lv64_6(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address1 <= ap_const_lv64_4(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address1 <= ap_const_lv64_2(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address1 <= ap_const_lv64_0(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_address1 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_address1;
        else 
            rk_address1 <= "XXXXXXXX";
        end if; 
    end process;


    rk_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_ce0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce0;
        else 
            rk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_ce1_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_ce1 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_ce1;
        else 
            rk_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rk_d0_assign_proc : process(ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rk_d0 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rk_d0 <= ap_const_lv8_22;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_d0 <= ap_const_lv8_44;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rk_d0 <= ap_const_lv8_66;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_d0 <= ap_const_lv8_88;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_d0 <= ap_const_lv8_AA;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_d0 <= ap_const_lv8_CC;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_d0 <= ap_const_lv8_EE;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_d0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d0;
        else 
            rk_d0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_d1_assign_proc : process(ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rk_d1 <= ap_const_lv8_11;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rk_d1 <= ap_const_lv8_33;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_d1 <= ap_const_lv8_55;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rk_d1 <= ap_const_lv8_77;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_d1 <= ap_const_lv8_99;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_d1 <= ap_const_lv8_BB;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_d1 <= ap_const_lv8_DD;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_d1 <= ap_const_lv8_FF;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_d1 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_d1;
        else 
            rk_d1 <= "XXXXXXXX";
        end if; 
    end process;


    rk_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_we0 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we0;
        else 
            rk_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_we1_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done, grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we1, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((grp_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3_fu_309_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
            rk_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rk_we1 <= grp_ClefiaKeySet128_Pipeline_ClefiaKeySet128_label7_fu_335_rk_we1;
        else 
            rk_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
