-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fin_12_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_12_out_ap_vld : OUT STD_LOGIC;
    fin_13_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_13_out_ap_vld : OUT STD_LOGIC;
    fin_14_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_14_out_ap_vld : OUT STD_LOGIC;
    fin_15_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_15_out_ap_vld : OUT STD_LOGIC;
    fin_0_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_0_out_ap_vld : OUT STD_LOGIC;
    fin_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_1_out_ap_vld : OUT STD_LOGIC;
    fin_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_2_out_ap_vld : OUT STD_LOGIC;
    fin_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_out_ap_vld : OUT STD_LOGIC;
    fin_4_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_4_out_ap_vld : OUT STD_LOGIC;
    fin_5_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_5_out_ap_vld : OUT STD_LOGIC;
    fin_6_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_6_out_ap_vld : OUT STD_LOGIC;
    fin_7_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_out_ap_vld : OUT STD_LOGIC;
    fin_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_8_out_ap_vld : OUT STD_LOGIC;
    fin_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_9_out_ap_vld : OUT STD_LOGIC;
    fin_10_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_10_out_ap_vld : OUT STD_LOGIC;
    fin_11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_11_out_ap_vld : OUT STD_LOGIC;
    con128_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    con128_ce0 : OUT STD_LOGIC;
    con128_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    con128_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    con128_ce1 : OUT STD_LOGIC;
    con128_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    con128_address2 : OUT STD_LOGIC_VECTOR (7 downto 0);
    con128_ce2 : OUT STD_LOGIC;
    con128_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
    con128_address3 : OUT STD_LOGIC_VECTOR (7 downto 0);
    con128_ce3 : OUT STD_LOGIC;
    con128_q3 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_EE : STD_LOGIC_VECTOR (7 downto 0) := "11101110";
    constant ap_const_lv8_DD : STD_LOGIC_VECTOR (7 downto 0) := "11011101";
    constant ap_const_lv8_CC : STD_LOGIC_VECTOR (7 downto 0) := "11001100";
    constant ap_const_lv8_BB : STD_LOGIC_VECTOR (7 downto 0) := "10111011";
    constant ap_const_lv8_AA : STD_LOGIC_VECTOR (7 downto 0) := "10101010";
    constant ap_const_lv8_99 : STD_LOGIC_VECTOR (7 downto 0) := "10011001";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv8_77 : STD_LOGIC_VECTOR (7 downto 0) := "01110111";
    constant ap_const_lv8_66 : STD_LOGIC_VECTOR (7 downto 0) := "01100110";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv8_44 : STD_LOGIC_VECTOR (7 downto 0) := "01000100";
    constant ap_const_lv8_33 : STD_LOGIC_VECTOR (7 downto 0) := "00110011";
    constant ap_const_lv8_22 : STD_LOGIC_VECTOR (7 downto 0) := "00100010";
    constant ap_const_lv8_11 : STD_LOGIC_VECTOR (7 downto 0) := "00010001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal icmp_ln197_fu_527_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage5 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal idx_load_reg_887 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal fin_0_1_0_load_reg_894 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_1_1_0_load_reg_900 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_2_1_0_load_reg_906 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_1_0_load_reg_912 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_4_1_0_load_reg_918 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_5_1_0_load_reg_924 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_6_1_0_load_reg_930 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_1_0_load_reg_936 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_8_1_0_load_reg_942 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal fin_9_1_0_load_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_10_1_0_load_reg_954 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_11_1_0_load_reg_960 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_12_1_0_load_reg_966 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_13_1_0_load_reg_972 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_14_1_0_load_reg_978 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_15_1_0_load_reg_984 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_assign_load_reg_990 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal fin_12_reg_995 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_13_reg_1001 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_14_reg_1007 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_15_reg_1013 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_0_reg_1019 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_1_reg_1025 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_2_reg_1031 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_reg_1037 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln197_reg_1043 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_ClefiaF0Xor_121_fu_290_ap_start : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_ap_done : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_ap_idle : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_ap_ready : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_rk_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_rk_ce1 : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_rk_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_rk_ce2 : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_rk_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_rk_ce3 : STD_LOGIC;
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_start : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_ap_done : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_ap_idle : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_ap_ready : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_rk_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_rk_ce1 : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_rk_address2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_rk_ce2 : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_rk_address3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_rk_ce3 : STD_LOGIC;
    signal grp_ClefiaF1Xor_fu_309_rk_offset : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF1Xor_fu_309_ap_return_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaF0Xor_121_fu_290_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal grp_ClefiaF1Xor_fu_309_ap_start_reg : STD_LOGIC := '0';
    signal idx_fu_106 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln196_fu_573_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal r_assign_fu_110 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln193_fu_666_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_0_1_0_fu_114 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_15_fu_661_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_1_1_0_fu_118 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_14_fu_656_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_2_1_0_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_13_fu_651_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_1_0_fu_126 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_12_fu_646_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_4_1_0_fu_130 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_11_fu_640_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_5_1_0_fu_134 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_10_fu_634_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_6_1_0_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_9_fu_628_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_1_0_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_8_fu_622_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_8_1_0_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_7_fu_616_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_9_1_0_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_6_fu_610_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_10_1_0_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_5_fu_604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_11_1_0_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_4_fu_598_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_12_1_0_fu_162 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_3_fu_593_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_13_1_0_fu_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_2_fu_588_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_14_1_0_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_1_fu_583_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_15_1_0_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln197_fu_578_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clefia_ClefiaF0Xor_121 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce1 : OUT STD_LOGIC;
        rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce2 : OUT STD_LOGIC;
        rk_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce3 : OUT STD_LOGIC;
        rk_q3 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_offset : IN STD_LOGIC_VECTOR (6 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaF1Xor IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_8_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_9_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_10_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_11_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_12_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_13_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_14_read : IN STD_LOGIC_VECTOR (7 downto 0);
        src_15_read : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce1 : OUT STD_LOGIC;
        rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce2 : OUT STD_LOGIC;
        rk_q2 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce3 : OUT STD_LOGIC;
        rk_q3 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_offset : IN STD_LOGIC_VECTOR (6 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    grp_ClefiaF0Xor_121_fu_290 : component clefia_ClefiaF0Xor_121
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaF0Xor_121_fu_290_ap_start,
        ap_done => grp_ClefiaF0Xor_121_fu_290_ap_done,
        ap_idle => grp_ClefiaF0Xor_121_fu_290_ap_idle,
        ap_ready => grp_ClefiaF0Xor_121_fu_290_ap_ready,
        p_read8 => fin_0_1_0_fu_114,
        p_read23 => fin_1_1_0_fu_118,
        p_read24 => fin_2_1_0_fu_122,
        p_read25 => fin_3_1_0_fu_126,
        p_read26 => fin_4_1_0_fu_130,
        p_read27 => fin_5_1_0_fu_134,
        p_read28 => fin_6_1_0_fu_138,
        p_read29 => fin_7_1_0_fu_142,
        rk_address0 => grp_ClefiaF0Xor_121_fu_290_rk_address0,
        rk_ce0 => grp_ClefiaF0Xor_121_fu_290_rk_ce0,
        rk_q0 => con128_q0,
        rk_address1 => grp_ClefiaF0Xor_121_fu_290_rk_address1,
        rk_ce1 => grp_ClefiaF0Xor_121_fu_290_rk_ce1,
        rk_q1 => con128_q1,
        rk_address2 => grp_ClefiaF0Xor_121_fu_290_rk_address2,
        rk_ce2 => grp_ClefiaF0Xor_121_fu_290_rk_ce2,
        rk_q2 => con128_q2,
        rk_address3 => grp_ClefiaF0Xor_121_fu_290_rk_address3,
        rk_ce3 => grp_ClefiaF0Xor_121_fu_290_rk_ce3,
        rk_q3 => con128_q3,
        rk_offset => idx_fu_106,
        ap_return_0 => grp_ClefiaF0Xor_121_fu_290_ap_return_0,
        ap_return_1 => grp_ClefiaF0Xor_121_fu_290_ap_return_1,
        ap_return_2 => grp_ClefiaF0Xor_121_fu_290_ap_return_2,
        ap_return_3 => grp_ClefiaF0Xor_121_fu_290_ap_return_3,
        ap_return_4 => grp_ClefiaF0Xor_121_fu_290_ap_return_4,
        ap_return_5 => grp_ClefiaF0Xor_121_fu_290_ap_return_5,
        ap_return_6 => grp_ClefiaF0Xor_121_fu_290_ap_return_6,
        ap_return_7 => grp_ClefiaF0Xor_121_fu_290_ap_return_7);

    grp_ClefiaF1Xor_fu_309 : component clefia_ClefiaF1Xor
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaF1Xor_fu_309_ap_start,
        ap_done => grp_ClefiaF1Xor_fu_309_ap_done,
        ap_idle => grp_ClefiaF1Xor_fu_309_ap_idle,
        ap_ready => grp_ClefiaF1Xor_fu_309_ap_ready,
        src_8_read => fin_8_1_0_fu_146,
        src_9_read => fin_9_1_0_fu_150,
        src_10_read => fin_10_1_0_fu_154,
        src_11_read => fin_11_1_0_fu_158,
        src_12_read => fin_12_1_0_fu_162,
        src_13_read => fin_13_1_0_fu_166,
        src_14_read => fin_14_1_0_fu_170,
        src_15_read => fin_15_1_0_fu_174,
        rk_address0 => grp_ClefiaF1Xor_fu_309_rk_address0,
        rk_ce0 => grp_ClefiaF1Xor_fu_309_rk_ce0,
        rk_q0 => con128_q0,
        rk_address1 => grp_ClefiaF1Xor_fu_309_rk_address1,
        rk_ce1 => grp_ClefiaF1Xor_fu_309_rk_ce1,
        rk_q1 => con128_q1,
        rk_address2 => grp_ClefiaF1Xor_fu_309_rk_address2,
        rk_ce2 => grp_ClefiaF1Xor_fu_309_rk_ce2,
        rk_q2 => con128_q2,
        rk_address3 => grp_ClefiaF1Xor_fu_309_rk_address3,
        rk_ce3 => grp_ClefiaF1Xor_fu_309_rk_ce3,
        rk_q3 => con128_q3,
        rk_offset => grp_ClefiaF1Xor_fu_309_rk_offset,
        ap_return_0 => grp_ClefiaF1Xor_fu_309_ap_return_0,
        ap_return_1 => grp_ClefiaF1Xor_fu_309_ap_return_1,
        ap_return_2 => grp_ClefiaF1Xor_fu_309_ap_return_2,
        ap_return_3 => grp_ClefiaF1Xor_fu_309_ap_return_3,
        ap_return_4 => grp_ClefiaF1Xor_fu_309_ap_return_4,
        ap_return_5 => grp_ClefiaF1Xor_fu_309_ap_return_5,
        ap_return_6 => grp_ClefiaF1Xor_fu_309_ap_return_6,
        ap_return_7 => grp_ClefiaF1Xor_fu_309_ap_return_7);

    flow_control_loop_pipe_sequential_init_U : component clefia_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage5,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaF0Xor_121_fu_290_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaF0Xor_121_fu_290_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaF1Xor_fu_309_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaF1Xor_fu_309_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    grp_ClefiaF1Xor_fu_309_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaF1Xor_fu_309_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaF1Xor_fu_309_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_loop_exit_ready = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    fin_0_1_0_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_0_1_0_fu_114 <= ap_const_lv8_FF;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_0_1_0_fu_114 <= select_ln197_15_fu_661_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_10_1_0_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_10_1_0_fu_154 <= ap_const_lv8_55;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_10_1_0_fu_154 <= select_ln197_5_fu_604_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_11_1_0_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_11_1_0_fu_158 <= ap_const_lv8_44;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_11_1_0_fu_158 <= select_ln197_4_fu_598_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_12_1_0_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_12_1_0_fu_162 <= ap_const_lv8_33;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_12_1_0_fu_162 <= select_ln197_3_fu_593_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_13_1_0_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_13_1_0_fu_166 <= ap_const_lv8_22;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_13_1_0_fu_166 <= select_ln197_2_fu_588_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_14_1_0_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_14_1_0_fu_170 <= ap_const_lv8_11;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_14_1_0_fu_170 <= select_ln197_1_fu_583_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_15_1_0_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_15_1_0_fu_174 <= ap_const_lv8_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_15_1_0_fu_174 <= select_ln197_fu_578_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_1_1_0_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_1_1_0_fu_118 <= ap_const_lv8_EE;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_1_1_0_fu_118 <= select_ln197_14_fu_656_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_2_1_0_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_2_1_0_fu_122 <= ap_const_lv8_DD;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_2_1_0_fu_122 <= select_ln197_13_fu_651_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_3_1_0_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_3_1_0_fu_126 <= ap_const_lv8_CC;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_3_1_0_fu_126 <= select_ln197_12_fu_646_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_4_1_0_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_4_1_0_fu_130 <= ap_const_lv8_BB;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_4_1_0_fu_130 <= select_ln197_11_fu_640_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_5_1_0_fu_134_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_5_1_0_fu_134 <= ap_const_lv8_AA;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_5_1_0_fu_134 <= select_ln197_10_fu_634_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_6_1_0_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_6_1_0_fu_138 <= ap_const_lv8_99;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_6_1_0_fu_138 <= select_ln197_9_fu_628_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_7_1_0_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_7_1_0_fu_142 <= ap_const_lv8_88;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_7_1_0_fu_142 <= select_ln197_8_fu_622_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_8_1_0_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_8_1_0_fu_146 <= ap_const_lv8_77;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_8_1_0_fu_146 <= select_ln197_7_fu_616_p3;
                end if;
            end if; 
        end if;
    end process;

    fin_9_1_0_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    fin_9_1_0_fu_150 <= ap_const_lv8_66;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    fin_9_1_0_fu_150 <= select_ln197_6_fu_610_p3;
                end if;
            end if; 
        end if;
    end process;

    idx_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    idx_fu_106 <= ap_const_lv7_0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    idx_fu_106 <= add_ln196_fu_573_p2;
                end if;
            end if; 
        end if;
    end process;

    r_assign_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    r_assign_fu_110 <= ap_const_lv4_B;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln197_reg_1043 = ap_const_lv1_0))) then 
                    r_assign_fu_110 <= add_ln193_fu_666_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                fin_0_1_0_load_reg_894 <= fin_0_1_0_fu_114;
                fin_1_1_0_load_reg_900 <= fin_1_1_0_fu_118;
                fin_2_1_0_load_reg_906 <= fin_2_1_0_fu_122;
                fin_3_1_0_load_reg_912 <= fin_3_1_0_fu_126;
                fin_4_1_0_load_reg_918 <= fin_4_1_0_fu_130;
                fin_5_1_0_load_reg_924 <= fin_5_1_0_fu_134;
                fin_6_1_0_load_reg_930 <= fin_6_1_0_fu_138;
                fin_7_1_0_load_reg_936 <= fin_7_1_0_fu_142;
                idx_load_reg_887 <= idx_fu_106;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                fin_0_reg_1019 <= grp_ClefiaF0Xor_121_fu_290_ap_return_4;
                fin_12_reg_995 <= grp_ClefiaF0Xor_121_fu_290_ap_return_0;
                fin_13_reg_1001 <= grp_ClefiaF0Xor_121_fu_290_ap_return_1;
                fin_14_reg_1007 <= grp_ClefiaF0Xor_121_fu_290_ap_return_2;
                fin_15_reg_1013 <= grp_ClefiaF0Xor_121_fu_290_ap_return_3;
                fin_1_reg_1025 <= grp_ClefiaF0Xor_121_fu_290_ap_return_5;
                fin_2_reg_1031 <= grp_ClefiaF0Xor_121_fu_290_ap_return_6;
                fin_3_reg_1037 <= grp_ClefiaF0Xor_121_fu_290_ap_return_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                fin_10_1_0_load_reg_954 <= fin_10_1_0_fu_154;
                fin_11_1_0_load_reg_960 <= fin_11_1_0_fu_158;
                fin_12_1_0_load_reg_966 <= fin_12_1_0_fu_162;
                fin_13_1_0_load_reg_972 <= fin_13_1_0_fu_166;
                fin_14_1_0_load_reg_978 <= fin_14_1_0_fu_170;
                fin_15_1_0_load_reg_984 <= fin_15_1_0_fu_174;
                fin_8_1_0_load_reg_942 <= fin_8_1_0_fu_146;
                fin_9_1_0_load_reg_948 <= fin_9_1_0_fu_150;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                icmp_ln197_reg_1043 <= icmp_ln197_fu_527_p2;
                r_assign_load_reg_990 <= r_assign_fu_110;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage5_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter1_stage0, ap_idle_pp0_0to0, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to0 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln193_fu_666_p2 <= std_logic_vector(unsigned(r_assign_load_reg_990) + unsigned(ap_const_lv4_F));
    add_ln196_fu_573_p2 <= std_logic_vector(unsigned(idx_load_reg_887) + unsigned(ap_const_lv7_8));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage5_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_subdone, icmp_ln197_fu_527_p2)
    begin
        if (((icmp_ln197_fu_527_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            ap_condition_exit_pp0_iter0_stage5 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln197_reg_1043, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage5;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    con128_address0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_address0, grp_ClefiaF1Xor_fu_309_rk_address0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_address0 <= grp_ClefiaF1Xor_fu_309_rk_address0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_address0 <= grp_ClefiaF0Xor_121_fu_290_rk_address0;
        else 
            con128_address0 <= "XXXXXXXX";
        end if; 
    end process;


    con128_address1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_address1, grp_ClefiaF1Xor_fu_309_rk_address1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_address1 <= grp_ClefiaF1Xor_fu_309_rk_address1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_address1 <= grp_ClefiaF0Xor_121_fu_290_rk_address1;
        else 
            con128_address1 <= "XXXXXXXX";
        end if; 
    end process;


    con128_address2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_address2, grp_ClefiaF1Xor_fu_309_rk_address2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_address2 <= grp_ClefiaF1Xor_fu_309_rk_address2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_address2 <= grp_ClefiaF0Xor_121_fu_290_rk_address2;
        else 
            con128_address2 <= "XXXXXXXX";
        end if; 
    end process;


    con128_address3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_address3, grp_ClefiaF1Xor_fu_309_rk_address3, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_address3 <= grp_ClefiaF1Xor_fu_309_rk_address3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_address3 <= grp_ClefiaF0Xor_121_fu_290_rk_address3;
        else 
            con128_address3 <= "XXXXXXXX";
        end if; 
    end process;


    con128_ce0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_ce0, grp_ClefiaF1Xor_fu_309_rk_ce0, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_ce0 <= grp_ClefiaF1Xor_fu_309_rk_ce0;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_ce0 <= grp_ClefiaF0Xor_121_fu_290_rk_ce0;
        else 
            con128_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_ce1, grp_ClefiaF1Xor_fu_309_rk_ce1, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_ce1 <= grp_ClefiaF1Xor_fu_309_rk_ce1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_ce1 <= grp_ClefiaF0Xor_121_fu_290_rk_ce1;
        else 
            con128_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_ce2, grp_ClefiaF1Xor_fu_309_rk_ce2, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_ce2 <= grp_ClefiaF1Xor_fu_309_rk_ce2;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_ce2 <= grp_ClefiaF0Xor_121_fu_290_rk_ce2;
        else 
            con128_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    con128_ce3_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, grp_ClefiaF0Xor_121_fu_290_rk_ce3, grp_ClefiaF1Xor_fu_309_rk_ce3, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            con128_ce3 <= grp_ClefiaF1Xor_fu_309_rk_ce3;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            con128_ce3 <= grp_ClefiaF0Xor_121_fu_290_rk_ce3;
        else 
            con128_ce3 <= ap_const_logic_0;
        end if; 
    end process;

    fin_0_out <= fin_0_reg_1019;

    fin_0_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_0_out_ap_vld <= ap_const_logic_1;
        else 
            fin_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_10_out <= grp_ClefiaF1Xor_fu_309_ap_return_6;

    fin_10_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_10_out_ap_vld <= ap_const_logic_1;
        else 
            fin_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_11_out <= grp_ClefiaF1Xor_fu_309_ap_return_7;

    fin_11_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_11_out_ap_vld <= ap_const_logic_1;
        else 
            fin_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_12_out <= fin_12_reg_995;

    fin_12_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_12_out_ap_vld <= ap_const_logic_1;
        else 
            fin_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_13_out <= fin_13_reg_1001;

    fin_13_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_13_out_ap_vld <= ap_const_logic_1;
        else 
            fin_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_14_out <= fin_14_reg_1007;

    fin_14_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_14_out_ap_vld <= ap_const_logic_1;
        else 
            fin_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_15_out <= fin_15_reg_1013;

    fin_15_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_15_out_ap_vld <= ap_const_logic_1;
        else 
            fin_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_1_out <= fin_1_reg_1025;

    fin_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_1_out_ap_vld <= ap_const_logic_1;
        else 
            fin_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_2_out <= fin_2_reg_1031;

    fin_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_2_out_ap_vld <= ap_const_logic_1;
        else 
            fin_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_out <= fin_3_reg_1037;

    fin_3_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_3_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_4_out <= grp_ClefiaF1Xor_fu_309_ap_return_0;

    fin_4_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_4_out_ap_vld <= ap_const_logic_1;
        else 
            fin_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_5_out <= grp_ClefiaF1Xor_fu_309_ap_return_1;

    fin_5_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_5_out_ap_vld <= ap_const_logic_1;
        else 
            fin_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_6_out <= grp_ClefiaF1Xor_fu_309_ap_return_2;

    fin_6_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_6_out_ap_vld <= ap_const_logic_1;
        else 
            fin_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_out <= grp_ClefiaF1Xor_fu_309_ap_return_3;

    fin_7_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_7_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_8_out <= grp_ClefiaF1Xor_fu_309_ap_return_4;

    fin_8_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_8_out_ap_vld <= ap_const_logic_1;
        else 
            fin_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_9_out <= grp_ClefiaF1Xor_fu_309_ap_return_5;

    fin_9_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln197_reg_1043, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln197_reg_1043 = ap_const_lv1_1))) then 
            fin_9_out_ap_vld <= ap_const_logic_1;
        else 
            fin_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    grp_ClefiaF0Xor_121_fu_290_ap_start <= grp_ClefiaF0Xor_121_fu_290_ap_start_reg;
    grp_ClefiaF1Xor_fu_309_ap_start <= grp_ClefiaF1Xor_fu_309_ap_start_reg;
    grp_ClefiaF1Xor_fu_309_rk_offset <= (idx_load_reg_887 or ap_const_lv7_4);
    icmp_ln197_fu_527_p2 <= "1" when (r_assign_fu_110 = ap_const_lv4_0) else "0";
    select_ln197_10_fu_634_p3 <= 
        fin_5_1_0_load_reg_924 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_1;
    select_ln197_11_fu_640_p3 <= 
        fin_4_1_0_load_reg_918 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_0;
    select_ln197_12_fu_646_p3 <= 
        fin_3_1_0_load_reg_912 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_3_reg_1037;
    select_ln197_13_fu_651_p3 <= 
        fin_2_1_0_load_reg_906 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_2_reg_1031;
    select_ln197_14_fu_656_p3 <= 
        fin_1_1_0_load_reg_900 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_1_reg_1025;
    select_ln197_15_fu_661_p3 <= 
        fin_0_1_0_load_reg_894 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_0_reg_1019;
    select_ln197_1_fu_583_p3 <= 
        fin_14_1_0_load_reg_978 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_14_reg_1007;
    select_ln197_2_fu_588_p3 <= 
        fin_13_1_0_load_reg_972 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_13_reg_1001;
    select_ln197_3_fu_593_p3 <= 
        fin_12_1_0_load_reg_966 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_12_reg_995;
    select_ln197_4_fu_598_p3 <= 
        fin_11_1_0_load_reg_960 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_7;
    select_ln197_5_fu_604_p3 <= 
        fin_10_1_0_load_reg_954 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_6;
    select_ln197_6_fu_610_p3 <= 
        fin_9_1_0_load_reg_948 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_5;
    select_ln197_7_fu_616_p3 <= 
        fin_8_1_0_load_reg_942 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_4;
    select_ln197_8_fu_622_p3 <= 
        fin_7_1_0_load_reg_936 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_3;
    select_ln197_9_fu_628_p3 <= 
        fin_6_1_0_load_reg_930 when (icmp_ln197_reg_1043(0) = '1') else 
        grp_ClefiaF1Xor_fu_309_ap_return_2;
    select_ln197_fu_578_p3 <= 
        fin_15_1_0_load_reg_984 when (icmp_ln197_reg_1043(0) = '1') else 
        fin_15_reg_1013;
end behav;
