// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaKeySet192 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rk_address0,
        rk_ce0,
        rk_we0,
        rk_d0,
        rk_address1,
        rk_ce1,
        rk_q1
);

parameter    ap_ST_fsm_state1 = 72'd1;
parameter    ap_ST_fsm_state2 = 72'd2;
parameter    ap_ST_fsm_state3 = 72'd4;
parameter    ap_ST_fsm_state4 = 72'd8;
parameter    ap_ST_fsm_state5 = 72'd16;
parameter    ap_ST_fsm_state6 = 72'd32;
parameter    ap_ST_fsm_state7 = 72'd64;
parameter    ap_ST_fsm_state8 = 72'd128;
parameter    ap_ST_fsm_state9 = 72'd256;
parameter    ap_ST_fsm_state10 = 72'd512;
parameter    ap_ST_fsm_state11 = 72'd1024;
parameter    ap_ST_fsm_state12 = 72'd2048;
parameter    ap_ST_fsm_state13 = 72'd4096;
parameter    ap_ST_fsm_state14 = 72'd8192;
parameter    ap_ST_fsm_state15 = 72'd16384;
parameter    ap_ST_fsm_state16 = 72'd32768;
parameter    ap_ST_fsm_state17 = 72'd65536;
parameter    ap_ST_fsm_state18 = 72'd131072;
parameter    ap_ST_fsm_state19 = 72'd262144;
parameter    ap_ST_fsm_state20 = 72'd524288;
parameter    ap_ST_fsm_state21 = 72'd1048576;
parameter    ap_ST_fsm_state22 = 72'd2097152;
parameter    ap_ST_fsm_state23 = 72'd4194304;
parameter    ap_ST_fsm_state24 = 72'd8388608;
parameter    ap_ST_fsm_state25 = 72'd16777216;
parameter    ap_ST_fsm_state26 = 72'd33554432;
parameter    ap_ST_fsm_state27 = 72'd67108864;
parameter    ap_ST_fsm_state28 = 72'd134217728;
parameter    ap_ST_fsm_state29 = 72'd268435456;
parameter    ap_ST_fsm_state30 = 72'd536870912;
parameter    ap_ST_fsm_state31 = 72'd1073741824;
parameter    ap_ST_fsm_state32 = 72'd2147483648;
parameter    ap_ST_fsm_state33 = 72'd4294967296;
parameter    ap_ST_fsm_state34 = 72'd8589934592;
parameter    ap_ST_fsm_state35 = 72'd17179869184;
parameter    ap_ST_fsm_state36 = 72'd34359738368;
parameter    ap_ST_fsm_state37 = 72'd68719476736;
parameter    ap_ST_fsm_state38 = 72'd137438953472;
parameter    ap_ST_fsm_state39 = 72'd274877906944;
parameter    ap_ST_fsm_state40 = 72'd549755813888;
parameter    ap_ST_fsm_state41 = 72'd1099511627776;
parameter    ap_ST_fsm_state42 = 72'd2199023255552;
parameter    ap_ST_fsm_state43 = 72'd4398046511104;
parameter    ap_ST_fsm_state44 = 72'd8796093022208;
parameter    ap_ST_fsm_state45 = 72'd17592186044416;
parameter    ap_ST_fsm_state46 = 72'd35184372088832;
parameter    ap_ST_fsm_state47 = 72'd70368744177664;
parameter    ap_ST_fsm_state48 = 72'd140737488355328;
parameter    ap_ST_fsm_state49 = 72'd281474976710656;
parameter    ap_ST_fsm_state50 = 72'd562949953421312;
parameter    ap_ST_fsm_state51 = 72'd1125899906842624;
parameter    ap_ST_fsm_state52 = 72'd2251799813685248;
parameter    ap_ST_fsm_state53 = 72'd4503599627370496;
parameter    ap_ST_fsm_state54 = 72'd9007199254740992;
parameter    ap_ST_fsm_state55 = 72'd18014398509481984;
parameter    ap_ST_fsm_state56 = 72'd36028797018963968;
parameter    ap_ST_fsm_state57 = 72'd72057594037927936;
parameter    ap_ST_fsm_state58 = 72'd144115188075855872;
parameter    ap_ST_fsm_state59 = 72'd288230376151711744;
parameter    ap_ST_fsm_state60 = 72'd576460752303423488;
parameter    ap_ST_fsm_state61 = 72'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 72'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 72'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 72'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 72'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 72'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 72'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 72'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 72'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 72'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 72'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 72'd2361183241434822606848;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] rk_address0;
output   rk_ce0;
output   rk_we0;
output  [7:0] rk_d0;
output  [7:0] rk_address1;
output   rk_ce1;
input  [7:0] rk_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] rk_address0;
reg rk_ce0;
reg rk_we0;
reg[7:0] rk_d0;
reg[7:0] rk_address1;
reg rk_ce1;

(* fsm_encoding = "none" *) reg   [71:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] skey256_address0;
reg    skey256_ce0;
wire   [7:0] skey256_q0;
reg   [4:0] skey256_address1;
reg    skey256_ce1;
wire   [7:0] skey256_q1;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire   [3:0] add_ln340_fu_1123_p2;
reg   [3:0] add_ln340_reg_1361;
wire    ap_CS_fsm_state36;
wire   [7:0] or_ln326_fu_1129_p2;
reg   [7:0] or_ln326_reg_1366;
wire   [0:0] icmp_ln340_fu_1117_p2;
wire   [0:0] trunc_ln341_fu_1137_p1;
reg   [0:0] trunc_ln341_reg_1374;
wire   [0:0] tmp_fu_1141_p3;
reg   [0:0] tmp_reg_1378;
wire   [8:0] add_ln348_fu_1161_p2;
reg   [8:0] add_ln348_reg_1382;
reg   [4:0] fin_address0;
reg    fin_ce0;
reg    fin_we0;
reg   [7:0] fin_d0;
wire   [7:0] fin_q0;
reg   [4:0] fin_address1;
reg    fin_ce1;
reg    fin_we1;
reg   [7:0] fin_d1;
wire   [7:0] fin_q1;
reg   [4:0] fout_address0;
reg    fout_ce0;
reg    fout_we0;
wire   [7:0] fout_q0;
reg   [4:0] fout_address1;
reg    fout_ce1;
reg    fout_we1;
wire   [7:0] fout_q1;
reg   [4:0] lk_address0;
reg    lk_ce0;
reg    lk_we0;
reg   [7:0] lk_d0;
wire   [7:0] lk_q0;
reg   [4:0] lk_address1;
reg    lk_ce1;
reg    lk_we1;
reg   [7:0] lk_d1;
wire   [7:0] lk_q1;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_ready;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address0;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address1;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce1;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we1;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d1;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address0;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address1;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce1;
wire    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we1;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_ready;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_d0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_ready;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_ce0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_d0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_ready;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_ce0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_d0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_ready;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_d0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce0;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_ready;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_d0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce1;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_ce0;
wire    grp_ClefiaDoubleSwap_1_fu_1084_ap_start;
wire    grp_ClefiaDoubleSwap_1_fu_1084_ap_done;
wire    grp_ClefiaDoubleSwap_1_fu_1084_ap_idle;
wire    grp_ClefiaDoubleSwap_1_fu_1084_ap_ready;
wire   [4:0] grp_ClefiaDoubleSwap_1_fu_1084_lk_address0;
wire    grp_ClefiaDoubleSwap_1_fu_1084_lk_ce0;
wire    grp_ClefiaDoubleSwap_1_fu_1084_lk_we0;
wire   [7:0] grp_ClefiaDoubleSwap_1_fu_1084_lk_d0;
wire   [4:0] grp_ClefiaDoubleSwap_1_fu_1084_lk_address1;
wire    grp_ClefiaDoubleSwap_1_fu_1084_lk_ce1;
wire    grp_ClefiaDoubleSwap_1_fu_1084_lk_we1;
wire   [7:0] grp_ClefiaDoubleSwap_1_fu_1084_lk_d1;
reg   [4:0] grp_ClefiaDoubleSwap_1_fu_1084_lk_offset;
reg    grp_ClefiaDoubleSwap_1_fu_1084_ap_ce;
reg    ap_block_state39_on_subcall_done;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_done;
reg    ap_block_state57_on_subcall_done;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state47;
wire    ap_CS_fsm_state48;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
wire    ap_CS_fsm_state51;
wire    ap_CS_fsm_state52;
wire    ap_CS_fsm_state53;
wire    ap_CS_fsm_state54;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
wire    ap_CS_fsm_state67;
wire    ap_CS_fsm_state68;
wire    ap_CS_fsm_state69;
wire    ap_CS_fsm_state70;
wire    ap_CS_fsm_state71;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_idle;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_ready;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_d0;
wire   [7:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address1;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce1;
wire   [4:0] grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_address0;
wire    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_ce0;
reg    grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg;
wire    ap_CS_fsm_state37;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg;
wire    ap_CS_fsm_state55;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg;
wire    ap_CS_fsm_state72;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg;
wire    ap_CS_fsm_state38;
reg    grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg;
reg   [71:0] ap_NS_fsm;
wire    ap_NS_fsm_state39;
wire    ap_CS_fsm_state56;
wire    ap_NS_fsm_state57;
reg    grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state35;
reg   [7:0] idx26_fu_174;
wire   [7:0] add_ln354_fu_1169_p2;
reg   [3:0] i_fu_178;
wire   [7:0] shl_ln_fu_1149_p3;
wire   [8:0] zext_ln348_fu_1157_p1;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_block_state18_on_subcall_done;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
reg    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
reg    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
reg    ap_ST_fsm_state72_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 72'd1;
#0 grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg = 1'b0;
#0 grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg = 1'b0;
end

clefia_ClefiaKeySet192_skey256_ROM_AUTO_1R #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
skey256_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(skey256_address0),
    .ce0(skey256_ce0),
    .q0(skey256_q0),
    .address1(skey256_address1),
    .ce1(skey256_ce1),
    .q1(skey256_q1)
);

clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
fin_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fin_address0),
    .ce0(fin_ce0),
    .we0(fin_we0),
    .d0(fin_d0),
    .q0(fin_q0),
    .address1(fin_address1),
    .ce1(fin_ce1),
    .we1(fin_we1),
    .d1(fin_d1),
    .q1(fin_q1)
);

clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
fout_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fout_address0),
    .ce0(fout_ce0),
    .we0(fout_we0),
    .d0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d0),
    .q0(fout_q0),
    .address1(fout_address1),
    .ce1(fout_ce1),
    .we1(fout_we1),
    .d1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d1),
    .q1(fout_q1)
);

clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lk_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lk_address0),
    .ce0(lk_ce0),
    .we0(lk_we0),
    .d0(lk_d0),
    .q0(lk_q0),
    .address1(lk_address1),
    .ce1(lk_ce1),
    .we1(lk_we1),
    .d1(lk_d1),
    .q1(lk_q1)
);

clefia_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4 grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_ready),
    .fin_address0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address0),
    .fin_ce0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce0),
    .fin_we0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we0),
    .fin_d0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d0),
    .fin_q0(fin_q0),
    .fin_address1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address1),
    .fin_ce1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce1),
    .fin_we1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we1),
    .fin_d1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d1),
    .fin_q1(fin_q1),
    .fout_address0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address0),
    .fout_ce0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce0),
    .fout_we0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we0),
    .fout_d0(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d0),
    .fout_q0(fout_q0),
    .fout_address1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address1),
    .fout_ce1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce1),
    .fout_we1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we1),
    .fout_d1(grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_d1),
    .fout_q1(fout_q1)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label2 grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_ready),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_d0),
    .skey256_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address0),
    .skey256_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce0),
    .skey256_q0(skey256_q0),
    .skey256_address1(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address1),
    .skey256_ce1(grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce1),
    .skey256_q1(skey256_q1)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label28 grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_ready),
    .add_ln348(add_ln348_reg_1382),
    .lk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_address0),
    .lk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_ce0),
    .lk_q0(lk_q0),
    .or_ln326(or_ln326_reg_1366),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_d0)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label26 grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_ready),
    .add_ln348(add_ln348_reg_1382),
    .lk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_address0),
    .lk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_ce0),
    .lk_q0(lk_q0),
    .or_ln326(or_ln326_reg_1366),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_d0)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label210 grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_ready),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_d0),
    .skey256_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address0),
    .skey256_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce0),
    .skey256_q0(skey256_q0),
    .skey256_address1(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address1),
    .skey256_ce1(grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce1),
    .skey256_q1(skey256_q1)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label29 grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_ready),
    .or_ln326(or_ln326_reg_1366),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_d0),
    .rk_address1(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address1),
    .rk_ce1(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce1),
    .rk_q1(rk_q1),
    .skey256_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_address0),
    .skey256_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_ce0),
    .skey256_q0(skey256_q0)
);

clefia_ClefiaDoubleSwap_1 grp_ClefiaDoubleSwap_1_fu_1084(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaDoubleSwap_1_fu_1084_ap_start),
    .ap_done(grp_ClefiaDoubleSwap_1_fu_1084_ap_done),
    .ap_idle(grp_ClefiaDoubleSwap_1_fu_1084_ap_idle),
    .ap_ready(grp_ClefiaDoubleSwap_1_fu_1084_ap_ready),
    .lk_address0(grp_ClefiaDoubleSwap_1_fu_1084_lk_address0),
    .lk_ce0(grp_ClefiaDoubleSwap_1_fu_1084_lk_ce0),
    .lk_we0(grp_ClefiaDoubleSwap_1_fu_1084_lk_we0),
    .lk_d0(grp_ClefiaDoubleSwap_1_fu_1084_lk_d0),
    .lk_q0(lk_q0),
    .lk_address1(grp_ClefiaDoubleSwap_1_fu_1084_lk_address1),
    .lk_ce1(grp_ClefiaDoubleSwap_1_fu_1084_lk_ce1),
    .lk_we1(grp_ClefiaDoubleSwap_1_fu_1084_lk_we1),
    .lk_d1(grp_ClefiaDoubleSwap_1_fu_1084_lk_d1),
    .lk_q1(lk_q1),
    .lk_offset(grp_ClefiaDoubleSwap_1_fu_1084_lk_offset),
    .ap_ce(grp_ClefiaDoubleSwap_1_fu_1084_ap_ce)
);

clefia_ClefiaKeySet192_Pipeline_ByteXor_label27 grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start),
    .ap_done(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_done),
    .ap_idle(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_ready),
    .or_ln326(or_ln326_reg_1366),
    .rk_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_d0),
    .rk_address1(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address1),
    .rk_ce1(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce1),
    .rk_q1(rk_q1),
    .skey256_address0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_address0),
    .skey256_ce0(grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_ce0),
    .skey256_q0(skey256_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_NS_fsm_state57) & ((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state55))) | ((1'b1 == ap_NS_fsm_state39) & ((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37))))) begin
            grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaDoubleSwap_1_fu_1084_ap_ready == 1'b1)) begin
            grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln340_fu_1117_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_fu_1141_p3 == 1'd1) & (icmp_ln340_fu_1117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state56)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_fu_1141_p3 == 1'd0) & (icmp_ln340_fu_1117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state38)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_178 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        i_fu_178 <= add_ln340_reg_1361;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        idx26_fu_174 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        idx26_fu_174 <= add_ln354_fu_1169_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln340_reg_1361 <= add_ln340_fu_1123_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_1117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        add_ln348_reg_1382[8 : 4] <= add_ln348_fu_1161_p2[8 : 4];
        or_ln326_reg_1366[2 : 0] <= or_ln326_fu_1129_p2[2 : 0];
or_ln326_reg_1366[7 : 4] <= or_ln326_fu_1129_p2[7 : 4];
        tmp_reg_1378 <= i_fu_178[32'd1];
        trunc_ln341_reg_1374 <= trunc_ln341_fu_1137_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state18_on_subcall_done)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_done == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state39_on_subcall_done)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_done == 1'b0)) begin
        ap_ST_fsm_state55_blk = 1'b1;
    end else begin
        ap_ST_fsm_state55_blk = 1'b0;
    end
end

assign ap_ST_fsm_state56_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state57_on_subcall_done)) begin
        ap_ST_fsm_state57_blk = 1'b1;
    end else begin
        ap_ST_fsm_state57_blk = 1'b0;
    end
end

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done == 1'b0)) begin
        ap_ST_fsm_state72_blk = 1'b1;
    end else begin
        ap_ST_fsm_state72_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fin_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fin_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fin_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fin_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fin_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fin_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fin_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fin_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_address0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address0;
    end else begin
        fin_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fin_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fin_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fin_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fin_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fin_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fin_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fin_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fin_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_address1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_address1;
    end else begin
        fin_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_ce0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce0;
    end else begin
        fin_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_ce1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_ce1;
    end else begin
        fin_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fin_d0 = 8'd119;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fin_d0 = 8'd85;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fin_d0 = 8'd51;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fin_d0 = 8'd17;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fin_d0 = 8'd128;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fin_d0 = 8'd160;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fin_d0 = 8'd192;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fin_d0 = 8'd224;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_d0 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_d0 = 8'd34;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_d0 = 8'd68;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_d0 = 8'd102;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_d0 = 8'd136;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_d0 = 8'd170;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_d0 = 8'd204;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_d0 = 8'd238;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_d0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d0;
    end else begin
        fin_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        fin_d1 = 8'd102;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        fin_d1 = 8'd68;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        fin_d1 = 8'd34;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        fin_d1 = 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        fin_d1 = 8'd144;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        fin_d1 = 8'd176;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        fin_d1 = 8'd208;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        fin_d1 = 8'd240;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_d1 = 8'd17;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_d1 = 8'd51;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_d1 = 8'd85;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_d1 = 8'd119;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_d1 = 8'd153;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_d1 = 8'd187;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_d1 = 8'd221;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_d1 = 8'd255;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_d1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_d1;
    end else begin
        fin_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_we0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we0;
    end else begin
        fin_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fin_we1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fin_we1;
    end else begin
        fin_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        fout_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        fout_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        fout_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        fout_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        fout_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fout_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        fout_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fout_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        fout_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        fout_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fout_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        fout_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        fout_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fout_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        fout_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fout_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_address0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address0;
    end else begin
        fout_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        fout_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        fout_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        fout_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        fout_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        fout_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        fout_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        fout_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        fout_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        fout_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        fout_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        fout_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        fout_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        fout_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        fout_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        fout_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        fout_address1 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_address1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_address1;
    end else begin
        fout_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        fout_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_ce0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce0;
    end else begin
        fout_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19))) begin
        fout_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_ce1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_ce1;
    end else begin
        fout_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_we0 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we0;
    end else begin
        fout_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fout_we1 = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_fout_we1;
    end else begin
        fout_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | ((1'b0 == ap_block_state57_on_subcall_done) & (1'b1 == ap_CS_fsm_state57)) | ((1'b0 == ap_block_state39_on_subcall_done) & (1'b1 == ap_CS_fsm_state39)))) begin
        grp_ClefiaDoubleSwap_1_fu_1084_ap_ce = 1'b1;
    end else begin
        grp_ClefiaDoubleSwap_1_fu_1084_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        grp_ClefiaDoubleSwap_1_fu_1084_lk_offset = 5'd16;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_ClefiaDoubleSwap_1_fu_1084_lk_offset = 5'd0;
    end else begin
        grp_ClefiaDoubleSwap_1_fu_1084_lk_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        lk_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        lk_address0 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        lk_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        lk_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        lk_address0 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        lk_address0 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        lk_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        lk_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        lk_address0 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        lk_address0 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        lk_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        lk_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        lk_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        lk_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        lk_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        lk_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_address0 = grp_ClefiaDoubleSwap_1_fu_1084_lk_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        lk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        lk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_address0;
    end else begin
        lk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        lk_address1 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        lk_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        lk_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        lk_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        lk_address1 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        lk_address1 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        lk_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        lk_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        lk_address1 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        lk_address1 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        lk_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        lk_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        lk_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        lk_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        lk_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        lk_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_address1 = grp_ClefiaDoubleSwap_1_fu_1084_lk_address1;
    end else begin
        lk_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_ce0 = grp_ClefiaDoubleSwap_1_fu_1084_lk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        lk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_lk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        lk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_lk_ce0;
    end else begin
        lk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_ce1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_ce1 = grp_ClefiaDoubleSwap_1_fu_1084_lk_ce1;
    end else begin
        lk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_d0 = fout_q0;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_d0 = grp_ClefiaDoubleSwap_1_fu_1084_lk_d0;
    end else begin
        lk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_d1 = fout_q1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_d1 = grp_ClefiaDoubleSwap_1_fu_1084_lk_d1;
    end else begin
        lk_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_we0 = grp_ClefiaDoubleSwap_1_fu_1084_lk_we0;
    end else begin
        lk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        lk_we1 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state69) | (1'b1 == ap_CS_fsm_state68) | (1'b1 == ap_CS_fsm_state67) | (1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | ((tmp_reg_1378 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_reg_1378 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        lk_we1 = grp_ClefiaDoubleSwap_1_fu_1084_lk_we1;
    end else begin
        lk_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_address0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_address0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rk_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_address0;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((trunc_ln341_reg_1374 == 1'd1)) begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            rk_address1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_address1;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            rk_address1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_address1;
        end else begin
            rk_address1 = 'bx;
        end
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rk_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_ce0;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((trunc_ln341_reg_1374 == 1'd1)) begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            rk_ce1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_ce1;
        end else if ((1'b1 == ap_CS_fsm_state39)) begin
            rk_ce1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_ce1;
        end else begin
            rk_ce1 = 1'b0;
        end
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_d0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_d0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_d0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_d0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_d0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rk_d0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_d0;
    end else begin
        rk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_rk_we0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_rk_we0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_rk_we0;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_rk_we0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_rk_we0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        rk_we0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_rk_we0;
    end else begin
        rk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        skey256_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_address0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        skey256_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_address0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        skey256_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        skey256_address0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address0;
    end else begin
        skey256_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        skey256_address1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_address1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        skey256_address1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_address1;
    end else begin
        skey256_address1 = 'bx;
    end
end

always @ (*) begin
    if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        skey256_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_skey256_ce0;
    end else if (((trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state39))) begin
        skey256_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_skey256_ce0;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        skey256_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        skey256_ce0 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce0;
    end else begin
        skey256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state72)) begin
        skey256_ce1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_skey256_ce1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        skey256_ce1 = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_skey256_ce1;
    end else begin
        skey256_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((1'b0 == ap_block_state18_on_subcall_done) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((tmp_fu_1141_p3 == 1'd1) & (icmp_ln340_fu_1117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else if (((tmp_fu_1141_p3 == 1'd0) & (icmp_ln340_fu_1117_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_done == 1'b1) & (trunc_ln341_reg_1374 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_done == 1'b1) & (trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            if (((1'b0 == ap_block_state39_on_subcall_done) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state55 : begin
            if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_done == 1'b1) & (trunc_ln341_reg_1374 == 1'd0) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_done == 1'b1) & (trunc_ln341_reg_1374 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b0 == ap_block_state57_on_subcall_done) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state72 : begin
            if (((grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state72))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln340_fu_1123_p2 = (i_fu_178 + 4'd1);

assign add_ln348_fu_1161_p2 = (zext_ln348_fu_1157_p1 + 9'd160);

assign add_ln354_fu_1169_p2 = (idx26_fu_174 + 8'd16);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd66];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state39 = ap_NS_fsm[32'd38];

assign ap_NS_fsm_state57 = ap_NS_fsm[32'd56];

always @ (*) begin
    ap_block_state18_on_subcall_done = ((grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_done == 1'b0) | (grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state39_on_subcall_done = ((grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_done == 1'b0) & (trunc_ln341_reg_1374 == 1'd1));
end

always @ (*) begin
    ap_block_state57_on_subcall_done = ((grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_done == 1'b0) & (trunc_ln341_reg_1374 == 1'd1));
end

assign grp_ClefiaDoubleSwap_1_fu_1084_ap_start = grp_ClefiaDoubleSwap_1_fu_1084_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label210_fu_1067_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label26_fu_1056_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label27_fu_1092_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label28_fu_1045_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label29_fu_1075_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start = grp_ClefiaKeySet192_Pipeline_ByteXor_label2_fu_1037_ap_start_reg;

assign grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start = grp_ClefiaKeySet192_Pipeline_ClefiaGfn8_label4_fu_1025_ap_start_reg;

assign icmp_ln340_fu_1117_p2 = ((i_fu_178 == 4'd11) ? 1'b1 : 1'b0);

assign or_ln326_fu_1129_p2 = (idx26_fu_174 | 8'd8);

assign shl_ln_fu_1149_p3 = {{i_fu_178}, {4'd0}};

assign tmp_fu_1141_p3 = i_fu_178[32'd1];

assign trunc_ln341_fu_1137_p1 = i_fu_178[0:0];

assign zext_ln348_fu_1157_p1 = shl_ln_fu_1149_p3;

always @ (posedge ap_clk) begin
    or_ln326_reg_1366[3] <= 1'b1;
    add_ln348_reg_1382[3:0] <= 4'b0000;
end

endmodule //clefia_ClefiaKeySet192
