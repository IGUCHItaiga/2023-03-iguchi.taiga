// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fin_12_out,
        fin_12_out_ap_vld,
        fin_13_out,
        fin_13_out_ap_vld,
        fin_14_out,
        fin_14_out_ap_vld,
        fin_15_out,
        fin_15_out_ap_vld,
        fin_0_out,
        fin_0_out_ap_vld,
        fin_1_out,
        fin_1_out_ap_vld,
        fin_2_out,
        fin_2_out_ap_vld,
        fin_3_out,
        fin_3_out_ap_vld,
        fin_4_out,
        fin_4_out_ap_vld,
        fin_5_out,
        fin_5_out_ap_vld,
        fin_6_out,
        fin_6_out_ap_vld,
        fin_7_out,
        fin_7_out_ap_vld,
        fin_8_out,
        fin_8_out_ap_vld,
        fin_9_out,
        fin_9_out_ap_vld,
        fin_10_out,
        fin_10_out_ap_vld,
        fin_11_out,
        fin_11_out_ap_vld,
        con128_address0,
        con128_ce0,
        con128_q0,
        con128_address1,
        con128_ce1,
        con128_q1,
        con128_address2,
        con128_ce2,
        con128_q2,
        con128_address3,
        con128_ce3,
        con128_q3
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] fin_12_out;
output   fin_12_out_ap_vld;
output  [7:0] fin_13_out;
output   fin_13_out_ap_vld;
output  [7:0] fin_14_out;
output   fin_14_out_ap_vld;
output  [7:0] fin_15_out;
output   fin_15_out_ap_vld;
output  [7:0] fin_0_out;
output   fin_0_out_ap_vld;
output  [7:0] fin_1_out;
output   fin_1_out_ap_vld;
output  [7:0] fin_2_out;
output   fin_2_out_ap_vld;
output  [7:0] fin_3_out;
output   fin_3_out_ap_vld;
output  [7:0] fin_4_out;
output   fin_4_out_ap_vld;
output  [7:0] fin_5_out;
output   fin_5_out_ap_vld;
output  [7:0] fin_6_out;
output   fin_6_out_ap_vld;
output  [7:0] fin_7_out;
output   fin_7_out_ap_vld;
output  [7:0] fin_8_out;
output   fin_8_out_ap_vld;
output  [7:0] fin_9_out;
output   fin_9_out_ap_vld;
output  [7:0] fin_10_out;
output   fin_10_out_ap_vld;
output  [7:0] fin_11_out;
output   fin_11_out_ap_vld;
output  [7:0] con128_address0;
output   con128_ce0;
input  [7:0] con128_q0;
output  [7:0] con128_address1;
output   con128_ce1;
input  [7:0] con128_q1;
output  [7:0] con128_address2;
output   con128_ce2;
input  [7:0] con128_q2;
output  [7:0] con128_address3;
output   con128_ce3;
input  [7:0] con128_q3;

reg ap_idle;
reg fin_12_out_ap_vld;
reg fin_13_out_ap_vld;
reg fin_14_out_ap_vld;
reg fin_15_out_ap_vld;
reg fin_0_out_ap_vld;
reg fin_1_out_ap_vld;
reg fin_2_out_ap_vld;
reg fin_3_out_ap_vld;
reg fin_4_out_ap_vld;
reg fin_5_out_ap_vld;
reg fin_6_out_ap_vld;
reg fin_7_out_ap_vld;
reg fin_8_out_ap_vld;
reg fin_9_out_ap_vld;
reg fin_10_out_ap_vld;
reg fin_11_out_ap_vld;
reg[7:0] con128_address0;
reg con128_ce0;
reg[7:0] con128_address1;
reg con128_ce1;
reg[7:0] con128_address2;
reg con128_ce2;
reg[7:0] con128_address3;
reg con128_ce3;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire   [0:0] icmp_ln197_fu_527_p2;
reg    ap_condition_exit_pp0_iter0_stage5;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [6:0] idx_load_reg_887;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] fin_0_1_0_load_reg_894;
reg   [7:0] fin_1_1_0_load_reg_900;
reg   [7:0] fin_2_1_0_load_reg_906;
reg   [7:0] fin_3_1_0_load_reg_912;
reg   [7:0] fin_4_1_0_load_reg_918;
reg   [7:0] fin_5_1_0_load_reg_924;
reg   [7:0] fin_6_1_0_load_reg_930;
reg   [7:0] fin_7_1_0_load_reg_936;
reg   [7:0] fin_8_1_0_load_reg_942;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [7:0] fin_9_1_0_load_reg_948;
reg   [7:0] fin_10_1_0_load_reg_954;
reg   [7:0] fin_11_1_0_load_reg_960;
reg   [7:0] fin_12_1_0_load_reg_966;
reg   [7:0] fin_13_1_0_load_reg_972;
reg   [7:0] fin_14_1_0_load_reg_978;
reg   [7:0] fin_15_1_0_load_reg_984;
reg   [3:0] r_assign_load_reg_990;
wire    ap_block_pp0_stage5_11001;
reg   [7:0] fin_12_reg_995;
reg   [7:0] fin_13_reg_1001;
reg   [7:0] fin_14_reg_1007;
reg   [7:0] fin_15_reg_1013;
reg   [7:0] fin_0_reg_1019;
reg   [7:0] fin_1_reg_1025;
reg   [7:0] fin_2_reg_1031;
reg   [7:0] fin_3_reg_1037;
reg   [0:0] icmp_ln197_reg_1043;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire    grp_ClefiaF0Xor_121_fu_290_ap_start;
wire    grp_ClefiaF0Xor_121_fu_290_ap_done;
wire    grp_ClefiaF0Xor_121_fu_290_ap_idle;
wire    grp_ClefiaF0Xor_121_fu_290_ap_ready;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_rk_address0;
wire    grp_ClefiaF0Xor_121_fu_290_rk_ce0;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_rk_address1;
wire    grp_ClefiaF0Xor_121_fu_290_rk_ce1;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_rk_address2;
wire    grp_ClefiaF0Xor_121_fu_290_rk_ce2;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_rk_address3;
wire    grp_ClefiaF0Xor_121_fu_290_rk_ce3;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_0;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_1;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_2;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_3;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_4;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_5;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_6;
wire   [7:0] grp_ClefiaF0Xor_121_fu_290_ap_return_7;
wire    grp_ClefiaF1Xor_fu_309_ap_start;
wire    grp_ClefiaF1Xor_fu_309_ap_done;
wire    grp_ClefiaF1Xor_fu_309_ap_idle;
wire    grp_ClefiaF1Xor_fu_309_ap_ready;
wire   [7:0] grp_ClefiaF1Xor_fu_309_rk_address0;
wire    grp_ClefiaF1Xor_fu_309_rk_ce0;
wire   [7:0] grp_ClefiaF1Xor_fu_309_rk_address1;
wire    grp_ClefiaF1Xor_fu_309_rk_ce1;
wire   [7:0] grp_ClefiaF1Xor_fu_309_rk_address2;
wire    grp_ClefiaF1Xor_fu_309_rk_ce2;
wire   [7:0] grp_ClefiaF1Xor_fu_309_rk_address3;
wire    grp_ClefiaF1Xor_fu_309_rk_ce3;
wire   [6:0] grp_ClefiaF1Xor_fu_309_rk_offset;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_0;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_1;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_2;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_3;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_4;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_5;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_6;
wire   [7:0] grp_ClefiaF1Xor_fu_309_ap_return_7;
reg    grp_ClefiaF0Xor_121_fu_290_ap_start_reg;
wire    ap_block_pp0_stage0_11001;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
reg    grp_ClefiaF1Xor_fu_309_ap_start_reg;
reg   [6:0] idx_fu_106;
wire   [6:0] add_ln196_fu_573_p2;
wire    ap_loop_init;
reg   [3:0] r_assign_fu_110;
wire   [3:0] add_ln193_fu_666_p2;
reg   [7:0] fin_0_1_0_fu_114;
wire   [7:0] select_ln197_15_fu_661_p3;
reg   [7:0] fin_1_1_0_fu_118;
wire   [7:0] select_ln197_14_fu_656_p3;
reg   [7:0] fin_2_1_0_fu_122;
wire   [7:0] select_ln197_13_fu_651_p3;
reg   [7:0] fin_3_1_0_fu_126;
wire   [7:0] select_ln197_12_fu_646_p3;
reg   [7:0] fin_4_1_0_fu_130;
wire   [7:0] select_ln197_11_fu_640_p3;
reg   [7:0] fin_5_1_0_fu_134;
wire   [7:0] select_ln197_10_fu_634_p3;
reg   [7:0] fin_6_1_0_fu_138;
wire   [7:0] select_ln197_9_fu_628_p3;
reg   [7:0] fin_7_1_0_fu_142;
wire   [7:0] select_ln197_8_fu_622_p3;
reg   [7:0] fin_8_1_0_fu_146;
wire   [7:0] select_ln197_7_fu_616_p3;
reg   [7:0] fin_9_1_0_fu_150;
wire   [7:0] select_ln197_6_fu_610_p3;
reg   [7:0] fin_10_1_0_fu_154;
wire   [7:0] select_ln197_5_fu_604_p3;
reg   [7:0] fin_11_1_0_fu_158;
wire   [7:0] select_ln197_4_fu_598_p3;
reg   [7:0] fin_12_1_0_fu_162;
wire   [7:0] select_ln197_3_fu_593_p3;
reg   [7:0] fin_13_1_0_fu_166;
wire   [7:0] select_ln197_2_fu_588_p3;
reg   [7:0] fin_14_1_0_fu_170;
wire   [7:0] select_ln197_1_fu_583_p3;
reg   [7:0] fin_15_1_0_fu_174;
wire   [7:0] select_ln197_fu_578_p3;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage0;
reg    ap_idle_pp0_0to0;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_ClefiaF0Xor_121_fu_290_ap_start_reg = 1'b0;
#0 grp_ClefiaF1Xor_fu_309_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

clefia_ClefiaF0Xor_121 grp_ClefiaF0Xor_121_fu_290(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF0Xor_121_fu_290_ap_start),
    .ap_done(grp_ClefiaF0Xor_121_fu_290_ap_done),
    .ap_idle(grp_ClefiaF0Xor_121_fu_290_ap_idle),
    .ap_ready(grp_ClefiaF0Xor_121_fu_290_ap_ready),
    .p_read8(fin_0_1_0_fu_114),
    .p_read23(fin_1_1_0_fu_118),
    .p_read24(fin_2_1_0_fu_122),
    .p_read25(fin_3_1_0_fu_126),
    .p_read26(fin_4_1_0_fu_130),
    .p_read27(fin_5_1_0_fu_134),
    .p_read28(fin_6_1_0_fu_138),
    .p_read29(fin_7_1_0_fu_142),
    .rk_address0(grp_ClefiaF0Xor_121_fu_290_rk_address0),
    .rk_ce0(grp_ClefiaF0Xor_121_fu_290_rk_ce0),
    .rk_q0(con128_q0),
    .rk_address1(grp_ClefiaF0Xor_121_fu_290_rk_address1),
    .rk_ce1(grp_ClefiaF0Xor_121_fu_290_rk_ce1),
    .rk_q1(con128_q1),
    .rk_address2(grp_ClefiaF0Xor_121_fu_290_rk_address2),
    .rk_ce2(grp_ClefiaF0Xor_121_fu_290_rk_ce2),
    .rk_q2(con128_q2),
    .rk_address3(grp_ClefiaF0Xor_121_fu_290_rk_address3),
    .rk_ce3(grp_ClefiaF0Xor_121_fu_290_rk_ce3),
    .rk_q3(con128_q3),
    .rk_offset(idx_fu_106),
    .ap_return_0(grp_ClefiaF0Xor_121_fu_290_ap_return_0),
    .ap_return_1(grp_ClefiaF0Xor_121_fu_290_ap_return_1),
    .ap_return_2(grp_ClefiaF0Xor_121_fu_290_ap_return_2),
    .ap_return_3(grp_ClefiaF0Xor_121_fu_290_ap_return_3),
    .ap_return_4(grp_ClefiaF0Xor_121_fu_290_ap_return_4),
    .ap_return_5(grp_ClefiaF0Xor_121_fu_290_ap_return_5),
    .ap_return_6(grp_ClefiaF0Xor_121_fu_290_ap_return_6),
    .ap_return_7(grp_ClefiaF0Xor_121_fu_290_ap_return_7)
);

clefia_ClefiaF1Xor grp_ClefiaF1Xor_fu_309(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_ClefiaF1Xor_fu_309_ap_start),
    .ap_done(grp_ClefiaF1Xor_fu_309_ap_done),
    .ap_idle(grp_ClefiaF1Xor_fu_309_ap_idle),
    .ap_ready(grp_ClefiaF1Xor_fu_309_ap_ready),
    .src_8_read(fin_8_1_0_fu_146),
    .src_9_read(fin_9_1_0_fu_150),
    .src_10_read(fin_10_1_0_fu_154),
    .src_11_read(fin_11_1_0_fu_158),
    .src_12_read(fin_12_1_0_fu_162),
    .src_13_read(fin_13_1_0_fu_166),
    .src_14_read(fin_14_1_0_fu_170),
    .src_15_read(fin_15_1_0_fu_174),
    .rk_address0(grp_ClefiaF1Xor_fu_309_rk_address0),
    .rk_ce0(grp_ClefiaF1Xor_fu_309_rk_ce0),
    .rk_q0(con128_q0),
    .rk_address1(grp_ClefiaF1Xor_fu_309_rk_address1),
    .rk_ce1(grp_ClefiaF1Xor_fu_309_rk_ce1),
    .rk_q1(con128_q1),
    .rk_address2(grp_ClefiaF1Xor_fu_309_rk_address2),
    .rk_ce2(grp_ClefiaF1Xor_fu_309_rk_ce2),
    .rk_q2(con128_q2),
    .rk_address3(grp_ClefiaF1Xor_fu_309_rk_address3),
    .rk_ce3(grp_ClefiaF1Xor_fu_309_rk_ce3),
    .rk_q3(con128_q3),
    .rk_offset(grp_ClefiaF1Xor_fu_309_rk_offset),
    .ap_return_0(grp_ClefiaF1Xor_fu_309_ap_return_0),
    .ap_return_1(grp_ClefiaF1Xor_fu_309_ap_return_1),
    .ap_return_2(grp_ClefiaF1Xor_fu_309_ap_return_2),
    .ap_return_3(grp_ClefiaF1Xor_fu_309_ap_return_3),
    .ap_return_4(grp_ClefiaF1Xor_fu_309_ap_return_4),
    .ap_return_5(grp_ClefiaF1Xor_fu_309_ap_return_5),
    .ap_return_6(grp_ClefiaF1Xor_fu_309_ap_return_6),
    .ap_return_7(grp_ClefiaF1Xor_fu_309_ap_return_7)
);

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage5),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF0Xor_121_fu_290_ap_ready == 1'b1)) begin
            grp_ClefiaF0Xor_121_fu_290_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_ClefiaF1Xor_fu_309_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_ClefiaF1Xor_fu_309_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaF1Xor_fu_309_ap_ready == 1'b1)) begin
            grp_ClefiaF1Xor_fu_309_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_0_1_0_fu_114 <= 8'd255;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_0_1_0_fu_114 <= select_ln197_15_fu_661_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_10_1_0_fu_154 <= 8'd85;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_10_1_0_fu_154 <= select_ln197_5_fu_604_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_11_1_0_fu_158 <= 8'd68;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_11_1_0_fu_158 <= select_ln197_4_fu_598_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_12_1_0_fu_162 <= 8'd51;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_12_1_0_fu_162 <= select_ln197_3_fu_593_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_13_1_0_fu_166 <= 8'd34;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_13_1_0_fu_166 <= select_ln197_2_fu_588_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_14_1_0_fu_170 <= 8'd17;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_14_1_0_fu_170 <= select_ln197_1_fu_583_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_15_1_0_fu_174 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_15_1_0_fu_174 <= select_ln197_fu_578_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_1_1_0_fu_118 <= 8'd238;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_1_1_0_fu_118 <= select_ln197_14_fu_656_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_2_1_0_fu_122 <= 8'd221;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_2_1_0_fu_122 <= select_ln197_13_fu_651_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_3_1_0_fu_126 <= 8'd204;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_3_1_0_fu_126 <= select_ln197_12_fu_646_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_4_1_0_fu_130 <= 8'd187;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_4_1_0_fu_130 <= select_ln197_11_fu_640_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_5_1_0_fu_134 <= 8'd170;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_5_1_0_fu_134 <= select_ln197_10_fu_634_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_6_1_0_fu_138 <= 8'd153;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_6_1_0_fu_138 <= select_ln197_9_fu_628_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_7_1_0_fu_142 <= 8'd136;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_7_1_0_fu_142 <= select_ln197_8_fu_622_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_8_1_0_fu_146 <= 8'd119;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_8_1_0_fu_146 <= select_ln197_7_fu_616_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            fin_9_1_0_fu_150 <= 8'd102;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            fin_9_1_0_fu_150 <= select_ln197_6_fu_610_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            idx_fu_106 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            idx_fu_106 <= add_ln196_fu_573_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_assign_fu_110 <= 4'd11;
        end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln197_reg_1043 == 1'd0))) begin
            r_assign_fu_110 <= add_ln193_fu_666_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        fin_0_1_0_load_reg_894 <= fin_0_1_0_fu_114;
        fin_1_1_0_load_reg_900 <= fin_1_1_0_fu_118;
        fin_2_1_0_load_reg_906 <= fin_2_1_0_fu_122;
        fin_3_1_0_load_reg_912 <= fin_3_1_0_fu_126;
        fin_4_1_0_load_reg_918 <= fin_4_1_0_fu_130;
        fin_5_1_0_load_reg_924 <= fin_5_1_0_fu_134;
        fin_6_1_0_load_reg_930 <= fin_6_1_0_fu_138;
        fin_7_1_0_load_reg_936 <= fin_7_1_0_fu_142;
        idx_load_reg_887 <= idx_fu_106;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        fin_0_reg_1019 <= grp_ClefiaF0Xor_121_fu_290_ap_return_4;
        fin_12_reg_995 <= grp_ClefiaF0Xor_121_fu_290_ap_return_0;
        fin_13_reg_1001 <= grp_ClefiaF0Xor_121_fu_290_ap_return_1;
        fin_14_reg_1007 <= grp_ClefiaF0Xor_121_fu_290_ap_return_2;
        fin_15_reg_1013 <= grp_ClefiaF0Xor_121_fu_290_ap_return_3;
        fin_1_reg_1025 <= grp_ClefiaF0Xor_121_fu_290_ap_return_5;
        fin_2_reg_1031 <= grp_ClefiaF0Xor_121_fu_290_ap_return_6;
        fin_3_reg_1037 <= grp_ClefiaF0Xor_121_fu_290_ap_return_7;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        fin_10_1_0_load_reg_954 <= fin_10_1_0_fu_154;
        fin_11_1_0_load_reg_960 <= fin_11_1_0_fu_158;
        fin_12_1_0_load_reg_966 <= fin_12_1_0_fu_162;
        fin_13_1_0_load_reg_972 <= fin_13_1_0_fu_166;
        fin_14_1_0_load_reg_978 <= fin_14_1_0_fu_170;
        fin_15_1_0_load_reg_984 <= fin_15_1_0_fu_174;
        fin_8_1_0_load_reg_942 <= fin_8_1_0_fu_146;
        fin_9_1_0_load_reg_948 <= fin_9_1_0_fu_150;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        icmp_ln197_reg_1043 <= icmp_ln197_fu_527_p2;
        r_assign_load_reg_990 <= r_assign_fu_110;
    end
end

always @ (*) begin
    if (((icmp_ln197_fu_527_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_address0 = grp_ClefiaF1Xor_fu_309_rk_address0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_address0 = grp_ClefiaF0Xor_121_fu_290_rk_address0;
    end else begin
        con128_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_address1 = grp_ClefiaF1Xor_fu_309_rk_address1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_address1 = grp_ClefiaF0Xor_121_fu_290_rk_address1;
    end else begin
        con128_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_address2 = grp_ClefiaF1Xor_fu_309_rk_address2;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_address2 = grp_ClefiaF0Xor_121_fu_290_rk_address2;
    end else begin
        con128_address2 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_address3 = grp_ClefiaF1Xor_fu_309_rk_address3;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_address3 = grp_ClefiaF0Xor_121_fu_290_rk_address3;
    end else begin
        con128_address3 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_ce0 = grp_ClefiaF1Xor_fu_309_rk_ce0;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce0 = grp_ClefiaF0Xor_121_fu_290_rk_ce0;
    end else begin
        con128_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_ce1 = grp_ClefiaF1Xor_fu_309_rk_ce1;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce1 = grp_ClefiaF0Xor_121_fu_290_rk_ce1;
    end else begin
        con128_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_ce2 = grp_ClefiaF1Xor_fu_309_rk_ce2;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce2 = grp_ClefiaF0Xor_121_fu_290_rk_ce2;
    end else begin
        con128_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        con128_ce3 = grp_ClefiaF1Xor_fu_309_rk_ce3;
    end else if ((((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce3 = grp_ClefiaF0Xor_121_fu_290_rk_ce3;
    end else begin
        con128_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_0_out_ap_vld = 1'b1;
    end else begin
        fin_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_10_out_ap_vld = 1'b1;
    end else begin
        fin_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_11_out_ap_vld = 1'b1;
    end else begin
        fin_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_12_out_ap_vld = 1'b1;
    end else begin
        fin_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_13_out_ap_vld = 1'b1;
    end else begin
        fin_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_14_out_ap_vld = 1'b1;
    end else begin
        fin_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_15_out_ap_vld = 1'b1;
    end else begin
        fin_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_1_out_ap_vld = 1'b1;
    end else begin
        fin_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_2_out_ap_vld = 1'b1;
    end else begin
        fin_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_3_out_ap_vld = 1'b1;
    end else begin
        fin_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_4_out_ap_vld = 1'b1;
    end else begin
        fin_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_5_out_ap_vld = 1'b1;
    end else begin
        fin_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_6_out_ap_vld = 1'b1;
    end else begin
        fin_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_7_out_ap_vld = 1'b1;
    end else begin
        fin_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_8_out_ap_vld = 1'b1;
    end else begin
        fin_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln197_reg_1043 == 1'd1))) begin
        fin_9_out_ap_vld = 1'b1;
    end else begin
        fin_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln193_fu_666_p2 = ($signed(r_assign_load_reg_990) + $signed(4'd15));

assign add_ln196_fu_573_p2 = (idx_load_reg_887 + 7'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage5;

assign fin_0_out = fin_0_reg_1019;

assign fin_10_out = grp_ClefiaF1Xor_fu_309_ap_return_6;

assign fin_11_out = grp_ClefiaF1Xor_fu_309_ap_return_7;

assign fin_12_out = fin_12_reg_995;

assign fin_13_out = fin_13_reg_1001;

assign fin_14_out = fin_14_reg_1007;

assign fin_15_out = fin_15_reg_1013;

assign fin_1_out = fin_1_reg_1025;

assign fin_2_out = fin_2_reg_1031;

assign fin_3_out = fin_3_reg_1037;

assign fin_4_out = grp_ClefiaF1Xor_fu_309_ap_return_0;

assign fin_5_out = grp_ClefiaF1Xor_fu_309_ap_return_1;

assign fin_6_out = grp_ClefiaF1Xor_fu_309_ap_return_2;

assign fin_7_out = grp_ClefiaF1Xor_fu_309_ap_return_3;

assign fin_8_out = grp_ClefiaF1Xor_fu_309_ap_return_4;

assign fin_9_out = grp_ClefiaF1Xor_fu_309_ap_return_5;

assign grp_ClefiaF0Xor_121_fu_290_ap_start = grp_ClefiaF0Xor_121_fu_290_ap_start_reg;

assign grp_ClefiaF1Xor_fu_309_ap_start = grp_ClefiaF1Xor_fu_309_ap_start_reg;

assign grp_ClefiaF1Xor_fu_309_rk_offset = (idx_load_reg_887 | 7'd4);

assign icmp_ln197_fu_527_p2 = ((r_assign_fu_110 == 4'd0) ? 1'b1 : 1'b0);

assign select_ln197_10_fu_634_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_5_1_0_load_reg_924 : grp_ClefiaF1Xor_fu_309_ap_return_1);

assign select_ln197_11_fu_640_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_4_1_0_load_reg_918 : grp_ClefiaF1Xor_fu_309_ap_return_0);

assign select_ln197_12_fu_646_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_3_1_0_load_reg_912 : fin_3_reg_1037);

assign select_ln197_13_fu_651_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_2_1_0_load_reg_906 : fin_2_reg_1031);

assign select_ln197_14_fu_656_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_1_1_0_load_reg_900 : fin_1_reg_1025);

assign select_ln197_15_fu_661_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_0_1_0_load_reg_894 : fin_0_reg_1019);

assign select_ln197_1_fu_583_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_14_1_0_load_reg_978 : fin_14_reg_1007);

assign select_ln197_2_fu_588_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_13_1_0_load_reg_972 : fin_13_reg_1001);

assign select_ln197_3_fu_593_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_12_1_0_load_reg_966 : fin_12_reg_995);

assign select_ln197_4_fu_598_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_11_1_0_load_reg_960 : grp_ClefiaF1Xor_fu_309_ap_return_7);

assign select_ln197_5_fu_604_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_10_1_0_load_reg_954 : grp_ClefiaF1Xor_fu_309_ap_return_6);

assign select_ln197_6_fu_610_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_9_1_0_load_reg_948 : grp_ClefiaF1Xor_fu_309_ap_return_5);

assign select_ln197_7_fu_616_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_8_1_0_load_reg_942 : grp_ClefiaF1Xor_fu_309_ap_return_4);

assign select_ln197_8_fu_622_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_7_1_0_load_reg_936 : grp_ClefiaF1Xor_fu_309_ap_return_3);

assign select_ln197_9_fu_628_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_6_1_0_load_reg_930 : grp_ClefiaF1Xor_fu_309_ap_return_2);

assign select_ln197_fu_578_p3 = ((icmp_ln197_reg_1043[0:0] == 1'b1) ? fin_15_1_0_load_reg_984 : fin_15_reg_1013);

endmodule //clefia_ClefiaKeySet128_Pipeline_ClefiaGfn4_label3
