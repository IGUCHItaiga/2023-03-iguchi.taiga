-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clefia_clefia_Pipeline_ClefiaGfn4Inv_label5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln460_1 : IN STD_LOGIC_VECTOR (4 downto 0);
    fin_7_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fin_7_ce0 : OUT STD_LOGIC;
    fin_7_we0 : OUT STD_LOGIC;
    fin_7_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fin_7_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fin_7_ce1 : OUT STD_LOGIC;
    fin_7_we1 : OUT STD_LOGIC;
    fin_7_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    shl_ln3 : IN STD_LOGIC_VECTOR (7 downto 0);
    rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce0 : OUT STD_LOGIC;
    rk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce1 : OUT STD_LOGIC;
    rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_1_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_2_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_3_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_474_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_474_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_475_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_475_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_476_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_476_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_477_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_477_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_8_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_9_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_10_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_10_out_ap_vld : OUT STD_LOGIC;
    fin_7_load_11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_7_load_11_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_482_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_482_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_483_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_483_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_484_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_484_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_485_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_485_out_ap_vld : OUT STD_LOGIC;
    clefia_s0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clefia_s0_ce0 : OUT STD_LOGIC;
    clefia_s0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    clefia_s1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clefia_s1_ce0 : OUT STD_LOGIC;
    clefia_s1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of clefia_clefia_Pipeline_ClefiaGfn4Inv_label5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";
    constant ap_const_lv64_FFFFFFFFFFFFFFF8 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal icmp_ln230_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage11 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_554_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_566 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal grp_fu_560_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_574 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal reg_578 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_582 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal reg_586 : STD_LOGIC_VECTOR (7 downto 0);
    signal idx109_i370_load_reg_1819 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal fin_7_addr_14_reg_1824 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_addr_15_reg_1829 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln224_fu_611_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln224_reg_1834 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_addr_12_reg_1854 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_addr_13_reg_1859 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_load_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_load_1_reg_1870 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_addr_6_reg_1886 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_addr_7_reg_1891 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_load_2_reg_1896 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_load_3_reg_1902 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_addr_4_reg_1928 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_7_addr_5_reg_1933 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln224_1_fu_686_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln224_1_reg_1938 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_s_fu_736_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_s_reg_1955 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_83_fu_778_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_83_reg_1961 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_219_fu_808_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_219_reg_1967 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_511_reg_1972 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_220_fu_842_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_220_reg_1977 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_513_reg_1982 : STD_LOGIC_VECTOR (0 downto 0);
    signal fin_7_load_8_reg_1987 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_load_9_reg_1993 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_81_fu_908_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_81_reg_2019 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_215_fu_938_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_215_reg_2025 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_503_reg_2030 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_82_fu_984_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_82_reg_2035 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_217_fu_1014_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_217_reg_2041 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_507_reg_2046 : STD_LOGIC_VECTOR (0 downto 0);
    signal fin_7_load_10_reg_2051 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_7_load_11_reg_2057 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln234_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln234_reg_2073 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln124_474_fu_1075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_474_reg_2087 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_475_fu_1103_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_475_reg_2093 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_223_fu_1225_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_223_reg_2109 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_519_reg_2114 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_230_fu_1343_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_230_reg_2119 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_533_reg_2124 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln180_fu_1355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln180_reg_2129 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_476_fu_1395_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_476_reg_2145 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_477_fu_1423_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_477_reg_2151 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_86_fu_1463_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_86_reg_2157 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_87_fu_1505_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_87_reg_2163 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_227_fu_1577_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_227_reg_2169 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_527_reg_2174 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_232_fu_1653_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_232_reg_2179 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_537_reg_2184 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal or_ln134_56_fu_1665_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_56_reg_2199 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_57_fu_1671_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_57_reg_2204 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_58_fu_1677_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_58_reg_2209 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_59_fu_1683_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_59_reg_2214 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_482_fu_1711_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_482_reg_2219 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_483_fu_1739_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_483_reg_2225 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_484_fu_1760_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_484_reg_2231 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal xor_ln124_485_fu_1781_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_485_reg_2237 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln233_fu_1787_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln233_reg_2243 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_243_fu_628_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_244_fu_638_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_245_fu_648_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_658_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_246_fu_668_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_247_fu_678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_692_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_248_fu_859_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_249_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_fu_1026_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_1031_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln175_fu_1109_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln176_fu_1114_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx109_i370_fu_122 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_idx109_i370_load : STD_LOGIC_VECTOR (63 downto 0);
    signal dec12_i_in_i369_fu_126 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln460_1_cast_fu_590_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal empty_fu_607_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_fu_622_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_75_fu_633_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_76_fu_643_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln232_fu_663_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_77_fu_673_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_fu_710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_fu_716_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_fu_724_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_499_fu_728_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_fu_744_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_141_fu_752_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_141_fu_758_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_218_fu_766_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_509_fu_770_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_510_fu_786_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_142_fu_794_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_142_fu_800_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_512_fu_820_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_143_fu_828_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_143_fu_834_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_78_fu_854_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln121_79_fu_864_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_500_fu_874_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_137_fu_882_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_137_fu_888_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_214_fu_896_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_501_fu_900_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_fu_916_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_138_fu_924_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_138_fu_930_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_504_fu_950_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_139_fu_958_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_139_fu_964_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_216_fu_972_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_505_fu_976_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_506_fu_992_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_140_fu_1000_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_140_fu_1006_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_fu_1053_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_s_fu_1041_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_544_fu_1064_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_53_fu_1047_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_545_fu_1069_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_543_fu_1058_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_546_fu_1081_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_548_fu_1093_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_549_fu_1097_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_547_fu_1087_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_514_fu_1119_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_144_fu_1127_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_144_fu_1133_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_221_fu_1141_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_515_fu_1145_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_84_fu_1153_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_516_fu_1161_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_145_fu_1169_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_145_fu_1175_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_222_fu_1183_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_517_fu_1187_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_85_fu_1195_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_518_fu_1203_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_146_fu_1211_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_146_fu_1217_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_528_fu_1237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_151_fu_1245_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_151_fu_1251_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_228_fu_1259_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_529_fu_1263_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_89_fu_1271_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_530_fu_1279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_152_fu_1287_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_152_fu_1293_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_229_fu_1301_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_531_fu_1305_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_90_fu_1313_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_532_fu_1321_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_153_fu_1329_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_153_fu_1335_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_55_fu_1367_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_550_fu_1373_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_54_fu_1361_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_552_fu_1385_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_553_fu_1390_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_551_fu_1379_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_554_fu_1401_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_556_fu_1413_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_557_fu_1418_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_555_fu_1407_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_520_fu_1429_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_147_fu_1437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_147_fu_1443_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_224_fu_1451_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_521_fu_1455_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_522_fu_1471_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_148_fu_1479_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_148_fu_1485_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_225_fu_1493_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_523_fu_1497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_524_fu_1513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_149_fu_1521_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_149_fu_1527_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_226_fu_1535_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_525_fu_1539_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_88_fu_1547_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_526_fu_1555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_150_fu_1563_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_150_fu_1569_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_534_fu_1589_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_154_fu_1597_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_154_fu_1603_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_231_fu_1611_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_535_fu_1615_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_91_fu_1623_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_536_fu_1631_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_155_fu_1639_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_155_fu_1645_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_558_fu_1689_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_560_fu_1700_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_561_fu_1705_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_559_fu_1694_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_562_fu_1717_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_564_fu_1728_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_565_fu_1733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_563_fu_1722_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_567_fu_1751_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_568_fu_1755_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_566_fu_1745_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_570_fu_1772_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_571_fu_1776_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_569_fu_1766_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clefia_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component clefia_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage11,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    dec12_i_in_i369_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                dec12_i_in_i369_fu_126 <= zext_ln460_1_cast_fu_590_p1;
            elsif (((icmp_ln230_fu_1792_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                dec12_i_in_i369_fu_126 <= add_ln224_1_reg_1938;
            end if; 
        end if;
    end process;

    idx109_i370_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                idx109_i370_fu_122 <= ap_const_lv64_0;
            elsif (((icmp_ln230_fu_1792_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                idx109_i370_fu_122 <= add_ln233_reg_2243;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln224_1_reg_1938 <= add_ln224_1_fu_686_p2;
                fin_7_load_8_reg_1987 <= fin_7_q1;
                fin_7_load_9_reg_1993 <= fin_7_q0;
                tmp_511_reg_1972 <= select_ln131_142_fu_800_p3(7 downto 7);
                tmp_513_reg_1982 <= select_ln131_143_fu_834_p3(7 downto 7);
                trunc_ln134_219_reg_1967 <= trunc_ln134_219_fu_808_p1;
                trunc_ln134_220_reg_1977 <= trunc_ln134_220_fu_842_p1;
                x_assign_83_reg_1961 <= x_assign_83_fu_778_p3;
                x_assign_s_reg_1955 <= x_assign_s_fu_736_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                add_ln224_reg_1834 <= add_ln224_fu_611_p2;
                idx109_i370_load_reg_1819 <= ap_sig_allocacmp_idx109_i370_load;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln233_reg_2243 <= add_ln233_fu_1787_p2;
                xor_ln124_484_reg_2231 <= xor_ln124_484_fu_1760_p2;
                xor_ln124_485_reg_2237 <= xor_ln124_485_fu_1781_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                fin_7_load_10_reg_2051 <= fin_7_q1;
                fin_7_load_11_reg_2057 <= fin_7_q0;
                icmp_ln234_reg_2073 <= icmp_ln234_fu_1036_p2;
                tmp_503_reg_2030 <= select_ln131_138_fu_930_p3(7 downto 7);
                tmp_507_reg_2046 <= select_ln131_140_fu_1006_p3(7 downto 7);
                trunc_ln134_215_reg_2025 <= trunc_ln134_215_fu_938_p1;
                trunc_ln134_217_reg_2041 <= trunc_ln134_217_fu_1014_p1;
                x_assign_81_reg_2019 <= x_assign_81_fu_908_p3;
                x_assign_82_reg_2035 <= x_assign_82_fu_984_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                fin_7_load_1_reg_1870 <= fin_7_q0;
                fin_7_load_reg_1864 <= fin_7_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                fin_7_load_2_reg_1896 <= fin_7_q1;
                fin_7_load_3_reg_1902 <= fin_7_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                or_ln134_56_reg_2199 <= or_ln134_56_fu_1665_p3;
                or_ln134_57_reg_2204 <= or_ln134_57_fu_1671_p3;
                or_ln134_58_reg_2209 <= or_ln134_58_fu_1677_p3;
                or_ln134_59_reg_2214 <= or_ln134_59_fu_1683_p3;
                xor_ln124_482_reg_2219 <= xor_ln124_482_fu_1711_p2;
                xor_ln124_483_reg_2225 <= xor_ln124_483_fu_1739_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_566 <= grp_fu_554_p2;
                reg_570 <= grp_fu_560_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_574 <= clefia_s0_q0;
                reg_578 <= clefia_s1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_582 <= clefia_s0_q0;
                reg_586 <= clefia_s1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_519_reg_2114 <= select_ln131_146_fu_1217_p3(7 downto 7);
                tmp_533_reg_2124 <= select_ln131_153_fu_1335_p3(7 downto 7);
                trunc_ln134_223_reg_2109 <= trunc_ln134_223_fu_1225_p1;
                trunc_ln134_230_reg_2119 <= trunc_ln134_230_fu_1343_p1;
                xor_ln124_474_reg_2087 <= xor_ln124_474_fu_1075_p2;
                xor_ln124_475_reg_2093 <= xor_ln124_475_fu_1103_p2;
                xor_ln180_reg_2129 <= xor_ln180_fu_1355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_527_reg_2174 <= select_ln131_150_fu_1569_p3(7 downto 7);
                tmp_537_reg_2184 <= select_ln131_155_fu_1645_p3(7 downto 7);
                trunc_ln134_227_reg_2169 <= trunc_ln134_227_fu_1577_p1;
                trunc_ln134_232_reg_2179 <= trunc_ln134_232_fu_1653_p1;
                x_assign_86_reg_2157 <= x_assign_86_fu_1463_p3;
                x_assign_87_reg_2163 <= x_assign_87_fu_1505_p3;
                xor_ln124_476_reg_2145 <= xor_ln124_476_fu_1395_p2;
                xor_ln124_477_reg_2151 <= xor_ln124_477_fu_1423_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln224_1_fu_686_p2 <= std_logic_vector(unsigned(dec12_i_in_i369_fu_126) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln224_fu_611_p2 <= std_logic_vector(unsigned(empty_fu_607_p1) + unsigned(shl_ln3));
    add_ln233_fu_1787_p2 <= std_logic_vector(unsigned(idx109_i370_load_reg_1819) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFF8));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage11_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state12, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage11;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_idx109_i370_load_assign_proc : process(ap_CS_fsm_state1, idx109_i370_fu_122, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_idx109_i370_load <= ap_const_lv64_0;
        else 
            ap_sig_allocacmp_idx109_i370_load <= idx109_i370_fu_122;
        end if; 
    end process;


    clefia_s0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln150_fu_653_p1, zext_ln152_fu_692_p1, zext_ln174_fu_1031_p1, zext_ln176_fu_1114_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clefia_s0_address0 <= zext_ln176_fu_1114_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            clefia_s0_address0 <= zext_ln174_fu_1031_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            clefia_s0_address0 <= zext_ln152_fu_692_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            clefia_s0_address0 <= zext_ln150_fu_653_p1(8 - 1 downto 0);
        else 
            clefia_s0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    clefia_s0_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            clefia_s0_ce0 <= ap_const_logic_1;
        else 
            clefia_s0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    clefia_s1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln151_fu_658_p1, zext_ln153_fu_697_p1, zext_ln173_fu_1026_p1, zext_ln175_fu_1109_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clefia_s1_address0 <= zext_ln175_fu_1109_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            clefia_s1_address0 <= zext_ln173_fu_1026_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            clefia_s1_address0 <= zext_ln153_fu_697_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            clefia_s1_address0 <= zext_ln151_fu_658_p1(8 - 1 downto 0);
        else 
            clefia_s1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    clefia_s1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            clefia_s1_ce0 <= ap_const_logic_1;
        else 
            clefia_s1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_607_p1 <= ap_sig_allocacmp_idx109_i370_load(8 - 1 downto 0);
    fin_7_addr_12_reg_1854 <= ap_const_lv64_3(4 - 1 downto 0);
    fin_7_addr_13_reg_1859 <= ap_const_lv64_2(4 - 1 downto 0);
    fin_7_addr_14_reg_1824 <= ap_const_lv64_1(4 - 1 downto 0);
    fin_7_addr_15_reg_1829 <= ap_const_lv64_0(4 - 1 downto 0);
    fin_7_addr_4_reg_1928 <= ap_const_lv64_B(4 - 1 downto 0);
    fin_7_addr_5_reg_1933 <= ap_const_lv64_A(4 - 1 downto 0);
    fin_7_addr_6_reg_1886 <= ap_const_lv64_9(4 - 1 downto 0);
    fin_7_addr_7_reg_1891 <= ap_const_lv64_8(4 - 1 downto 0);

    fin_7_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_7_addr_14_reg_1824, fin_7_addr_12_reg_1854, fin_7_addr_6_reg_1886, fin_7_addr_4_reg_1928, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_address0 <= fin_7_addr_4_reg_1928;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_7_address0 <= fin_7_addr_6_reg_1886;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_7_address0 <= fin_7_addr_12_reg_1854;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_7_address0 <= fin_7_addr_14_reg_1824;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            fin_7_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fin_7_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            fin_7_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_7_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_7_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fin_7_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_7_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            fin_7_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            fin_7_address0 <= "XXXX";
        end if; 
    end process;


    fin_7_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_7_addr_15_reg_1829, fin_7_addr_13_reg_1859, fin_7_addr_7_reg_1891, fin_7_addr_5_reg_1933, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_address1 <= fin_7_addr_5_reg_1933;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_7_address1 <= fin_7_addr_7_reg_1891;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_7_address1 <= fin_7_addr_13_reg_1859;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_7_address1 <= fin_7_addr_15_reg_1829;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            fin_7_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fin_7_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            fin_7_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_7_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_7_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fin_7_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_7_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            fin_7_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            fin_7_address1 <= "XXXX";
        end if; 
    end process;


    fin_7_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            fin_7_ce0 <= ap_const_logic_1;
        else 
            fin_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_7_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            fin_7_ce1 <= ap_const_logic_1;
        else 
            fin_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fin_7_d0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_7_load_1_reg_1870, fin_7_load_3_reg_1902, fin_7_load_9_reg_1993, fin_7_load_11_reg_2057, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, xor_ln124_475_reg_2093, xor_ln124_477_reg_2151, ap_CS_fsm_state8, xor_ln124_483_reg_2225, ap_CS_fsm_state9, xor_ln124_485_reg_2237, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_d0 <= xor_ln124_477_reg_2151;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_7_d0 <= xor_ln124_475_reg_2093;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_7_d0 <= xor_ln124_485_reg_2237;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_7_d0 <= xor_ln124_483_reg_2225;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fin_7_d0 <= fin_7_load_11_reg_2057;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fin_7_d0 <= fin_7_load_9_reg_1993;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fin_7_d0 <= fin_7_load_3_reg_1902;
        elsif (((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fin_7_d0 <= fin_7_load_1_reg_1870;
        else 
            fin_7_d0 <= "XXXXXXXX";
        end if; 
    end process;


    fin_7_d1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_7_load_reg_1864, fin_7_load_2_reg_1896, fin_7_load_8_reg_1987, fin_7_load_10_reg_2051, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, xor_ln124_474_reg_2087, xor_ln124_476_reg_2145, ap_CS_fsm_state8, xor_ln124_482_reg_2219, xor_ln124_484_reg_2231, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_d1 <= xor_ln124_476_reg_2145;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_7_d1 <= xor_ln124_474_reg_2087;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_7_d1 <= xor_ln124_484_reg_2231;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_7_d1 <= xor_ln124_482_reg_2219;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fin_7_d1 <= fin_7_load_10_reg_2051;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fin_7_d1 <= fin_7_load_8_reg_1987;
        elsif (((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fin_7_d1 <= fin_7_load_2_reg_1896;
        elsif (((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fin_7_d1 <= fin_7_load_reg_1864;
        else 
            fin_7_d1 <= "XXXXXXXX";
        end if; 
    end process;

    fin_7_load_10_out <= fin_7_load_10_reg_2051;

    fin_7_load_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_10_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_11_out <= fin_7_load_11_reg_2057;

    fin_7_load_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_11_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_1_out <= fin_7_load_1_reg_1870;

    fin_7_load_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_1_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_2_out <= fin_7_load_2_reg_1896;

    fin_7_load_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_2_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_3_out <= fin_7_load_3_reg_1902;

    fin_7_load_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_3_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_8_out <= fin_7_load_8_reg_1987;

    fin_7_load_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_8_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_9_out <= fin_7_load_9_reg_1993;

    fin_7_load_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_9_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_7_load_out <= fin_7_load_reg_1864;

    fin_7_load_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_7_load_out_ap_vld <= ap_const_logic_1;
        else 
            fin_7_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    fin_7_we0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_7_we0 <= ap_const_logic_1;
        else 
            fin_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_7_we1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln234_fu_1036_p2, icmp_ln234_reg_2073, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln234_reg_2073 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln234_fu_1036_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_7_we1 <= ap_const_logic_1;
        else 
            fin_7_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_554_p2 <= (rk_q1 xor fin_7_q1);
    grp_fu_560_p2 <= (rk_q0 xor fin_7_q0);
    icmp_ln230_fu_1792_p2 <= "1" when (signed(add_ln224_1_reg_1938) > signed(ap_const_lv32_0)) else "0";
    icmp_ln234_fu_1036_p2 <= "1" when (add_ln224_1_reg_1938 = ap_const_lv32_0) else "0";
    or_ln121_75_fu_633_p2 <= (ap_const_lv8_2 or add_ln224_reg_1834);
    or_ln121_76_fu_643_p2 <= (ap_const_lv8_3 or add_ln224_reg_1834);
    or_ln121_77_fu_673_p2 <= (ap_const_lv8_5 or add_ln224_reg_1834);
    or_ln121_78_fu_854_p2 <= (ap_const_lv8_6 or add_ln224_reg_1834);
    or_ln121_79_fu_864_p2 <= (ap_const_lv8_7 or add_ln224_reg_1834);
    or_ln121_fu_622_p2 <= (ap_const_lv8_1 or add_ln224_fu_611_p2);
    or_ln134_53_fu_1047_p3 <= (trunc_ln134_217_reg_2041 & tmp_507_reg_2046);
    or_ln134_54_fu_1361_p3 <= (trunc_ln134_219_reg_1967 & tmp_511_reg_1972);
    or_ln134_55_fu_1367_p3 <= (trunc_ln134_220_reg_1977 & tmp_513_reg_1982);
    or_ln134_56_fu_1665_p3 <= (trunc_ln134_223_reg_2109 & tmp_519_reg_2114);
    or_ln134_57_fu_1671_p3 <= (trunc_ln134_227_reg_2169 & tmp_527_reg_2174);
    or_ln134_58_fu_1677_p3 <= (trunc_ln134_230_reg_2119 & tmp_533_reg_2124);
    or_ln134_59_fu_1683_p3 <= (trunc_ln134_232_reg_2179 & tmp_537_reg_2184);
    or_ln134_s_fu_1041_p3 <= (trunc_ln134_215_reg_2025 & tmp_503_reg_2030);
    or_ln232_fu_663_p2 <= (ap_const_lv8_4 or add_ln224_reg_1834);

    rk_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln121_243_fu_628_p1, zext_ln121_245_fu_648_p1, zext_ln121_247_fu_678_p1, zext_ln121_249_fu_869_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address0 <= zext_ln121_249_fu_869_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address0 <= zext_ln121_247_fu_678_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address0 <= zext_ln121_245_fu_648_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address0 <= zext_ln121_243_fu_628_p1(8 - 1 downto 0);
        else 
            rk_address0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln121_fu_617_p1, zext_ln121_244_fu_638_p1, zext_ln121_246_fu_668_p1, zext_ln121_248_fu_859_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address1 <= zext_ln121_248_fu_859_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address1 <= zext_ln121_246_fu_668_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address1 <= zext_ln121_244_fu_638_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address1 <= zext_ln121_fu_617_p1(8 - 1 downto 0);
        else 
            rk_address1 <= "XXXXXXXX";
        end if; 
    end process;


    rk_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            rk_ce0 <= ap_const_logic_1;
        else 
            rk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            rk_ce1 <= ap_const_logic_1;
        else 
            rk_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln131_137_fu_888_p3 <= 
        xor_ln132_137_fu_882_p2 when (tmp_500_fu_874_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_138_fu_930_p3 <= 
        xor_ln132_138_fu_924_p2 when (tmp_502_fu_916_p3(0) = '1') else 
        x_assign_81_fu_908_p3;
    select_ln131_139_fu_964_p3 <= 
        xor_ln132_139_fu_958_p2 when (tmp_504_fu_950_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_140_fu_1006_p3 <= 
        xor_ln132_140_fu_1000_p2 when (tmp_506_fu_992_p3(0) = '1') else 
        x_assign_82_fu_984_p3;
    select_ln131_141_fu_758_p3 <= 
        xor_ln132_141_fu_752_p2 when (tmp_508_fu_744_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_142_fu_800_p3 <= 
        xor_ln132_142_fu_794_p2 when (tmp_510_fu_786_p3(0) = '1') else 
        x_assign_83_fu_778_p3;
    select_ln131_143_fu_834_p3 <= 
        xor_ln132_143_fu_828_p2 when (tmp_512_fu_820_p3(0) = '1') else 
        x_assign_s_fu_736_p3;
    select_ln131_144_fu_1133_p3 <= 
        xor_ln132_144_fu_1127_p2 when (tmp_514_fu_1119_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_145_fu_1175_p3 <= 
        xor_ln132_145_fu_1169_p2 when (tmp_516_fu_1161_p3(0) = '1') else 
        x_assign_84_fu_1153_p3;
    select_ln131_146_fu_1217_p3 <= 
        xor_ln132_146_fu_1211_p2 when (tmp_518_fu_1203_p3(0) = '1') else 
        x_assign_85_fu_1195_p3;
    select_ln131_147_fu_1443_p3 <= 
        xor_ln132_147_fu_1437_p2 when (tmp_520_fu_1429_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_148_fu_1485_p3 <= 
        xor_ln132_148_fu_1479_p2 when (tmp_522_fu_1471_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_149_fu_1527_p3 <= 
        xor_ln132_149_fu_1521_p2 when (tmp_524_fu_1513_p3(0) = '1') else 
        x_assign_87_fu_1505_p3;
    select_ln131_150_fu_1569_p3 <= 
        xor_ln132_150_fu_1563_p2 when (tmp_526_fu_1555_p3(0) = '1') else 
        x_assign_88_fu_1547_p3;
    select_ln131_151_fu_1251_p3 <= 
        xor_ln132_151_fu_1245_p2 when (tmp_528_fu_1237_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_152_fu_1293_p3 <= 
        xor_ln132_152_fu_1287_p2 when (tmp_530_fu_1279_p3(0) = '1') else 
        x_assign_89_fu_1271_p3;
    select_ln131_153_fu_1335_p3 <= 
        xor_ln132_153_fu_1329_p2 when (tmp_532_fu_1321_p3(0) = '1') else 
        x_assign_90_fu_1313_p3;
    select_ln131_154_fu_1603_p3 <= 
        xor_ln132_154_fu_1597_p2 when (tmp_534_fu_1589_p3(0) = '1') else 
        x_assign_86_fu_1463_p3;
    select_ln131_155_fu_1645_p3 <= 
        xor_ln132_155_fu_1639_p2 when (tmp_536_fu_1631_p3(0) = '1') else 
        x_assign_91_fu_1623_p3;
    select_ln131_fu_716_p3 <= 
        xor_ln132_fu_710_p2 when (tmp_fu_702_p3(0) = '1') else 
        clefia_s1_q0;
    tmp_499_fu_728_p3 <= select_ln131_fu_716_p3(7 downto 7);
    tmp_500_fu_874_p3 <= clefia_s0_q0(7 downto 7);
    tmp_501_fu_900_p3 <= select_ln131_137_fu_888_p3(7 downto 7);
    tmp_502_fu_916_p3 <= select_ln131_137_fu_888_p3(6 downto 6);
    tmp_504_fu_950_p3 <= clefia_s1_q0(7 downto 7);
    tmp_505_fu_976_p3 <= select_ln131_139_fu_964_p3(7 downto 7);
    tmp_506_fu_992_p3 <= select_ln131_139_fu_964_p3(6 downto 6);
    tmp_508_fu_744_p3 <= clefia_s0_q0(7 downto 7);
    tmp_509_fu_770_p3 <= select_ln131_141_fu_758_p3(7 downto 7);
    tmp_510_fu_786_p3 <= select_ln131_141_fu_758_p3(6 downto 6);
    tmp_512_fu_820_p3 <= select_ln131_fu_716_p3(6 downto 6);
    tmp_514_fu_1119_p3 <= clefia_s0_q0(7 downto 7);
    tmp_515_fu_1145_p3 <= select_ln131_144_fu_1133_p3(7 downto 7);
    tmp_516_fu_1161_p3 <= select_ln131_144_fu_1133_p3(6 downto 6);
    tmp_517_fu_1187_p3 <= select_ln131_145_fu_1175_p3(7 downto 7);
    tmp_518_fu_1203_p3 <= select_ln131_145_fu_1175_p3(6 downto 6);
    tmp_520_fu_1429_p3 <= clefia_s1_q0(7 downto 7);
    tmp_521_fu_1455_p3 <= select_ln131_147_fu_1443_p3(7 downto 7);
    tmp_522_fu_1471_p3 <= clefia_s0_q0(7 downto 7);
    tmp_523_fu_1497_p3 <= select_ln131_148_fu_1485_p3(7 downto 7);
    tmp_524_fu_1513_p3 <= select_ln131_148_fu_1485_p3(6 downto 6);
    tmp_525_fu_1539_p3 <= select_ln131_149_fu_1527_p3(7 downto 7);
    tmp_526_fu_1555_p3 <= select_ln131_149_fu_1527_p3(6 downto 6);
    tmp_528_fu_1237_p3 <= clefia_s1_q0(7 downto 7);
    tmp_529_fu_1263_p3 <= select_ln131_151_fu_1251_p3(7 downto 7);
    tmp_530_fu_1279_p3 <= select_ln131_151_fu_1251_p3(6 downto 6);
    tmp_531_fu_1305_p3 <= select_ln131_152_fu_1293_p3(7 downto 7);
    tmp_532_fu_1321_p3 <= select_ln131_152_fu_1293_p3(6 downto 6);
    tmp_534_fu_1589_p3 <= select_ln131_147_fu_1443_p3(6 downto 6);
    tmp_535_fu_1615_p3 <= select_ln131_154_fu_1603_p3(7 downto 7);
    tmp_536_fu_1631_p3 <= select_ln131_154_fu_1603_p3(6 downto 6);
    tmp_fu_702_p3 <= clefia_s1_q0(7 downto 7);
    trunc_ln134_214_fu_896_p1 <= select_ln131_137_fu_888_p3(7 - 1 downto 0);
    trunc_ln134_215_fu_938_p1 <= select_ln131_138_fu_930_p3(7 - 1 downto 0);
    trunc_ln134_216_fu_972_p1 <= select_ln131_139_fu_964_p3(7 - 1 downto 0);
    trunc_ln134_217_fu_1014_p1 <= select_ln131_140_fu_1006_p3(7 - 1 downto 0);
    trunc_ln134_218_fu_766_p1 <= select_ln131_141_fu_758_p3(7 - 1 downto 0);
    trunc_ln134_219_fu_808_p1 <= select_ln131_142_fu_800_p3(7 - 1 downto 0);
    trunc_ln134_220_fu_842_p1 <= select_ln131_143_fu_834_p3(7 - 1 downto 0);
    trunc_ln134_221_fu_1141_p1 <= select_ln131_144_fu_1133_p3(7 - 1 downto 0);
    trunc_ln134_222_fu_1183_p1 <= select_ln131_145_fu_1175_p3(7 - 1 downto 0);
    trunc_ln134_223_fu_1225_p1 <= select_ln131_146_fu_1217_p3(7 - 1 downto 0);
    trunc_ln134_224_fu_1451_p1 <= select_ln131_147_fu_1443_p3(7 - 1 downto 0);
    trunc_ln134_225_fu_1493_p1 <= select_ln131_148_fu_1485_p3(7 - 1 downto 0);
    trunc_ln134_226_fu_1535_p1 <= select_ln131_149_fu_1527_p3(7 - 1 downto 0);
    trunc_ln134_227_fu_1577_p1 <= select_ln131_150_fu_1569_p3(7 - 1 downto 0);
    trunc_ln134_228_fu_1259_p1 <= select_ln131_151_fu_1251_p3(7 - 1 downto 0);
    trunc_ln134_229_fu_1301_p1 <= select_ln131_152_fu_1293_p3(7 - 1 downto 0);
    trunc_ln134_230_fu_1343_p1 <= select_ln131_153_fu_1335_p3(7 - 1 downto 0);
    trunc_ln134_231_fu_1611_p1 <= select_ln131_154_fu_1603_p3(7 - 1 downto 0);
    trunc_ln134_232_fu_1653_p1 <= select_ln131_155_fu_1645_p3(7 - 1 downto 0);
    trunc_ln134_fu_724_p1 <= select_ln131_fu_716_p3(7 - 1 downto 0);
    x_assign_81_fu_908_p3 <= (trunc_ln134_214_fu_896_p1 & tmp_501_fu_900_p3);
    x_assign_82_fu_984_p3 <= (trunc_ln134_216_fu_972_p1 & tmp_505_fu_976_p3);
    x_assign_83_fu_778_p3 <= (trunc_ln134_218_fu_766_p1 & tmp_509_fu_770_p3);
    x_assign_84_fu_1153_p3 <= (trunc_ln134_221_fu_1141_p1 & tmp_515_fu_1145_p3);
    x_assign_85_fu_1195_p3 <= (trunc_ln134_222_fu_1183_p1 & tmp_517_fu_1187_p3);
    x_assign_86_fu_1463_p3 <= (trunc_ln134_224_fu_1451_p1 & tmp_521_fu_1455_p3);
    x_assign_87_fu_1505_p3 <= (trunc_ln134_225_fu_1493_p1 & tmp_523_fu_1497_p3);
    x_assign_88_fu_1547_p3 <= (trunc_ln134_226_fu_1535_p1 & tmp_525_fu_1539_p3);
    x_assign_89_fu_1271_p3 <= (trunc_ln134_228_fu_1259_p1 & tmp_529_fu_1263_p3);
    x_assign_90_fu_1313_p3 <= (trunc_ln134_229_fu_1301_p1 & tmp_531_fu_1305_p3);
    x_assign_91_fu_1623_p3 <= (trunc_ln134_231_fu_1611_p1 & tmp_535_fu_1615_p3);
    x_assign_s_fu_736_p3 <= (trunc_ln134_fu_724_p1 & tmp_499_fu_728_p3);
    xor_ln124_474_fu_1075_p2 <= (xor_ln124_545_fu_1069_p2 xor xor_ln124_543_fu_1058_p2);
    xor_ln124_474_out <= xor_ln124_474_reg_2087;

    xor_ln124_474_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_474_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_474_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_475_fu_1103_p2 <= (xor_ln124_549_fu_1097_p2 xor xor_ln124_547_fu_1087_p2);
    xor_ln124_475_out <= xor_ln124_475_reg_2093;

    xor_ln124_475_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_475_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_475_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_476_fu_1395_p2 <= (xor_ln124_553_fu_1390_p2 xor xor_ln124_551_fu_1379_p2);
    xor_ln124_476_out <= xor_ln124_476_reg_2145;

    xor_ln124_476_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_476_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_476_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_477_fu_1423_p2 <= (xor_ln124_557_fu_1418_p2 xor xor_ln124_555_fu_1407_p2);
    xor_ln124_477_out <= xor_ln124_477_reg_2151;

    xor_ln124_477_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_477_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_477_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_482_fu_1711_p2 <= (xor_ln124_561_fu_1705_p2 xor xor_ln124_559_fu_1694_p2);
    xor_ln124_482_out <= xor_ln124_482_reg_2219;

    xor_ln124_482_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_482_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_482_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_483_fu_1739_p2 <= (xor_ln124_565_fu_1733_p2 xor xor_ln124_563_fu_1722_p2);
    xor_ln124_483_out <= xor_ln124_483_reg_2225;

    xor_ln124_483_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_483_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_483_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_484_fu_1760_p2 <= (xor_ln124_568_fu_1755_p2 xor xor_ln124_566_fu_1745_p2);
    xor_ln124_484_out <= xor_ln124_484_reg_2231;

    xor_ln124_484_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_484_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_484_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_485_fu_1781_p2 <= (xor_ln124_571_fu_1776_p2 xor xor_ln124_569_fu_1766_p2);
    xor_ln124_485_out <= xor_ln124_485_reg_2237;

    xor_ln124_485_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln230_fu_1792_p2)
    begin
        if (((icmp_ln230_fu_1792_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_485_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_485_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_543_fu_1058_p2 <= (xor_ln124_fu_1053_p2 xor reg_574);
    xor_ln124_544_fu_1064_p2 <= (x_assign_s_reg_1955 xor or_ln134_s_fu_1041_p3);
    xor_ln124_545_fu_1069_p2 <= (xor_ln124_544_fu_1064_p2 xor or_ln134_53_fu_1047_p3);
    xor_ln124_546_fu_1081_p2 <= (or_ln134_s_fu_1041_p3 xor fin_7_q0);
    xor_ln124_547_fu_1087_p2 <= (xor_ln124_546_fu_1081_p2 xor reg_578);
    xor_ln124_548_fu_1093_p2 <= (x_assign_83_reg_1961 xor x_assign_81_reg_2019);
    xor_ln124_549_fu_1097_p2 <= (xor_ln124_548_fu_1093_p2 xor or_ln134_53_fu_1047_p3);
    xor_ln124_550_fu_1373_p2 <= (or_ln134_55_fu_1367_p3 xor fin_7_q1);
    xor_ln124_551_fu_1379_p2 <= (xor_ln124_550_fu_1373_p2 xor reg_582);
    xor_ln124_552_fu_1385_p2 <= (x_assign_s_reg_1955 xor or_ln134_54_fu_1361_p3);
    xor_ln124_553_fu_1390_p2 <= (xor_ln124_552_fu_1385_p2 xor x_assign_82_reg_2035);
    xor_ln124_554_fu_1401_p2 <= (or_ln134_55_fu_1367_p3 xor fin_7_q0);
    xor_ln124_555_fu_1407_p2 <= (xor_ln124_554_fu_1401_p2 xor reg_586);
    xor_ln124_556_fu_1413_p2 <= (x_assign_83_reg_1961 xor or_ln134_54_fu_1361_p3);
    xor_ln124_557_fu_1418_p2 <= (xor_ln124_556_fu_1413_p2 xor x_assign_81_reg_2019);
    xor_ln124_558_fu_1689_p2 <= (x_assign_87_reg_2163 xor fin_7_q1);
    xor_ln124_559_fu_1694_p2 <= (xor_ln124_558_fu_1689_p2 xor reg_578);
    xor_ln124_560_fu_1700_p2 <= (x_assign_86_reg_2157 xor or_ln134_56_fu_1665_p3);
    xor_ln124_561_fu_1705_p2 <= (xor_ln124_560_fu_1700_p2 xor or_ln134_57_fu_1671_p3);
    xor_ln124_562_fu_1717_p2 <= (x_assign_87_reg_2163 xor fin_7_q0);
    xor_ln124_563_fu_1722_p2 <= (xor_ln124_562_fu_1717_p2 xor reg_574);
    xor_ln124_564_fu_1728_p2 <= (x_assign_86_reg_2157 xor or_ln134_58_fu_1677_p3);
    xor_ln124_565_fu_1733_p2 <= (xor_ln124_564_fu_1728_p2 xor or_ln134_59_fu_1683_p3);
    xor_ln124_566_fu_1745_p2 <= (reg_586 xor fin_7_q1);
    xor_ln124_567_fu_1751_p2 <= (xor_ln180_reg_2129 xor or_ln134_57_reg_2204);
    xor_ln124_568_fu_1755_p2 <= (xor_ln124_567_fu_1751_p2 xor or_ln134_56_reg_2199);
    xor_ln124_569_fu_1766_p2 <= (reg_582 xor fin_7_q0);
    xor_ln124_570_fu_1772_p2 <= (xor_ln180_reg_2129 xor or_ln134_59_reg_2214);
    xor_ln124_571_fu_1776_p2 <= (xor_ln124_570_fu_1772_p2 xor or_ln134_58_reg_2209);
    xor_ln124_fu_1053_p2 <= (x_assign_82_reg_2035 xor fin_7_q1);
    xor_ln132_137_fu_882_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_138_fu_924_p2 <= (x_assign_81_fu_908_p3 xor ap_const_lv8_E);
    xor_ln132_139_fu_958_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_140_fu_1000_p2 <= (x_assign_82_fu_984_p3 xor ap_const_lv8_E);
    xor_ln132_141_fu_752_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_142_fu_794_p2 <= (x_assign_83_fu_778_p3 xor ap_const_lv8_E);
    xor_ln132_143_fu_828_p2 <= (x_assign_s_fu_736_p3 xor ap_const_lv8_E);
    xor_ln132_144_fu_1127_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_145_fu_1169_p2 <= (x_assign_84_fu_1153_p3 xor ap_const_lv8_E);
    xor_ln132_146_fu_1211_p2 <= (x_assign_85_fu_1195_p3 xor ap_const_lv8_E);
    xor_ln132_147_fu_1437_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_148_fu_1479_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_149_fu_1521_p2 <= (x_assign_87_fu_1505_p3 xor ap_const_lv8_E);
    xor_ln132_150_fu_1563_p2 <= (x_assign_88_fu_1547_p3 xor ap_const_lv8_E);
    xor_ln132_151_fu_1245_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_152_fu_1287_p2 <= (x_assign_89_fu_1271_p3 xor ap_const_lv8_E);
    xor_ln132_153_fu_1329_p2 <= (x_assign_90_fu_1313_p3 xor ap_const_lv8_E);
    xor_ln132_154_fu_1597_p2 <= (x_assign_86_fu_1463_p3 xor ap_const_lv8_E);
    xor_ln132_155_fu_1639_p2 <= (x_assign_91_fu_1623_p3 xor ap_const_lv8_E);
    xor_ln132_fu_710_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln180_fu_1355_p2 <= (x_assign_89_fu_1271_p3 xor x_assign_84_fu_1153_p3);
    zext_ln121_243_fu_628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_fu_622_p2),64));
    zext_ln121_244_fu_638_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_75_fu_633_p2),64));
    zext_ln121_245_fu_648_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_76_fu_643_p2),64));
    zext_ln121_246_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln232_fu_663_p2),64));
    zext_ln121_247_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_77_fu_673_p2),64));
    zext_ln121_248_fu_859_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_78_fu_854_p2),64));
    zext_ln121_249_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln121_79_fu_864_p2),64));
    zext_ln121_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln224_fu_611_p2),64));
    zext_ln150_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_566),64));
    zext_ln151_fu_658_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_570),64));
    zext_ln152_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_566),64));
    zext_ln153_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_570),64));
    zext_ln173_fu_1026_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_566),64));
    zext_ln174_fu_1031_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_570),64));
    zext_ln175_fu_1109_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_566),64));
    zext_ln176_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_570),64));
    zext_ln460_1_cast_fu_590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln460_1),32));
end behav;
