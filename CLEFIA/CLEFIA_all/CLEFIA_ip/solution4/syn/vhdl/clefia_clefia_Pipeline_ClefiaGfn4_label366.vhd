-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clefia_clefia_Pipeline_ClefiaGfn4_label366 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    zext_ln460 : IN STD_LOGIC_VECTOR (4 downto 0);
    fin_3_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fin_3_ce0 : OUT STD_LOGIC;
    fin_3_we0 : OUT STD_LOGIC;
    fin_3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    fin_3_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    fin_3_ce1 : OUT STD_LOGIC;
    fin_3_we1 : OUT STD_LOGIC;
    fin_3_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce0 : OUT STD_LOGIC;
    rk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce1 : OUT STD_LOGIC;
    rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_1_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_1_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_2_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_2_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_3_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_3_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_252_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_252_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_253_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_253_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_254_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_254_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_255_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_255_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_8_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_8_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_9_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_9_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_10_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_10_out_ap_vld : OUT STD_LOGIC;
    fin_3_load_11_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    fin_3_load_11_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_260_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_260_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_261_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_261_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_262_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_262_out_ap_vld : OUT STD_LOGIC;
    xor_ln124_263_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    xor_ln124_263_out_ap_vld : OUT STD_LOGIC;
    clefia_s0_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clefia_s0_ce0 : OUT STD_LOGIC;
    clefia_s0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    clefia_s1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    clefia_s1_ce0 : OUT STD_LOGIC;
    clefia_s1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of clefia_clefia_Pipeline_ClefiaGfn4_label366 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_A : STD_LOGIC_VECTOR (7 downto 0) := "00001010";
    constant ap_const_lv8_B : STD_LOGIC_VECTOR (7 downto 0) := "00001011";
    constant ap_const_lv8_C : STD_LOGIC_VECTOR (7 downto 0) := "00001100";
    constant ap_const_lv8_D : STD_LOGIC_VECTOR (7 downto 0) := "00001101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv8_E : STD_LOGIC_VECTOR (7 downto 0) := "00001110";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal icmp_ln193_fu_1769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage11 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_540_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal grp_fu_546_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_556 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal reg_564 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_568 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal reg_572 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_addr_14_reg_1796 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal fin_3_addr_15_reg_1801 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_fu_593_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_reg_1806 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln188_fu_597_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln188_reg_1816 : STD_LOGIC_VECTOR (63 downto 0);
    signal fin_3_addr_12_reg_1831 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_3_addr_13_reg_1836 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_3_load_reg_1841 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_load_1_reg_1847 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_addr_6_reg_1863 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_3_addr_7_reg_1868 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_3_load_2_reg_1873 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_load_3_reg_1879 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_addr_4_reg_1905 : STD_LOGIC_VECTOR (3 downto 0);
    signal fin_3_addr_5_reg_1910 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln188_1_fu_668_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln188_1_reg_1915 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_60_fu_718_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_60_reg_1932 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_63_fu_760_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_63_reg_1938 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_181_fu_790_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_181_reg_1944 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_433_reg_1949 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_182_fu_824_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_182_reg_1954 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_435_reg_1959 : STD_LOGIC_VECTOR (0 downto 0);
    signal fin_3_load_8_reg_1964 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_load_9_reg_1970 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_61_fu_890_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_61_reg_1996 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_177_fu_920_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_177_reg_2002 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_425_reg_2007 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_62_fu_966_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_62_reg_2012 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_179_fu_996_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_179_reg_2018 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_429_reg_2023 : STD_LOGIC_VECTOR (0 downto 0);
    signal fin_3_load_10_reg_2028 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_3_load_11_reg_2034 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln197_fu_1018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln197_reg_2050 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln124_252_fu_1057_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_252_reg_2064 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_253_fu_1085_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_253_reg_2070 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_185_fu_1207_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_185_reg_2086 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_441_reg_2091 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_192_fu_1325_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_192_reg_2096 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_455_reg_2101 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln180_fu_1337_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln180_reg_2106 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_254_fu_1377_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_254_reg_2122 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_255_fu_1405_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_255_reg_2128 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_66_fu_1445_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_66_reg_2134 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_67_fu_1487_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_67_reg_2140 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_189_fu_1559_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_189_reg_2146 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_449_reg_2151 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln134_194_fu_1635_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln134_194_reg_2156 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_459_reg_2161 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal or_ln134_43_fu_1647_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_43_reg_2176 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_44_fu_1653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_44_reg_2181 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_45_fu_1659_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_45_reg_2186 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_46_fu_1665_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_46_reg_2191 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_260_fu_1693_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_260_reg_2196 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_261_fu_1721_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_261_reg_2202 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_262_fu_1742_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_262_reg_2208 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal xor_ln124_263_fu_1763_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_263_reg_2214 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln121_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_237_fu_620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_238_fu_630_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln150_fu_635_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln151_fu_640_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_239_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_240_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln152_fu_674_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln153_fu_679_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_241_fu_841_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln121_242_fu_851_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln173_fu_1008_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln174_fu_1013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln175_fu_1091_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln176_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idx109_i_fu_114 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_idx109_i_load : STD_LOGIC_VECTOR (63 downto 0);
    signal dec12_i_in_i_fu_118 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln460_cast_fu_576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal add_ln121_fu_604_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_111_fu_615_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_112_fu_625_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_113_fu_645_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_114_fu_655_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_684_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_100_fu_692_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_100_fu_698_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_fu_706_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_421_fu_710_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_430_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_105_fu_734_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_105_fu_740_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_180_fu_748_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_431_fu_752_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_432_fu_768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_106_fu_776_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_106_fu_782_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_434_fu_802_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_107_fu_810_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_107_fu_816_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_115_fu_836_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln121_116_fu_846_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_422_fu_856_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_101_fu_864_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_101_fu_870_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_176_fu_878_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_423_fu_882_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_424_fu_898_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_102_fu_906_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_102_fu_912_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_426_fu_932_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_103_fu_940_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_103_fu_946_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_178_fu_954_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_427_fu_958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_428_fu_974_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_104_fu_982_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_104_fu_988_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_fu_1035_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_39_fu_1023_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_515_fu_1046_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_40_fu_1029_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_516_fu_1051_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_514_fu_1040_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_517_fu_1063_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_519_fu_1075_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_520_fu_1079_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_518_fu_1069_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_436_fu_1101_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_108_fu_1109_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_108_fu_1115_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_183_fu_1123_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_437_fu_1127_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_64_fu_1135_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_438_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_109_fu_1151_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_109_fu_1157_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_184_fu_1165_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_439_fu_1169_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_65_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_440_fu_1185_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_110_fu_1193_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_110_fu_1199_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_450_fu_1219_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_115_fu_1227_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_115_fu_1233_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_190_fu_1241_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_451_fu_1245_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_69_fu_1253_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_452_fu_1261_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_116_fu_1269_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_116_fu_1275_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_191_fu_1283_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_453_fu_1287_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_70_fu_1295_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_454_fu_1303_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_117_fu_1311_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_117_fu_1317_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_42_fu_1349_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_521_fu_1355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln134_41_fu_1343_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_523_fu_1367_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_524_fu_1372_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_522_fu_1361_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_525_fu_1383_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_527_fu_1395_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_528_fu_1400_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_526_fu_1389_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_442_fu_1411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_111_fu_1419_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_111_fu_1425_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_186_fu_1433_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_443_fu_1437_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_444_fu_1453_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_112_fu_1461_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_112_fu_1467_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_187_fu_1475_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_445_fu_1479_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_446_fu_1495_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_113_fu_1503_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_113_fu_1509_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_188_fu_1517_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_447_fu_1521_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_68_fu_1529_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_448_fu_1537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_114_fu_1545_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_114_fu_1551_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_456_fu_1571_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_118_fu_1579_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_118_fu_1585_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln134_193_fu_1593_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_457_fu_1597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_assign_71_fu_1605_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_458_fu_1613_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln132_119_fu_1621_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln131_119_fu_1627_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_529_fu_1671_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_531_fu_1682_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_532_fu_1687_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_530_fu_1676_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_533_fu_1699_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_535_fu_1710_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_536_fu_1715_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_534_fu_1704_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_538_fu_1733_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_539_fu_1737_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_537_fu_1727_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_541_fu_1754_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_542_fu_1758_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln124_540_fu_1748_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clefia_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component clefia_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage11,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    dec12_i_in_i_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                dec12_i_in_i_fu_118 <= zext_ln460_cast_fu_576_p1;
            elsif (((icmp_ln193_fu_1769_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                dec12_i_in_i_fu_118 <= add_ln188_1_reg_1915;
            end if; 
        end if;
    end process;

    idx109_i_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then 
                idx109_i_fu_114 <= ap_const_lv64_0;
            elsif (((icmp_ln193_fu_1769_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                idx109_i_fu_114 <= add_ln188_reg_1816;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                add_ln188_1_reg_1915 <= add_ln188_1_fu_668_p2;
                fin_3_load_8_reg_1964 <= fin_3_q1;
                fin_3_load_9_reg_1970 <= fin_3_q0;
                tmp_433_reg_1949 <= select_ln131_106_fu_782_p3(7 downto 7);
                tmp_435_reg_1959 <= select_ln131_107_fu_816_p3(7 downto 7);
                trunc_ln134_181_reg_1944 <= trunc_ln134_181_fu_790_p1;
                trunc_ln134_182_reg_1954 <= trunc_ln134_182_fu_824_p1;
                x_assign_60_reg_1932 <= x_assign_60_fu_718_p3;
                x_assign_63_reg_1938 <= x_assign_63_fu_760_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                add_ln188_reg_1816 <= add_ln188_fu_597_p2;
                empty_reg_1806 <= empty_fu_593_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                fin_3_load_10_reg_2028 <= fin_3_q1;
                fin_3_load_11_reg_2034 <= fin_3_q0;
                icmp_ln197_reg_2050 <= icmp_ln197_fu_1018_p2;
                tmp_425_reg_2007 <= select_ln131_102_fu_912_p3(7 downto 7);
                tmp_429_reg_2023 <= select_ln131_104_fu_988_p3(7 downto 7);
                trunc_ln134_177_reg_2002 <= trunc_ln134_177_fu_920_p1;
                trunc_ln134_179_reg_2018 <= trunc_ln134_179_fu_996_p1;
                x_assign_61_reg_1996 <= x_assign_61_fu_890_p3;
                x_assign_62_reg_2012 <= x_assign_62_fu_966_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                fin_3_load_1_reg_1847 <= fin_3_q0;
                fin_3_load_reg_1841 <= fin_3_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                fin_3_load_2_reg_1873 <= fin_3_q1;
                fin_3_load_3_reg_1879 <= fin_3_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                or_ln134_43_reg_2176 <= or_ln134_43_fu_1647_p3;
                or_ln134_44_reg_2181 <= or_ln134_44_fu_1653_p3;
                or_ln134_45_reg_2186 <= or_ln134_45_fu_1659_p3;
                or_ln134_46_reg_2191 <= or_ln134_46_fu_1665_p3;
                xor_ln124_260_reg_2196 <= xor_ln124_260_fu_1693_p2;
                xor_ln124_261_reg_2202 <= xor_ln124_261_fu_1721_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
                reg_552 <= grp_fu_540_p2;
                reg_556 <= grp_fu_546_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
                reg_560 <= clefia_s0_q0;
                reg_564 <= clefia_s1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state5))) then
                reg_568 <= clefia_s0_q0;
                reg_572 <= clefia_s1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                tmp_441_reg_2091 <= select_ln131_110_fu_1199_p3(7 downto 7);
                tmp_455_reg_2101 <= select_ln131_117_fu_1317_p3(7 downto 7);
                trunc_ln134_185_reg_2086 <= trunc_ln134_185_fu_1207_p1;
                trunc_ln134_192_reg_2096 <= trunc_ln134_192_fu_1325_p1;
                xor_ln124_252_reg_2064 <= xor_ln124_252_fu_1057_p2;
                xor_ln124_253_reg_2070 <= xor_ln124_253_fu_1085_p2;
                xor_ln180_reg_2106 <= xor_ln180_fu_1337_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_449_reg_2151 <= select_ln131_114_fu_1551_p3(7 downto 7);
                tmp_459_reg_2161 <= select_ln131_119_fu_1627_p3(7 downto 7);
                trunc_ln134_189_reg_2146 <= trunc_ln134_189_fu_1559_p1;
                trunc_ln134_194_reg_2156 <= trunc_ln134_194_fu_1635_p1;
                x_assign_66_reg_2134 <= x_assign_66_fu_1445_p3;
                x_assign_67_reg_2140 <= x_assign_67_fu_1487_p3;
                xor_ln124_254_reg_2122 <= xor_ln124_254_fu_1377_p2;
                xor_ln124_255_reg_2128 <= xor_ln124_255_fu_1405_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                xor_ln124_262_reg_2208 <= xor_ln124_262_fu_1742_p2;
                xor_ln124_263_reg_2214 <= xor_ln124_263_fu_1763_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    add_ln121_111_fu_615_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_A));
    add_ln121_112_fu_625_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_B));
    add_ln121_113_fu_645_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_C));
    add_ln121_114_fu_655_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_D));
    add_ln121_115_fu_836_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_E));
    add_ln121_116_fu_846_p2 <= std_logic_vector(unsigned(empty_reg_1806) + unsigned(ap_const_lv8_F));
    add_ln121_fu_604_p2 <= std_logic_vector(unsigned(empty_fu_593_p1) + unsigned(ap_const_lv8_9));
    add_ln188_1_fu_668_p2 <= std_logic_vector(unsigned(dec12_i_in_i_fu_118) + unsigned(ap_const_lv32_FFFFFFFF));
    add_ln188_fu_597_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_idx109_i_load) + unsigned(ap_const_lv64_8));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start_int)
    begin
        if ((ap_start_int = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_state10_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage11_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_state12, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage11;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_idx109_i_load_assign_proc : process(ap_CS_fsm_state1, idx109_i_fu_114, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_sig_allocacmp_idx109_i_load <= ap_const_lv64_0;
        else 
            ap_sig_allocacmp_idx109_i_load <= idx109_i_fu_114;
        end if; 
    end process;


    clefia_s0_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln150_fu_635_p1, zext_ln152_fu_674_p1, zext_ln174_fu_1013_p1, zext_ln176_fu_1096_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clefia_s0_address0 <= zext_ln176_fu_1096_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            clefia_s0_address0 <= zext_ln174_fu_1013_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            clefia_s0_address0 <= zext_ln152_fu_674_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            clefia_s0_address0 <= zext_ln150_fu_635_p1(8 - 1 downto 0);
        else 
            clefia_s0_address0 <= "XXXXXXXX";
        end if; 
    end process;


    clefia_s0_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            clefia_s0_ce0 <= ap_const_logic_1;
        else 
            clefia_s0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    clefia_s1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, zext_ln151_fu_640_p1, zext_ln153_fu_679_p1, zext_ln173_fu_1008_p1, zext_ln175_fu_1091_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            clefia_s1_address0 <= zext_ln175_fu_1091_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            clefia_s1_address0 <= zext_ln173_fu_1008_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            clefia_s1_address0 <= zext_ln153_fu_679_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            clefia_s1_address0 <= zext_ln151_fu_640_p1(8 - 1 downto 0);
        else 
            clefia_s1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    clefia_s1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            clefia_s1_ce0 <= ap_const_logic_1;
        else 
            clefia_s1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_593_p1 <= ap_sig_allocacmp_idx109_i_load(8 - 1 downto 0);
    fin_3_addr_12_reg_1831 <= ap_const_lv64_3(4 - 1 downto 0);
    fin_3_addr_13_reg_1836 <= ap_const_lv64_2(4 - 1 downto 0);
    fin_3_addr_14_reg_1796 <= ap_const_lv64_1(4 - 1 downto 0);
    fin_3_addr_15_reg_1801 <= ap_const_lv64_0(4 - 1 downto 0);
    fin_3_addr_4_reg_1905 <= ap_const_lv64_B(4 - 1 downto 0);
    fin_3_addr_5_reg_1910 <= ap_const_lv64_A(4 - 1 downto 0);
    fin_3_addr_6_reg_1863 <= ap_const_lv64_9(4 - 1 downto 0);
    fin_3_addr_7_reg_1868 <= ap_const_lv64_8(4 - 1 downto 0);

    fin_3_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_3_addr_14_reg_1796, fin_3_addr_12_reg_1831, fin_3_addr_6_reg_1863, fin_3_addr_4_reg_1905, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_address0 <= fin_3_addr_4_reg_1905;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_3_address0 <= fin_3_addr_6_reg_1863;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_3_address0 <= fin_3_addr_12_reg_1831;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_3_address0 <= fin_3_addr_14_reg_1796;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            fin_3_address0 <= ap_const_lv64_F(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fin_3_address0 <= ap_const_lv64_D(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            fin_3_address0 <= ap_const_lv64_7(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_3_address0 <= ap_const_lv64_5(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_3_address0 <= ap_const_lv64_B(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fin_3_address0 <= ap_const_lv64_9(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_3_address0 <= ap_const_lv64_3(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            fin_3_address0 <= ap_const_lv64_1(4 - 1 downto 0);
        else 
            fin_3_address0 <= "XXXX";
        end if; 
    end process;


    fin_3_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_3_addr_15_reg_1801, fin_3_addr_13_reg_1836, fin_3_addr_7_reg_1868, fin_3_addr_5_reg_1910, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_address1 <= fin_3_addr_5_reg_1910;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_3_address1 <= fin_3_addr_7_reg_1868;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_3_address1 <= fin_3_addr_13_reg_1836;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_3_address1 <= fin_3_addr_15_reg_1801;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            fin_3_address1 <= ap_const_lv64_E(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state7) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)))) then 
            fin_3_address1 <= ap_const_lv64_C(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            fin_3_address1 <= ap_const_lv64_6(4 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_3_address1 <= ap_const_lv64_4(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_3_address1 <= ap_const_lv64_A(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            fin_3_address1 <= ap_const_lv64_8(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_3_address1 <= ap_const_lv64_2(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            fin_3_address1 <= ap_const_lv64_0(4 - 1 downto 0);
        else 
            fin_3_address1 <= "XXXX";
        end if; 
    end process;


    fin_3_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            fin_3_ce0 <= ap_const_logic_1;
        else 
            fin_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_3_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state12, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            fin_3_ce1 <= ap_const_logic_1;
        else 
            fin_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fin_3_d0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_3_load_1_reg_1847, fin_3_load_3_reg_1879, fin_3_load_9_reg_1970, fin_3_load_11_reg_2034, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, xor_ln124_253_reg_2070, xor_ln124_255_reg_2128, ap_CS_fsm_state8, xor_ln124_261_reg_2202, ap_CS_fsm_state9, xor_ln124_263_reg_2214, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_d0 <= xor_ln124_263_reg_2214;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_3_d0 <= xor_ln124_261_reg_2202;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_3_d0 <= xor_ln124_255_reg_2128;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_3_d0 <= xor_ln124_253_reg_2070;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fin_3_d0 <= fin_3_load_3_reg_1879;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fin_3_d0 <= fin_3_load_1_reg_1847;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fin_3_d0 <= fin_3_load_11_reg_2034;
        elsif (((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fin_3_d0 <= fin_3_load_9_reg_1970;
        else 
            fin_3_d0 <= "XXXXXXXX";
        end if; 
    end process;


    fin_3_d1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, fin_3_load_reg_1841, fin_3_load_2_reg_1873, fin_3_load_8_reg_1964, fin_3_load_10_reg_2028, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, xor_ln124_252_reg_2064, xor_ln124_254_reg_2122, ap_CS_fsm_state8, xor_ln124_260_reg_2196, xor_ln124_262_reg_2208, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_d1 <= xor_ln124_262_reg_2208;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            fin_3_d1 <= xor_ln124_260_reg_2196;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            fin_3_d1 <= xor_ln124_254_reg_2122;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            fin_3_d1 <= xor_ln124_252_reg_2064;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fin_3_d1 <= fin_3_load_2_reg_1873;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            fin_3_d1 <= fin_3_load_reg_1841;
        elsif (((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            fin_3_d1 <= fin_3_load_10_reg_2028;
        elsif (((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            fin_3_d1 <= fin_3_load_8_reg_1964;
        else 
            fin_3_d1 <= "XXXXXXXX";
        end if; 
    end process;

    fin_3_load_10_out <= fin_3_load_10_reg_2028;

    fin_3_load_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_10_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_11_out <= fin_3_load_11_reg_2034;

    fin_3_load_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_11_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_1_out <= fin_3_load_1_reg_1847;

    fin_3_load_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_1_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_2_out <= fin_3_load_2_reg_1873;

    fin_3_load_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_2_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_3_out <= fin_3_load_3_reg_1879;

    fin_3_load_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_3_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_8_out <= fin_3_load_8_reg_1964;

    fin_3_load_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_8_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_9_out <= fin_3_load_9_reg_1970;

    fin_3_load_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_9_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    fin_3_load_out <= fin_3_load_reg_1841;

    fin_3_load_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            fin_3_load_out_ap_vld <= ap_const_logic_1;
        else 
            fin_3_load_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    fin_3_we0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_3_we0 <= ap_const_logic_1;
        else 
            fin_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_3_we1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, icmp_ln197_fu_1018_p2, icmp_ln197_reg_2050, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln197_reg_2050 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((icmp_ln197_fu_1018_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            fin_3_we1 <= ap_const_logic_1;
        else 
            fin_3_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_540_p2 <= (rk_q1 xor fin_3_q1);
    grp_fu_546_p2 <= (rk_q0 xor fin_3_q0);
    icmp_ln193_fu_1769_p2 <= "1" when (signed(add_ln188_1_reg_1915) > signed(ap_const_lv32_0)) else "0";
    icmp_ln197_fu_1018_p2 <= "1" when (add_ln188_1_reg_1915 = ap_const_lv32_0) else "0";
    or_ln134_39_fu_1023_p3 <= (trunc_ln134_177_reg_2002 & tmp_425_reg_2007);
    or_ln134_40_fu_1029_p3 <= (trunc_ln134_179_reg_2018 & tmp_429_reg_2023);
    or_ln134_41_fu_1343_p3 <= (trunc_ln134_181_reg_1944 & tmp_433_reg_1949);
    or_ln134_42_fu_1349_p3 <= (trunc_ln134_182_reg_1954 & tmp_435_reg_1959);
    or_ln134_43_fu_1647_p3 <= (trunc_ln134_185_reg_2086 & tmp_441_reg_2091);
    or_ln134_44_fu_1653_p3 <= (trunc_ln134_189_reg_2146 & tmp_449_reg_2151);
    or_ln134_45_fu_1659_p3 <= (trunc_ln134_192_reg_2096 & tmp_455_reg_2101);
    or_ln134_46_fu_1665_p3 <= (trunc_ln134_194_reg_2156 & tmp_459_reg_2161);

    rk_address0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, zext_ln121_fu_610_p1, zext_ln121_238_fu_630_p1, zext_ln121_240_fu_660_p1, zext_ln121_242_fu_851_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address0 <= zext_ln121_242_fu_851_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address0 <= zext_ln121_240_fu_660_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address0 <= zext_ln121_238_fu_630_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address0 <= zext_ln121_fu_610_p1(8 - 1 downto 0);
        else 
            rk_address0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_address1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, add_ln188_fu_597_p2, zext_ln121_237_fu_620_p1, zext_ln121_239_fu_650_p1, zext_ln121_241_fu_841_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address1 <= zext_ln121_241_fu_841_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            rk_address1 <= zext_ln121_239_fu_650_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rk_address1 <= zext_ln121_237_fu_620_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            rk_address1 <= add_ln188_fu_597_p2(8 - 1 downto 0);
        else 
            rk_address1 <= "XXXXXXXX";
        end if; 
    end process;


    rk_ce0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            rk_ce0 <= ap_const_logic_1;
        else 
            rk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_ce1_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_start_int)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start_int = ap_const_logic_1)))) then 
            rk_ce1 <= ap_const_logic_1;
        else 
            rk_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln131_100_fu_698_p3 <= 
        xor_ln132_100_fu_692_p2 when (tmp_fu_684_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_101_fu_870_p3 <= 
        xor_ln132_101_fu_864_p2 when (tmp_422_fu_856_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_102_fu_912_p3 <= 
        xor_ln132_102_fu_906_p2 when (tmp_424_fu_898_p3(0) = '1') else 
        x_assign_61_fu_890_p3;
    select_ln131_103_fu_946_p3 <= 
        xor_ln132_103_fu_940_p2 when (tmp_426_fu_932_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_104_fu_988_p3 <= 
        xor_ln132_104_fu_982_p2 when (tmp_428_fu_974_p3(0) = '1') else 
        x_assign_62_fu_966_p3;
    select_ln131_105_fu_740_p3 <= 
        xor_ln132_105_fu_734_p2 when (tmp_430_fu_726_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_106_fu_782_p3 <= 
        xor_ln132_106_fu_776_p2 when (tmp_432_fu_768_p3(0) = '1') else 
        x_assign_63_fu_760_p3;
    select_ln131_107_fu_816_p3 <= 
        xor_ln132_107_fu_810_p2 when (tmp_434_fu_802_p3(0) = '1') else 
        x_assign_60_fu_718_p3;
    select_ln131_108_fu_1115_p3 <= 
        xor_ln132_108_fu_1109_p2 when (tmp_436_fu_1101_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_109_fu_1157_p3 <= 
        xor_ln132_109_fu_1151_p2 when (tmp_438_fu_1143_p3(0) = '1') else 
        x_assign_64_fu_1135_p3;
    select_ln131_110_fu_1199_p3 <= 
        xor_ln132_110_fu_1193_p2 when (tmp_440_fu_1185_p3(0) = '1') else 
        x_assign_65_fu_1177_p3;
    select_ln131_111_fu_1425_p3 <= 
        xor_ln132_111_fu_1419_p2 when (tmp_442_fu_1411_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_112_fu_1467_p3 <= 
        xor_ln132_112_fu_1461_p2 when (tmp_444_fu_1453_p3(0) = '1') else 
        clefia_s0_q0;
    select_ln131_113_fu_1509_p3 <= 
        xor_ln132_113_fu_1503_p2 when (tmp_446_fu_1495_p3(0) = '1') else 
        x_assign_67_fu_1487_p3;
    select_ln131_114_fu_1551_p3 <= 
        xor_ln132_114_fu_1545_p2 when (tmp_448_fu_1537_p3(0) = '1') else 
        x_assign_68_fu_1529_p3;
    select_ln131_115_fu_1233_p3 <= 
        xor_ln132_115_fu_1227_p2 when (tmp_450_fu_1219_p3(0) = '1') else 
        clefia_s1_q0;
    select_ln131_116_fu_1275_p3 <= 
        xor_ln132_116_fu_1269_p2 when (tmp_452_fu_1261_p3(0) = '1') else 
        x_assign_69_fu_1253_p3;
    select_ln131_117_fu_1317_p3 <= 
        xor_ln132_117_fu_1311_p2 when (tmp_454_fu_1303_p3(0) = '1') else 
        x_assign_70_fu_1295_p3;
    select_ln131_118_fu_1585_p3 <= 
        xor_ln132_118_fu_1579_p2 when (tmp_456_fu_1571_p3(0) = '1') else 
        x_assign_66_fu_1445_p3;
    select_ln131_119_fu_1627_p3 <= 
        xor_ln132_119_fu_1621_p2 when (tmp_458_fu_1613_p3(0) = '1') else 
        x_assign_71_fu_1605_p3;
    tmp_421_fu_710_p3 <= select_ln131_100_fu_698_p3(7 downto 7);
    tmp_422_fu_856_p3 <= clefia_s0_q0(7 downto 7);
    tmp_423_fu_882_p3 <= select_ln131_101_fu_870_p3(7 downto 7);
    tmp_424_fu_898_p3 <= select_ln131_101_fu_870_p3(6 downto 6);
    tmp_426_fu_932_p3 <= clefia_s1_q0(7 downto 7);
    tmp_427_fu_958_p3 <= select_ln131_103_fu_946_p3(7 downto 7);
    tmp_428_fu_974_p3 <= select_ln131_103_fu_946_p3(6 downto 6);
    tmp_430_fu_726_p3 <= clefia_s0_q0(7 downto 7);
    tmp_431_fu_752_p3 <= select_ln131_105_fu_740_p3(7 downto 7);
    tmp_432_fu_768_p3 <= select_ln131_105_fu_740_p3(6 downto 6);
    tmp_434_fu_802_p3 <= select_ln131_100_fu_698_p3(6 downto 6);
    tmp_436_fu_1101_p3 <= clefia_s0_q0(7 downto 7);
    tmp_437_fu_1127_p3 <= select_ln131_108_fu_1115_p3(7 downto 7);
    tmp_438_fu_1143_p3 <= select_ln131_108_fu_1115_p3(6 downto 6);
    tmp_439_fu_1169_p3 <= select_ln131_109_fu_1157_p3(7 downto 7);
    tmp_440_fu_1185_p3 <= select_ln131_109_fu_1157_p3(6 downto 6);
    tmp_442_fu_1411_p3 <= clefia_s1_q0(7 downto 7);
    tmp_443_fu_1437_p3 <= select_ln131_111_fu_1425_p3(7 downto 7);
    tmp_444_fu_1453_p3 <= clefia_s0_q0(7 downto 7);
    tmp_445_fu_1479_p3 <= select_ln131_112_fu_1467_p3(7 downto 7);
    tmp_446_fu_1495_p3 <= select_ln131_112_fu_1467_p3(6 downto 6);
    tmp_447_fu_1521_p3 <= select_ln131_113_fu_1509_p3(7 downto 7);
    tmp_448_fu_1537_p3 <= select_ln131_113_fu_1509_p3(6 downto 6);
    tmp_450_fu_1219_p3 <= clefia_s1_q0(7 downto 7);
    tmp_451_fu_1245_p3 <= select_ln131_115_fu_1233_p3(7 downto 7);
    tmp_452_fu_1261_p3 <= select_ln131_115_fu_1233_p3(6 downto 6);
    tmp_453_fu_1287_p3 <= select_ln131_116_fu_1275_p3(7 downto 7);
    tmp_454_fu_1303_p3 <= select_ln131_116_fu_1275_p3(6 downto 6);
    tmp_456_fu_1571_p3 <= select_ln131_111_fu_1425_p3(6 downto 6);
    tmp_457_fu_1597_p3 <= select_ln131_118_fu_1585_p3(7 downto 7);
    tmp_458_fu_1613_p3 <= select_ln131_118_fu_1585_p3(6 downto 6);
    tmp_fu_684_p3 <= clefia_s1_q0(7 downto 7);
    trunc_ln134_176_fu_878_p1 <= select_ln131_101_fu_870_p3(7 - 1 downto 0);
    trunc_ln134_177_fu_920_p1 <= select_ln131_102_fu_912_p3(7 - 1 downto 0);
    trunc_ln134_178_fu_954_p1 <= select_ln131_103_fu_946_p3(7 - 1 downto 0);
    trunc_ln134_179_fu_996_p1 <= select_ln131_104_fu_988_p3(7 - 1 downto 0);
    trunc_ln134_180_fu_748_p1 <= select_ln131_105_fu_740_p3(7 - 1 downto 0);
    trunc_ln134_181_fu_790_p1 <= select_ln131_106_fu_782_p3(7 - 1 downto 0);
    trunc_ln134_182_fu_824_p1 <= select_ln131_107_fu_816_p3(7 - 1 downto 0);
    trunc_ln134_183_fu_1123_p1 <= select_ln131_108_fu_1115_p3(7 - 1 downto 0);
    trunc_ln134_184_fu_1165_p1 <= select_ln131_109_fu_1157_p3(7 - 1 downto 0);
    trunc_ln134_185_fu_1207_p1 <= select_ln131_110_fu_1199_p3(7 - 1 downto 0);
    trunc_ln134_186_fu_1433_p1 <= select_ln131_111_fu_1425_p3(7 - 1 downto 0);
    trunc_ln134_187_fu_1475_p1 <= select_ln131_112_fu_1467_p3(7 - 1 downto 0);
    trunc_ln134_188_fu_1517_p1 <= select_ln131_113_fu_1509_p3(7 - 1 downto 0);
    trunc_ln134_189_fu_1559_p1 <= select_ln131_114_fu_1551_p3(7 - 1 downto 0);
    trunc_ln134_190_fu_1241_p1 <= select_ln131_115_fu_1233_p3(7 - 1 downto 0);
    trunc_ln134_191_fu_1283_p1 <= select_ln131_116_fu_1275_p3(7 - 1 downto 0);
    trunc_ln134_192_fu_1325_p1 <= select_ln131_117_fu_1317_p3(7 - 1 downto 0);
    trunc_ln134_193_fu_1593_p1 <= select_ln131_118_fu_1585_p3(7 - 1 downto 0);
    trunc_ln134_194_fu_1635_p1 <= select_ln131_119_fu_1627_p3(7 - 1 downto 0);
    trunc_ln134_fu_706_p1 <= select_ln131_100_fu_698_p3(7 - 1 downto 0);
    x_assign_60_fu_718_p3 <= (trunc_ln134_fu_706_p1 & tmp_421_fu_710_p3);
    x_assign_61_fu_890_p3 <= (trunc_ln134_176_fu_878_p1 & tmp_423_fu_882_p3);
    x_assign_62_fu_966_p3 <= (trunc_ln134_178_fu_954_p1 & tmp_427_fu_958_p3);
    x_assign_63_fu_760_p3 <= (trunc_ln134_180_fu_748_p1 & tmp_431_fu_752_p3);
    x_assign_64_fu_1135_p3 <= (trunc_ln134_183_fu_1123_p1 & tmp_437_fu_1127_p3);
    x_assign_65_fu_1177_p3 <= (trunc_ln134_184_fu_1165_p1 & tmp_439_fu_1169_p3);
    x_assign_66_fu_1445_p3 <= (trunc_ln134_186_fu_1433_p1 & tmp_443_fu_1437_p3);
    x_assign_67_fu_1487_p3 <= (trunc_ln134_187_fu_1475_p1 & tmp_445_fu_1479_p3);
    x_assign_68_fu_1529_p3 <= (trunc_ln134_188_fu_1517_p1 & tmp_447_fu_1521_p3);
    x_assign_69_fu_1253_p3 <= (trunc_ln134_190_fu_1241_p1 & tmp_451_fu_1245_p3);
    x_assign_70_fu_1295_p3 <= (trunc_ln134_191_fu_1283_p1 & tmp_453_fu_1287_p3);
    x_assign_71_fu_1605_p3 <= (trunc_ln134_193_fu_1593_p1 & tmp_457_fu_1597_p3);
    xor_ln124_252_fu_1057_p2 <= (xor_ln124_516_fu_1051_p2 xor xor_ln124_514_fu_1040_p2);
    xor_ln124_252_out <= xor_ln124_252_reg_2064;

    xor_ln124_252_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_252_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_252_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_253_fu_1085_p2 <= (xor_ln124_520_fu_1079_p2 xor xor_ln124_518_fu_1069_p2);
    xor_ln124_253_out <= xor_ln124_253_reg_2070;

    xor_ln124_253_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_253_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_253_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_254_fu_1377_p2 <= (xor_ln124_524_fu_1372_p2 xor xor_ln124_522_fu_1361_p2);
    xor_ln124_254_out <= xor_ln124_254_reg_2122;

    xor_ln124_254_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_254_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_254_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_255_fu_1405_p2 <= (xor_ln124_528_fu_1400_p2 xor xor_ln124_526_fu_1389_p2);
    xor_ln124_255_out <= xor_ln124_255_reg_2128;

    xor_ln124_255_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_255_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_255_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_260_fu_1693_p2 <= (xor_ln124_532_fu_1687_p2 xor xor_ln124_530_fu_1676_p2);
    xor_ln124_260_out <= xor_ln124_260_reg_2196;

    xor_ln124_260_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_260_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_260_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_261_fu_1721_p2 <= (xor_ln124_536_fu_1715_p2 xor xor_ln124_534_fu_1704_p2);
    xor_ln124_261_out <= xor_ln124_261_reg_2202;

    xor_ln124_261_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_261_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_261_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_262_fu_1742_p2 <= (xor_ln124_539_fu_1737_p2 xor xor_ln124_537_fu_1727_p2);
    xor_ln124_262_out <= xor_ln124_262_reg_2208;

    xor_ln124_262_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_262_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_262_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_263_fu_1763_p2 <= (xor_ln124_542_fu_1758_p2 xor xor_ln124_540_fu_1748_p2);
    xor_ln124_263_out <= xor_ln124_263_reg_2214;

    xor_ln124_263_out_ap_vld_assign_proc : process(ap_CS_fsm_state12, icmp_ln193_fu_1769_p2)
    begin
        if (((icmp_ln193_fu_1769_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            xor_ln124_263_out_ap_vld <= ap_const_logic_1;
        else 
            xor_ln124_263_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln124_514_fu_1040_p2 <= (xor_ln124_fu_1035_p2 xor reg_560);
    xor_ln124_515_fu_1046_p2 <= (x_assign_60_reg_1932 xor or_ln134_39_fu_1023_p3);
    xor_ln124_516_fu_1051_p2 <= (xor_ln124_515_fu_1046_p2 xor or_ln134_40_fu_1029_p3);
    xor_ln124_517_fu_1063_p2 <= (or_ln134_39_fu_1023_p3 xor fin_3_q0);
    xor_ln124_518_fu_1069_p2 <= (xor_ln124_517_fu_1063_p2 xor reg_564);
    xor_ln124_519_fu_1075_p2 <= (x_assign_63_reg_1938 xor x_assign_61_reg_1996);
    xor_ln124_520_fu_1079_p2 <= (xor_ln124_519_fu_1075_p2 xor or_ln134_40_fu_1029_p3);
    xor_ln124_521_fu_1355_p2 <= (or_ln134_42_fu_1349_p3 xor fin_3_q1);
    xor_ln124_522_fu_1361_p2 <= (xor_ln124_521_fu_1355_p2 xor reg_568);
    xor_ln124_523_fu_1367_p2 <= (x_assign_60_reg_1932 xor or_ln134_41_fu_1343_p3);
    xor_ln124_524_fu_1372_p2 <= (xor_ln124_523_fu_1367_p2 xor x_assign_62_reg_2012);
    xor_ln124_525_fu_1383_p2 <= (or_ln134_42_fu_1349_p3 xor fin_3_q0);
    xor_ln124_526_fu_1389_p2 <= (xor_ln124_525_fu_1383_p2 xor reg_572);
    xor_ln124_527_fu_1395_p2 <= (x_assign_63_reg_1938 xor or_ln134_41_fu_1343_p3);
    xor_ln124_528_fu_1400_p2 <= (xor_ln124_527_fu_1395_p2 xor x_assign_61_reg_1996);
    xor_ln124_529_fu_1671_p2 <= (x_assign_67_reg_2140 xor fin_3_q1);
    xor_ln124_530_fu_1676_p2 <= (xor_ln124_529_fu_1671_p2 xor reg_564);
    xor_ln124_531_fu_1682_p2 <= (x_assign_66_reg_2134 xor or_ln134_43_fu_1647_p3);
    xor_ln124_532_fu_1687_p2 <= (xor_ln124_531_fu_1682_p2 xor or_ln134_44_fu_1653_p3);
    xor_ln124_533_fu_1699_p2 <= (x_assign_67_reg_2140 xor fin_3_q0);
    xor_ln124_534_fu_1704_p2 <= (xor_ln124_533_fu_1699_p2 xor reg_560);
    xor_ln124_535_fu_1710_p2 <= (x_assign_66_reg_2134 xor or_ln134_45_fu_1659_p3);
    xor_ln124_536_fu_1715_p2 <= (xor_ln124_535_fu_1710_p2 xor or_ln134_46_fu_1665_p3);
    xor_ln124_537_fu_1727_p2 <= (reg_572 xor fin_3_q1);
    xor_ln124_538_fu_1733_p2 <= (xor_ln180_reg_2106 xor or_ln134_44_reg_2181);
    xor_ln124_539_fu_1737_p2 <= (xor_ln124_538_fu_1733_p2 xor or_ln134_43_reg_2176);
    xor_ln124_540_fu_1748_p2 <= (reg_568 xor fin_3_q0);
    xor_ln124_541_fu_1754_p2 <= (xor_ln180_reg_2106 xor or_ln134_46_reg_2191);
    xor_ln124_542_fu_1758_p2 <= (xor_ln124_541_fu_1754_p2 xor or_ln134_45_reg_2186);
    xor_ln124_fu_1035_p2 <= (x_assign_62_reg_2012 xor fin_3_q1);
    xor_ln132_100_fu_692_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_101_fu_864_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_102_fu_906_p2 <= (x_assign_61_fu_890_p3 xor ap_const_lv8_E);
    xor_ln132_103_fu_940_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_104_fu_982_p2 <= (x_assign_62_fu_966_p3 xor ap_const_lv8_E);
    xor_ln132_105_fu_734_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_106_fu_776_p2 <= (x_assign_63_fu_760_p3 xor ap_const_lv8_E);
    xor_ln132_107_fu_810_p2 <= (x_assign_60_fu_718_p3 xor ap_const_lv8_E);
    xor_ln132_108_fu_1109_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_109_fu_1151_p2 <= (x_assign_64_fu_1135_p3 xor ap_const_lv8_E);
    xor_ln132_110_fu_1193_p2 <= (x_assign_65_fu_1177_p3 xor ap_const_lv8_E);
    xor_ln132_111_fu_1419_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_112_fu_1461_p2 <= (clefia_s0_q0 xor ap_const_lv8_E);
    xor_ln132_113_fu_1503_p2 <= (x_assign_67_fu_1487_p3 xor ap_const_lv8_E);
    xor_ln132_114_fu_1545_p2 <= (x_assign_68_fu_1529_p3 xor ap_const_lv8_E);
    xor_ln132_115_fu_1227_p2 <= (clefia_s1_q0 xor ap_const_lv8_E);
    xor_ln132_116_fu_1269_p2 <= (x_assign_69_fu_1253_p3 xor ap_const_lv8_E);
    xor_ln132_117_fu_1311_p2 <= (x_assign_70_fu_1295_p3 xor ap_const_lv8_E);
    xor_ln132_118_fu_1579_p2 <= (x_assign_66_fu_1445_p3 xor ap_const_lv8_E);
    xor_ln132_119_fu_1621_p2 <= (x_assign_71_fu_1605_p3 xor ap_const_lv8_E);
    xor_ln180_fu_1337_p2 <= (x_assign_69_fu_1253_p3 xor x_assign_64_fu_1135_p3);
    zext_ln121_237_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_111_fu_615_p2),64));
    zext_ln121_238_fu_630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_112_fu_625_p2),64));
    zext_ln121_239_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_113_fu_645_p2),64));
    zext_ln121_240_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_114_fu_655_p2),64));
    zext_ln121_241_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_115_fu_836_p2),64));
    zext_ln121_242_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_116_fu_846_p2),64));
    zext_ln121_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_fu_604_p2),64));
    zext_ln150_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_552),64));
    zext_ln151_fu_640_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_556),64));
    zext_ln152_fu_674_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_552),64));
    zext_ln153_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_556),64));
    zext_ln173_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_552),64));
    zext_ln174_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_556),64));
    zext_ln175_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_552),64));
    zext_ln176_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_556),64));
    zext_ln460_cast_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln460),32));
end behav;
