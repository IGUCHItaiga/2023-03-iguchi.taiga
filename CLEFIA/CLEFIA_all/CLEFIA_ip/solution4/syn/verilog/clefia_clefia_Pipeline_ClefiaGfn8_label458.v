// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_clefia_Pipeline_ClefiaGfn8_label458 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fin_2_address0,
        fin_2_ce0,
        fin_2_we0,
        fin_2_d0,
        fin_2_q0,
        fin_2_address1,
        fin_2_ce1,
        fin_2_we1,
        fin_2_d1,
        fin_2_q1,
        fin_2_load_out,
        fin_2_load_out_ap_vld,
        fin_2_load_1_out,
        fin_2_load_1_out_ap_vld,
        fin_2_load_2_out,
        fin_2_load_2_out_ap_vld,
        fin_2_load_3_out,
        fin_2_load_3_out_ap_vld,
        xor_ln124_29_out,
        xor_ln124_29_out_ap_vld,
        xor_ln124_30_out,
        xor_ln124_30_out_ap_vld,
        xor_ln124_33_out,
        xor_ln124_33_out_ap_vld,
        xor_ln124_34_out,
        xor_ln124_34_out_ap_vld,
        fin_2_load_8_out,
        fin_2_load_8_out_ap_vld,
        fin_2_load_9_out,
        fin_2_load_9_out_ap_vld,
        fin_2_load_10_out,
        fin_2_load_10_out_ap_vld,
        fin_2_load_11_out,
        fin_2_load_11_out_ap_vld,
        xor_ln124_47_out,
        xor_ln124_47_out_ap_vld,
        xor_ln124_48_out,
        xor_ln124_48_out_ap_vld,
        xor_ln124_49_out,
        xor_ln124_49_out_ap_vld,
        xor_ln124_50_out,
        xor_ln124_50_out_ap_vld,
        fin_2_load_16_out,
        fin_2_load_16_out_ap_vld,
        fin_2_load_17_out,
        fin_2_load_17_out_ap_vld,
        fin_2_load_18_out,
        fin_2_load_18_out_ap_vld,
        fin_2_load_19_out,
        fin_2_load_19_out_ap_vld,
        xor_ln124_57_out,
        xor_ln124_57_out_ap_vld,
        xor_ln124_58_out,
        xor_ln124_58_out_ap_vld,
        xor_ln124_59_out,
        xor_ln124_59_out_ap_vld,
        xor_ln124_60_out,
        xor_ln124_60_out_ap_vld,
        fin_2_load_24_out,
        fin_2_load_24_out_ap_vld,
        fin_2_load_25_out,
        fin_2_load_25_out_ap_vld,
        fin_2_load_26_out,
        fin_2_load_26_out_ap_vld,
        fin_2_load_27_out,
        fin_2_load_27_out_ap_vld,
        xor_ln124_65_out,
        xor_ln124_65_out_ap_vld,
        xor_ln124_66_out,
        xor_ln124_66_out_ap_vld,
        xor_ln124_67_out,
        xor_ln124_67_out_ap_vld,
        xor_ln124_68_out,
        xor_ln124_68_out_ap_vld,
        con256_address0,
        con256_ce0,
        con256_q0,
        clefia_s0_address0,
        clefia_s0_ce0,
        clefia_s0_q0,
        clefia_s1_address0,
        clefia_s1_ce0,
        clefia_s1_q0
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_state15 = 24'd16384;
parameter    ap_ST_fsm_state16 = 24'd32768;
parameter    ap_ST_fsm_state17 = 24'd65536;
parameter    ap_ST_fsm_state18 = 24'd131072;
parameter    ap_ST_fsm_state19 = 24'd262144;
parameter    ap_ST_fsm_state20 = 24'd524288;
parameter    ap_ST_fsm_state21 = 24'd1048576;
parameter    ap_ST_fsm_state22 = 24'd2097152;
parameter    ap_ST_fsm_state23 = 24'd4194304;
parameter    ap_ST_fsm_state24 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] fin_2_address0;
output   fin_2_ce0;
output   fin_2_we0;
output  [7:0] fin_2_d0;
input  [7:0] fin_2_q0;
output  [4:0] fin_2_address1;
output   fin_2_ce1;
output   fin_2_we1;
output  [7:0] fin_2_d1;
input  [7:0] fin_2_q1;
output  [7:0] fin_2_load_out;
output   fin_2_load_out_ap_vld;
output  [7:0] fin_2_load_1_out;
output   fin_2_load_1_out_ap_vld;
output  [7:0] fin_2_load_2_out;
output   fin_2_load_2_out_ap_vld;
output  [7:0] fin_2_load_3_out;
output   fin_2_load_3_out_ap_vld;
output  [7:0] xor_ln124_29_out;
output   xor_ln124_29_out_ap_vld;
output  [7:0] xor_ln124_30_out;
output   xor_ln124_30_out_ap_vld;
output  [7:0] xor_ln124_33_out;
output   xor_ln124_33_out_ap_vld;
output  [7:0] xor_ln124_34_out;
output   xor_ln124_34_out_ap_vld;
output  [7:0] fin_2_load_8_out;
output   fin_2_load_8_out_ap_vld;
output  [7:0] fin_2_load_9_out;
output   fin_2_load_9_out_ap_vld;
output  [7:0] fin_2_load_10_out;
output   fin_2_load_10_out_ap_vld;
output  [7:0] fin_2_load_11_out;
output   fin_2_load_11_out_ap_vld;
output  [7:0] xor_ln124_47_out;
output   xor_ln124_47_out_ap_vld;
output  [7:0] xor_ln124_48_out;
output   xor_ln124_48_out_ap_vld;
output  [7:0] xor_ln124_49_out;
output   xor_ln124_49_out_ap_vld;
output  [7:0] xor_ln124_50_out;
output   xor_ln124_50_out_ap_vld;
output  [7:0] fin_2_load_16_out;
output   fin_2_load_16_out_ap_vld;
output  [7:0] fin_2_load_17_out;
output   fin_2_load_17_out_ap_vld;
output  [7:0] fin_2_load_18_out;
output   fin_2_load_18_out_ap_vld;
output  [7:0] fin_2_load_19_out;
output   fin_2_load_19_out_ap_vld;
output  [7:0] xor_ln124_57_out;
output   xor_ln124_57_out_ap_vld;
output  [7:0] xor_ln124_58_out;
output   xor_ln124_58_out_ap_vld;
output  [7:0] xor_ln124_59_out;
output   xor_ln124_59_out_ap_vld;
output  [7:0] xor_ln124_60_out;
output   xor_ln124_60_out_ap_vld;
output  [7:0] fin_2_load_24_out;
output   fin_2_load_24_out_ap_vld;
output  [7:0] fin_2_load_25_out;
output   fin_2_load_25_out_ap_vld;
output  [7:0] fin_2_load_26_out;
output   fin_2_load_26_out_ap_vld;
output  [7:0] fin_2_load_27_out;
output   fin_2_load_27_out_ap_vld;
output  [7:0] xor_ln124_65_out;
output   xor_ln124_65_out_ap_vld;
output  [7:0] xor_ln124_66_out;
output   xor_ln124_66_out_ap_vld;
output  [7:0] xor_ln124_67_out;
output   xor_ln124_67_out_ap_vld;
output  [7:0] xor_ln124_68_out;
output   xor_ln124_68_out_ap_vld;
output  [8:0] con256_address0;
output   con256_ce0;
input  [7:0] con256_q0;
output  [7:0] clefia_s0_address0;
output   clefia_s0_ce0;
input  [7:0] clefia_s0_q0;
output  [7:0] clefia_s1_address0;
output   clefia_s1_ce0;
input  [7:0] clefia_s1_q0;

reg ap_idle;
reg[4:0] fin_2_address0;
reg fin_2_ce0;
reg fin_2_we0;
reg[7:0] fin_2_d0;
reg[4:0] fin_2_address1;
reg fin_2_ce1;
reg fin_2_we1;
reg[7:0] fin_2_d1;
reg fin_2_load_out_ap_vld;
reg fin_2_load_1_out_ap_vld;
reg fin_2_load_2_out_ap_vld;
reg fin_2_load_3_out_ap_vld;
reg xor_ln124_29_out_ap_vld;
reg xor_ln124_30_out_ap_vld;
reg xor_ln124_33_out_ap_vld;
reg xor_ln124_34_out_ap_vld;
reg fin_2_load_8_out_ap_vld;
reg fin_2_load_9_out_ap_vld;
reg fin_2_load_10_out_ap_vld;
reg fin_2_load_11_out_ap_vld;
reg xor_ln124_47_out_ap_vld;
reg xor_ln124_48_out_ap_vld;
reg xor_ln124_49_out_ap_vld;
reg xor_ln124_50_out_ap_vld;
reg fin_2_load_16_out_ap_vld;
reg fin_2_load_17_out_ap_vld;
reg fin_2_load_18_out_ap_vld;
reg fin_2_load_19_out_ap_vld;
reg xor_ln124_57_out_ap_vld;
reg xor_ln124_58_out_ap_vld;
reg xor_ln124_59_out_ap_vld;
reg xor_ln124_60_out_ap_vld;
reg fin_2_load_24_out_ap_vld;
reg fin_2_load_25_out_ap_vld;
reg fin_2_load_26_out_ap_vld;
reg fin_2_load_27_out_ap_vld;
reg xor_ln124_65_out_ap_vld;
reg xor_ln124_66_out_ap_vld;
reg xor_ln124_67_out_ap_vld;
reg xor_ln124_68_out_ap_vld;
reg[8:0] con256_address0;
reg con256_ce0;
reg[7:0] clefia_s0_address0;
reg clefia_s0_ce0;
reg[7:0] clefia_s1_address0;
reg clefia_s1_ce0;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state24;
wire    ap_block_state24_pp0_stage23_iter0;
reg   [0:0] icmp_ln216_reg_3895;
reg    ap_condition_exit_pp0_iter0_stage23;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [7:0] reg_1002;
wire    ap_CS_fsm_state2;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_CS_fsm_state3;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_CS_fsm_state4;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_CS_fsm_state5;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_CS_fsm_state6;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_CS_fsm_state7;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_CS_fsm_state8;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_CS_fsm_state9;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_CS_fsm_state10;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_CS_fsm_state11;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_CS_fsm_state12;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_CS_fsm_state13;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_CS_fsm_state14;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_CS_fsm_state15;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_CS_fsm_state16;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_CS_fsm_state17;
wire    ap_block_state17_pp0_stage16_iter0;
reg   [7:0] reg_1006;
reg   [7:0] reg_1010;
reg   [7:0] reg_1014;
reg   [7:0] reg_1018;
wire    ap_CS_fsm_state18;
wire    ap_block_state18_pp0_stage17_iter0;
reg   [7:0] reg_1022;
reg   [7:0] reg_1026;
reg   [7:0] idx21_i_load_reg_3483;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [4:0] fin_2_addr_30_reg_3503;
wire   [4:0] fin_2_addr_31_reg_3508;
wire   [4:0] fin_2_addr_28_reg_3518;
wire   [4:0] fin_2_addr_29_reg_3523;
reg   [7:0] fin_2_load_reg_3528;
reg   [7:0] fin_2_load_1_reg_3540;
wire   [4:0] fin_2_addr_22_reg_3547;
wire   [4:0] fin_2_addr_23_reg_3552;
reg   [7:0] fin_2_load_2_reg_3562;
reg   [7:0] fin_2_load_3_reg_3569;
wire   [4:0] fin_2_addr_20_reg_3581;
wire   [4:0] fin_2_addr_21_reg_3586;
wire   [7:0] x_assign_3_fu_1132_p3;
reg   [7:0] x_assign_3_reg_3601;
wire   [6:0] trunc_ln134_6_fu_1162_p1;
reg   [6:0] trunc_ln134_6_reg_3607;
reg   [0:0] tmp_78_reg_3612;
reg   [7:0] fin_2_load_8_reg_3617;
reg   [7:0] fin_2_load_9_reg_3624;
wire   [4:0] fin_2_addr_14_reg_3631;
wire   [4:0] fin_2_addr_15_reg_3636;
wire   [7:0] x_assign_s_fu_1218_p3;
reg   [7:0] x_assign_s_reg_3646;
wire   [6:0] trunc_ln134_7_fu_1248_p1;
reg   [6:0] trunc_ln134_7_reg_3652;
reg   [0:0] tmp_80_reg_3657;
reg   [7:0] fin_2_load_10_reg_3667;
reg   [7:0] fin_2_load_11_reg_3674;
wire   [4:0] fin_2_addr_12_reg_3681;
wire   [4:0] fin_2_addr_13_reg_3686;
wire   [7:0] x_assign_1_fu_1314_p3;
reg   [7:0] x_assign_1_reg_3696;
wire   [6:0] trunc_ln134_2_fu_1344_p1;
reg   [6:0] trunc_ln134_2_reg_3702;
reg   [0:0] tmp_70_reg_3707;
reg   [7:0] fin_2_load_16_reg_3717;
reg   [7:0] fin_2_load_17_reg_3724;
wire   [4:0] fin_2_addr_6_reg_3731;
wire   [4:0] fin_2_addr_7_reg_3736;
wire   [7:0] x_assign_2_fu_1400_p3;
reg   [7:0] x_assign_2_reg_3741;
wire   [6:0] trunc_ln134_4_fu_1430_p1;
reg   [6:0] trunc_ln134_4_reg_3747;
reg   [0:0] tmp_74_reg_3752;
reg   [7:0] fin_2_load_18_reg_3767;
reg   [7:0] fin_2_load_19_reg_3774;
wire   [4:0] fin_2_addr_4_reg_3781;
wire   [4:0] fin_2_addr_5_reg_3786;
reg   [7:0] z_4_reg_3796;
wire   [7:0] x_assign_9_fu_1516_p3;
reg   [7:0] x_assign_9_reg_3806;
wire   [6:0] trunc_ln134_17_fu_1588_p1;
reg   [6:0] trunc_ln134_17_reg_3811;
reg   [0:0] tmp_100_reg_3816;
reg   [7:0] fin_2_load_24_reg_3821;
reg   [7:0] fin_2_load_25_reg_3828;
reg   [3:0] r_assign_2_load_reg_3835;
reg   [7:0] z_5_reg_3850;
wire   [6:0] trunc_ln134_10_fu_1719_p1;
reg   [6:0] trunc_ln134_10_reg_3860;
reg   [0:0] tmp_86_reg_3865;
wire   [7:0] xor_ln180_fu_1731_p2;
reg   [7:0] xor_ln180_reg_3870;
reg   [7:0] fin_2_load_26_reg_3881;
reg   [7:0] fin_2_load_27_reg_3888;
wire   [0:0] icmp_ln216_fu_1746_p2;
wire   [7:0] xor_ln124_29_fu_1786_p2;
reg   [7:0] xor_ln124_29_reg_3909;
wire   [7:0] xor_ln124_30_fu_1814_p2;
reg   [7:0] xor_ln124_30_reg_3915;
wire   [7:0] x_assign_6_fu_1864_p3;
reg   [7:0] x_assign_6_reg_3926;
wire   [6:0] trunc_ln134_19_fu_1936_p1;
reg   [6:0] trunc_ln134_19_reg_3932;
reg   [0:0] tmp_104_reg_3937;
wire   [7:0] xor_ln124_33_fu_1992_p2;
reg   [7:0] xor_ln124_33_reg_3957;
wire   [7:0] xor_ln124_34_fu_2020_p2;
reg   [7:0] xor_ln124_34_reg_3963;
wire   [7:0] x_assign_7_fu_2060_p3;
reg   [7:0] x_assign_7_reg_3969;
wire   [6:0] trunc_ln134_14_fu_2132_p1;
reg   [6:0] trunc_ln134_14_reg_3975;
reg   [0:0] tmp_94_reg_3980;
wire   [7:0] or_ln134_1_fu_2164_p3;
reg   [7:0] or_ln134_1_reg_4005;
wire   [7:0] or_ln134_2_fu_2170_p3;
reg   [7:0] or_ln134_2_reg_4010;
wire   [7:0] or_ln134_3_fu_2176_p3;
reg   [7:0] or_ln134_3_reg_4015;
wire   [7:0] or_ln134_4_fu_2182_p3;
reg   [7:0] or_ln134_4_reg_4020;
wire   [7:0] xor_ln124_47_fu_2209_p2;
reg   [7:0] xor_ln124_47_reg_4025;
wire   [7:0] xor_ln124_48_fu_2236_p2;
reg   [7:0] xor_ln124_48_reg_4031;
wire   [7:0] x_assign_15_fu_2296_p3;
reg   [7:0] x_assign_15_reg_4047;
wire   [6:0] trunc_ln134_26_fu_2326_p1;
reg   [6:0] trunc_ln134_26_reg_4053;
reg   [0:0] tmp_118_reg_4058;
wire   [7:0] xor_ln124_49_fu_2353_p2;
reg   [7:0] xor_ln124_49_reg_4073;
wire   [7:0] xor_ln124_50_fu_2374_p2;
reg   [7:0] xor_ln124_50_reg_4079;
wire   [7:0] x_assign_12_fu_2424_p3;
reg   [7:0] x_assign_12_reg_4090;
wire   [6:0] trunc_ln134_27_fu_2454_p1;
reg   [6:0] trunc_ln134_27_reg_4096;
reg   [0:0] tmp_120_reg_4101;
wire   [7:0] x_assign_13_fu_2520_p3;
reg   [7:0] x_assign_13_reg_4126;
wire   [6:0] trunc_ln134_22_fu_2550_p1;
reg   [6:0] trunc_ln134_22_reg_4132;
reg   [0:0] tmp_110_reg_4137;
wire   [7:0] xor_ln124_57_fu_2697_p2;
reg   [7:0] xor_ln124_57_reg_4157;
wire   [7:0] xor_ln124_58_fu_2725_p2;
reg   [7:0] xor_ln124_58_reg_4163;
wire   [7:0] xor_ln124_59_fu_2754_p2;
reg   [7:0] xor_ln124_59_reg_4169;
wire   [7:0] xor_ln124_60_fu_2782_p2;
reg   [7:0] xor_ln124_60_reg_4175;
wire   [7:0] x_assign_21_fu_2862_p3;
reg   [7:0] x_assign_21_reg_4211;
wire   [6:0] trunc_ln134_37_fu_2934_p1;
reg   [6:0] trunc_ln134_37_reg_4216;
reg   [0:0] tmp_140_reg_4221;
wire   [6:0] trunc_ln134_30_fu_3062_p1;
reg   [6:0] trunc_ln134_30_reg_4231;
reg   [0:0] tmp_126_reg_4236;
wire   [7:0] xor_ln180_1_fu_3074_p2;
reg   [7:0] xor_ln180_1_reg_4241;
reg   [7:0] fin_2_load_30_reg_4247;
reg   [7:0] fin_2_load_31_reg_4252;
wire   [7:0] x_assign_18_fu_3123_p3;
reg   [7:0] x_assign_18_reg_4262;
wire   [6:0] trunc_ln134_39_fu_3195_p1;
reg   [6:0] trunc_ln134_39_reg_4268;
reg   [0:0] tmp_144_reg_4273;
wire   [7:0] x_assign_19_fu_3241_p3;
reg   [7:0] x_assign_19_reg_4278;
wire    ap_CS_fsm_state19;
wire    ap_block_state19_pp0_stage18_iter0;
wire   [6:0] trunc_ln134_34_fu_3313_p1;
reg   [6:0] trunc_ln134_34_reg_4283;
reg   [0:0] tmp_134_reg_4288;
wire   [7:0] xor_ln124_66_fu_3360_p2;
reg   [7:0] xor_ln124_66_reg_4293;
wire   [7:0] xor_ln124_68_fu_3382_p2;
reg   [7:0] xor_ln124_68_reg_4299;
wire   [7:0] xor_ln124_65_fu_3422_p2;
reg   [7:0] xor_ln124_65_reg_4305;
wire    ap_CS_fsm_state20;
wire    ap_block_state20_pp0_stage19_iter0;
wire   [7:0] xor_ln124_67_fu_3444_p2;
reg   [7:0] xor_ln124_67_reg_4311;
wire   [7:0] add_ln215_fu_3450_p2;
reg   [7:0] add_ln215_reg_4317;
wire   [63:0] idx21_i_cast_fu_1043_p1;
wire   [63:0] zext_ln121_38_fu_1053_p1;
wire   [63:0] zext_ln121_39_fu_1068_p1;
wire   [63:0] zext_ln150_fu_1073_p1;
wire   [63:0] zext_ln121_41_fu_1088_p1;
wire   [63:0] zext_ln151_fu_1093_p1;
wire   [63:0] zext_ln152_fu_1179_p1;
wire   [63:0] zext_ln121_42_fu_1265_p1;
wire   [63:0] zext_ln153_fu_1275_p1;
wire   [63:0] zext_ln121_43_fu_1361_p1;
wire   [63:0] zext_ln121_44_fu_1452_p1;
wire   [63:0] zext_ln173_fu_1457_p1;
wire   [63:0] zext_ln121_45_fu_1472_p1;
wire   [63:0] zext_ln174_fu_1477_p1;
wire   [63:0] zext_ln175_fu_1608_p1;
wire   [63:0] zext_ln121_46_fu_1741_p1;
wire   [63:0] zext_ln176_fu_1825_p1;
wire   [63:0] zext_ln121_47_fu_1953_p1;
wire   [63:0] zext_ln121_48_fu_2154_p1;
wire   [63:0] zext_ln150_1_fu_2159_p1;
wire   [63:0] zext_ln121_49_fu_2252_p1;
wire   [63:0] zext_ln151_1_fu_2257_p1;
wire   [63:0] zext_ln152_1_fu_2385_p1;
wire   [63:0] zext_ln121_50_fu_2471_p1;
wire   [63:0] zext_ln153_1_fu_2481_p1;
wire   [63:0] zext_ln121_51_fu_2567_p1;
wire   [63:0] zext_ln121_52_fu_2798_p1;
wire   [63:0] zext_ln173_1_fu_2803_p1;
wire   [63:0] zext_ln121_53_fu_2818_p1;
wire   [63:0] zext_ln174_1_fu_2823_p1;
wire   [63:0] zext_ln175_1_fu_2951_p1;
wire   [63:0] zext_ln176_1_fu_3084_p1;
reg   [7:0] idx21_i_fu_202;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_idx21_i_load;
reg   [3:0] r_assign_2_fu_206;
wire   [3:0] add_ln210_fu_3455_p2;
wire    ap_CS_fsm_state21;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_CS_fsm_state22;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_CS_fsm_state23;
wire    ap_block_state23_pp0_stage22_iter0;
wire   [7:0] or_ln121_6_fu_1048_p2;
wire   [7:0] or_ln121_7_fu_1063_p2;
wire   [7:0] xor_ln124_16_fu_1058_p2;
wire   [7:0] or_ln121_8_fu_1083_p2;
wire   [7:0] xor_ln124_17_fu_1078_p2;
wire   [0:0] tmp_75_fu_1098_p3;
wire   [7:0] xor_ln132_5_fu_1106_p2;
wire   [7:0] select_ln131_5_fu_1112_p3;
wire   [6:0] trunc_ln134_5_fu_1120_p1;
wire   [0:0] tmp_76_fu_1124_p3;
wire   [0:0] tmp_77_fu_1140_p3;
wire   [7:0] xor_ln132_6_fu_1148_p2;
wire   [7:0] select_ln131_6_fu_1154_p3;
wire   [7:0] xor_ln124_19_fu_1174_p2;
wire   [0:0] tmp_fu_1184_p3;
wire   [7:0] xor_ln132_fu_1192_p2;
wire   [7:0] select_ln131_fu_1198_p3;
wire   [6:0] trunc_ln134_fu_1206_p1;
wire   [0:0] tmp_66_fu_1210_p3;
wire   [0:0] tmp_79_fu_1226_p3;
wire   [7:0] xor_ln132_7_fu_1234_p2;
wire   [7:0] select_ln131_7_fu_1240_p3;
wire   [7:0] or_ln212_fu_1260_p2;
wire   [7:0] xor_ln124_20_fu_1270_p2;
wire   [0:0] tmp_67_fu_1280_p3;
wire   [7:0] xor_ln132_1_fu_1288_p2;
wire   [7:0] select_ln131_1_fu_1294_p3;
wire   [6:0] trunc_ln134_1_fu_1302_p1;
wire   [0:0] tmp_68_fu_1306_p3;
wire   [0:0] tmp_69_fu_1322_p3;
wire   [7:0] xor_ln132_2_fu_1330_p2;
wire   [7:0] select_ln131_2_fu_1336_p3;
wire   [7:0] or_ln121_9_fu_1356_p2;
wire   [0:0] tmp_71_fu_1366_p3;
wire   [7:0] xor_ln132_3_fu_1374_p2;
wire   [7:0] select_ln131_3_fu_1380_p3;
wire   [6:0] trunc_ln134_3_fu_1388_p1;
wire   [0:0] tmp_72_fu_1392_p3;
wire   [0:0] tmp_73_fu_1408_p3;
wire   [7:0] xor_ln132_4_fu_1416_p2;
wire   [7:0] select_ln131_4_fu_1422_p3;
wire   [7:0] or_ln121_10_fu_1447_p2;
wire   [7:0] xor_ln124_35_fu_1442_p2;
wire   [7:0] or_ln121_11_fu_1467_p2;
wire   [7:0] xor_ln124_36_fu_1462_p2;
wire   [0:0] tmp_95_fu_1482_p3;
wire   [7:0] xor_ln132_15_fu_1490_p2;
wire   [7:0] select_ln131_15_fu_1496_p3;
wire   [6:0] trunc_ln134_15_fu_1504_p1;
wire   [0:0] tmp_96_fu_1508_p3;
wire   [0:0] tmp_97_fu_1524_p3;
wire   [7:0] xor_ln132_16_fu_1532_p2;
wire   [7:0] select_ln131_16_fu_1538_p3;
wire   [6:0] trunc_ln134_16_fu_1546_p1;
wire   [0:0] tmp_98_fu_1550_p3;
wire   [7:0] x_assign_10_fu_1558_p3;
wire   [0:0] tmp_99_fu_1566_p3;
wire   [7:0] xor_ln132_17_fu_1574_p2;
wire   [7:0] select_ln131_17_fu_1580_p3;
wire   [7:0] xor_ln124_37_fu_1603_p2;
wire   [0:0] tmp_81_fu_1613_p3;
wire   [7:0] xor_ln132_8_fu_1621_p2;
wire   [7:0] select_ln131_8_fu_1627_p3;
wire   [6:0] trunc_ln134_8_fu_1635_p1;
wire   [0:0] tmp_82_fu_1639_p3;
wire   [7:0] x_assign_4_fu_1647_p3;
wire   [0:0] tmp_83_fu_1655_p3;
wire   [7:0] xor_ln132_9_fu_1663_p2;
wire   [7:0] select_ln131_9_fu_1669_p3;
wire   [6:0] trunc_ln134_9_fu_1677_p1;
wire   [0:0] tmp_84_fu_1681_p3;
wire   [7:0] x_assign_5_fu_1689_p3;
wire   [0:0] tmp_85_fu_1697_p3;
wire   [7:0] xor_ln132_10_fu_1705_p2;
wire   [7:0] select_ln131_10_fu_1711_p3;
wire   [7:0] or_ln213_fu_1736_p2;
wire   [7:0] xor_ln124_fu_1764_p2;
wire   [7:0] or_ln134_9_fu_1752_p3;
wire   [7:0] xor_ln124_218_fu_1775_p2;
wire   [7:0] or_ln134_7_fu_1758_p3;
wire   [7:0] xor_ln124_219_fu_1780_p2;
wire   [7:0] xor_ln124_217_fu_1769_p2;
wire   [7:0] xor_ln124_220_fu_1792_p2;
wire   [7:0] xor_ln124_222_fu_1804_p2;
wire   [7:0] xor_ln124_223_fu_1808_p2;
wire   [7:0] xor_ln124_221_fu_1798_p2;
wire   [7:0] xor_ln124_38_fu_1820_p2;
wire   [0:0] tmp_87_fu_1830_p3;
wire   [7:0] xor_ln132_11_fu_1838_p2;
wire   [7:0] select_ln131_11_fu_1844_p3;
wire   [6:0] trunc_ln134_11_fu_1852_p1;
wire   [0:0] tmp_88_fu_1856_p3;
wire   [0:0] tmp_101_fu_1872_p3;
wire   [7:0] xor_ln132_18_fu_1880_p2;
wire   [7:0] select_ln131_18_fu_1886_p3;
wire   [6:0] trunc_ln134_18_fu_1894_p1;
wire   [0:0] tmp_102_fu_1898_p3;
wire   [7:0] x_assign_11_fu_1906_p3;
wire   [0:0] tmp_103_fu_1914_p3;
wire   [7:0] xor_ln132_19_fu_1922_p2;
wire   [7:0] select_ln131_19_fu_1928_p3;
wire   [7:0] or_ln121_12_fu_1948_p2;
wire   [7:0] or_ln134_s_fu_1964_p3;
wire   [7:0] xor_ln124_224_fu_1970_p2;
wire   [7:0] or_ln134_8_fu_1958_p3;
wire   [7:0] xor_ln124_226_fu_1982_p2;
wire   [7:0] xor_ln124_227_fu_1987_p2;
wire   [7:0] xor_ln124_225_fu_1976_p2;
wire   [7:0] xor_ln124_228_fu_1998_p2;
wire   [7:0] xor_ln124_230_fu_2010_p2;
wire   [7:0] xor_ln124_231_fu_2015_p2;
wire   [7:0] xor_ln124_229_fu_2004_p2;
wire   [0:0] tmp_89_fu_2026_p3;
wire   [7:0] xor_ln132_12_fu_2034_p2;
wire   [7:0] select_ln131_12_fu_2040_p3;
wire   [6:0] trunc_ln134_12_fu_2048_p1;
wire   [0:0] tmp_90_fu_2052_p3;
wire   [0:0] tmp_91_fu_2068_p3;
wire   [7:0] xor_ln132_13_fu_2076_p2;
wire   [7:0] select_ln131_13_fu_2082_p3;
wire   [6:0] trunc_ln134_13_fu_2090_p1;
wire   [0:0] tmp_92_fu_2094_p3;
wire   [7:0] x_assign_8_fu_2102_p3;
wire   [0:0] tmp_93_fu_2110_p3;
wire   [7:0] xor_ln132_14_fu_2118_p2;
wire   [7:0] select_ln131_14_fu_2124_p3;
wire   [7:0] or_ln121_13_fu_2149_p2;
wire   [7:0] xor_ln124_53_fu_2144_p2;
wire   [7:0] xor_ln124_232_fu_2188_p2;
wire   [7:0] xor_ln124_234_fu_2198_p2;
wire   [7:0] xor_ln124_235_fu_2203_p2;
wire   [7:0] xor_ln124_233_fu_2193_p2;
wire   [7:0] xor_ln124_236_fu_2215_p2;
wire   [7:0] xor_ln124_237_fu_2220_p2;
wire   [7:0] xor_ln124_239_fu_2230_p2;
wire   [7:0] xor_ln124_238_fu_2225_p2;
wire   [7:0] or_ln121_14_fu_2247_p2;
wire   [7:0] xor_ln124_54_fu_2242_p2;
wire   [0:0] tmp_115_fu_2262_p3;
wire   [7:0] xor_ln132_25_fu_2270_p2;
wire   [7:0] select_ln131_25_fu_2276_p3;
wire   [6:0] trunc_ln134_25_fu_2284_p1;
wire   [0:0] tmp_116_fu_2288_p3;
wire   [0:0] tmp_117_fu_2304_p3;
wire   [7:0] xor_ln132_26_fu_2312_p2;
wire   [7:0] select_ln131_26_fu_2318_p3;
wire   [7:0] xor_ln124_240_fu_2338_p2;
wire   [7:0] xor_ln124_242_fu_2348_p2;
wire   [7:0] xor_ln124_241_fu_2344_p2;
wire   [7:0] xor_ln124_243_fu_2359_p2;
wire   [7:0] xor_ln124_245_fu_2369_p2;
wire   [7:0] xor_ln124_244_fu_2365_p2;
wire   [7:0] xor_ln124_55_fu_2380_p2;
wire   [0:0] tmp_105_fu_2390_p3;
wire   [7:0] xor_ln132_20_fu_2398_p2;
wire   [7:0] select_ln131_20_fu_2404_p3;
wire   [6:0] trunc_ln134_20_fu_2412_p1;
wire   [0:0] tmp_106_fu_2416_p3;
wire   [0:0] tmp_119_fu_2432_p3;
wire   [7:0] xor_ln132_27_fu_2440_p2;
wire   [7:0] select_ln131_27_fu_2446_p3;
wire   [7:0] or_ln214_fu_2466_p2;
wire   [7:0] xor_ln124_56_fu_2476_p2;
wire   [0:0] tmp_107_fu_2486_p3;
wire   [7:0] xor_ln132_21_fu_2494_p2;
wire   [7:0] select_ln131_21_fu_2500_p3;
wire   [6:0] trunc_ln134_21_fu_2508_p1;
wire   [0:0] tmp_108_fu_2512_p3;
wire   [0:0] tmp_109_fu_2528_p3;
wire   [7:0] xor_ln132_22_fu_2536_p2;
wire   [7:0] select_ln131_22_fu_2542_p3;
wire   [7:0] or_ln121_15_fu_2562_p2;
wire   [0:0] tmp_111_fu_2578_p3;
wire   [7:0] xor_ln132_23_fu_2586_p2;
wire   [7:0] select_ln131_23_fu_2592_p3;
wire   [6:0] trunc_ln134_23_fu_2600_p1;
wire   [0:0] tmp_112_fu_2604_p3;
wire   [7:0] x_assign_14_fu_2612_p3;
wire   [0:0] tmp_113_fu_2620_p3;
wire   [7:0] xor_ln132_24_fu_2628_p2;
wire   [7:0] select_ln131_24_fu_2634_p3;
wire   [6:0] trunc_ln134_24_fu_2642_p1;
wire   [0:0] tmp_114_fu_2646_p3;
wire   [7:0] xor_ln124_246_fu_2674_p2;
wire   [7:0] or_ln134_5_fu_2572_p3;
wire   [7:0] xor_ln124_248_fu_2686_p2;
wire   [7:0] or_ln134_6_fu_2654_p3;
wire   [7:0] xor_ln124_249_fu_2691_p2;
wire   [7:0] xor_ln124_247_fu_2680_p2;
wire   [7:0] xor_ln124_250_fu_2703_p2;
wire   [7:0] xor_ln124_252_fu_2715_p2;
wire   [7:0] xor_ln124_253_fu_2719_p2;
wire   [7:0] xor_ln124_251_fu_2709_p2;
wire   [7:0] or_ln134_11_fu_2668_p3;
wire   [7:0] xor_ln124_254_fu_2731_p2;
wire   [7:0] or_ln134_10_fu_2662_p3;
wire   [7:0] xor_ln124_256_fu_2743_p2;
wire   [7:0] xor_ln124_257_fu_2748_p2;
wire   [7:0] xor_ln124_255_fu_2737_p2;
wire   [7:0] xor_ln124_258_fu_2760_p2;
wire   [7:0] xor_ln124_260_fu_2772_p2;
wire   [7:0] xor_ln124_261_fu_2777_p2;
wire   [7:0] xor_ln124_259_fu_2766_p2;
wire   [7:0] or_ln121_16_fu_2793_p2;
wire   [7:0] xor_ln124_61_fu_2788_p2;
wire   [7:0] or_ln121_17_fu_2813_p2;
wire   [7:0] xor_ln124_62_fu_2808_p2;
wire   [0:0] tmp_135_fu_2828_p3;
wire   [7:0] xor_ln132_35_fu_2836_p2;
wire   [7:0] select_ln131_35_fu_2842_p3;
wire   [6:0] trunc_ln134_35_fu_2850_p1;
wire   [0:0] tmp_136_fu_2854_p3;
wire   [0:0] tmp_137_fu_2870_p3;
wire   [7:0] xor_ln132_36_fu_2878_p2;
wire   [7:0] select_ln131_36_fu_2884_p3;
wire   [6:0] trunc_ln134_36_fu_2892_p1;
wire   [0:0] tmp_138_fu_2896_p3;
wire   [7:0] x_assign_22_fu_2904_p3;
wire   [0:0] tmp_139_fu_2912_p3;
wire   [7:0] xor_ln132_37_fu_2920_p2;
wire   [7:0] select_ln131_37_fu_2926_p3;
wire   [7:0] xor_ln124_63_fu_2946_p2;
wire   [0:0] tmp_121_fu_2956_p3;
wire   [7:0] xor_ln132_28_fu_2964_p2;
wire   [7:0] select_ln131_28_fu_2970_p3;
wire   [6:0] trunc_ln134_28_fu_2978_p1;
wire   [0:0] tmp_122_fu_2982_p3;
wire   [7:0] x_assign_16_fu_2990_p3;
wire   [0:0] tmp_123_fu_2998_p3;
wire   [7:0] xor_ln132_29_fu_3006_p2;
wire   [7:0] select_ln131_29_fu_3012_p3;
wire   [6:0] trunc_ln134_29_fu_3020_p1;
wire   [0:0] tmp_124_fu_3024_p3;
wire   [7:0] x_assign_17_fu_3032_p3;
wire   [0:0] tmp_125_fu_3040_p3;
wire   [7:0] xor_ln132_30_fu_3048_p2;
wire   [7:0] select_ln131_30_fu_3054_p3;
wire   [7:0] xor_ln124_64_fu_3079_p2;
wire   [0:0] tmp_127_fu_3089_p3;
wire   [7:0] xor_ln132_31_fu_3097_p2;
wire   [7:0] select_ln131_31_fu_3103_p3;
wire   [6:0] trunc_ln134_31_fu_3111_p1;
wire   [0:0] tmp_128_fu_3115_p3;
wire   [0:0] tmp_141_fu_3131_p3;
wire   [7:0] xor_ln132_38_fu_3139_p2;
wire   [7:0] select_ln131_38_fu_3145_p3;
wire   [6:0] trunc_ln134_38_fu_3153_p1;
wire   [0:0] tmp_142_fu_3157_p3;
wire   [7:0] x_assign_23_fu_3165_p3;
wire   [0:0] tmp_143_fu_3173_p3;
wire   [7:0] xor_ln132_39_fu_3181_p2;
wire   [7:0] select_ln131_39_fu_3187_p3;
wire   [0:0] tmp_129_fu_3207_p3;
wire   [7:0] xor_ln132_32_fu_3215_p2;
wire   [7:0] select_ln131_32_fu_3221_p3;
wire   [6:0] trunc_ln134_32_fu_3229_p1;
wire   [0:0] tmp_130_fu_3233_p3;
wire   [0:0] tmp_131_fu_3249_p3;
wire   [7:0] xor_ln132_33_fu_3257_p2;
wire   [7:0] select_ln131_33_fu_3263_p3;
wire   [6:0] trunc_ln134_33_fu_3271_p1;
wire   [0:0] tmp_132_fu_3275_p3;
wire   [7:0] x_assign_20_fu_3283_p3;
wire   [0:0] tmp_133_fu_3291_p3;
wire   [7:0] xor_ln132_34_fu_3299_p2;
wire   [7:0] select_ln131_34_fu_3305_p3;
wire   [7:0] xor_ln124_266_fu_3337_p2;
wire   [7:0] or_ln134_14_fu_3325_p3;
wire   [7:0] xor_ln124_267_fu_3343_p2;
wire   [7:0] or_ln134_15_fu_3331_p3;
wire   [7:0] xor_ln124_269_fu_3354_p2;
wire   [7:0] xor_ln124_268_fu_3349_p2;
wire   [7:0] xor_ln124_273_fu_3366_p2;
wire   [7:0] xor_ln124_275_fu_3376_p2;
wire   [7:0] xor_ln124_274_fu_3371_p2;
wire   [7:0] xor_ln124_262_fu_3400_p2;
wire   [7:0] or_ln134_13_fu_3394_p3;
wire   [7:0] xor_ln124_264_fu_3411_p2;
wire   [7:0] or_ln134_12_fu_3388_p3;
wire   [7:0] xor_ln124_265_fu_3416_p2;
wire   [7:0] xor_ln124_263_fu_3405_p2;
wire   [7:0] xor_ln124_270_fu_3428_p2;
wire   [7:0] xor_ln124_272_fu_3438_p2;
wire   [7:0] xor_ln124_271_fu_3433_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [23:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 ap_done_reg = 1'b0;
end

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage23),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        idx21_i_fu_202 <= 8'd0;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        idx21_i_fu_202 <= add_ln215_reg_4317;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        r_assign_2_fu_206 <= 4'd9;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        r_assign_2_fu_206 <= add_ln210_fu_3455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln215_reg_4317 <= add_ln215_fu_3450_p2;
        xor_ln124_65_reg_4305 <= xor_ln124_65_fu_3422_p2;
        xor_ln124_67_reg_4311 <= xor_ln124_67_fu_3444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_2_load_10_reg_3667 <= fin_2_q1;
        fin_2_load_11_reg_3674 <= fin_2_q0;
        tmp_80_reg_3657 <= select_ln131_7_fu_1240_p3[32'd7];
        trunc_ln134_7_reg_3652 <= trunc_ln134_7_fu_1248_p1;
        x_assign_s_reg_3646 <= x_assign_s_fu_1218_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_2_load_16_reg_3717 <= fin_2_q1;
        fin_2_load_17_reg_3724 <= fin_2_q0;
        tmp_70_reg_3707 <= select_ln131_2_fu_1336_p3[32'd7];
        trunc_ln134_2_reg_3702 <= trunc_ln134_2_fu_1344_p1;
        x_assign_1_reg_3696 <= x_assign_1_fu_1314_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_2_load_18_reg_3767 <= fin_2_q1;
        fin_2_load_19_reg_3774 <= fin_2_q0;
        tmp_74_reg_3752 <= select_ln131_4_fu_1422_p3[32'd7];
        trunc_ln134_4_reg_3747 <= trunc_ln134_4_fu_1430_p1;
        x_assign_2_reg_3741 <= x_assign_2_fu_1400_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_2_load_1_reg_3540 <= fin_2_q0;
        fin_2_load_reg_3528 <= fin_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_2_load_24_reg_3821 <= fin_2_q1;
        fin_2_load_25_reg_3828 <= fin_2_q0;
        tmp_100_reg_3816 <= select_ln131_17_fu_1580_p3[32'd7];
        trunc_ln134_17_reg_3811 <= trunc_ln134_17_fu_1588_p1;
        x_assign_9_reg_3806 <= x_assign_9_fu_1516_p3;
        z_4_reg_3796 <= clefia_s1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        fin_2_load_26_reg_3881 <= fin_2_q1;
        fin_2_load_27_reg_3888 <= fin_2_q0;
        icmp_ln216_reg_3895 <= icmp_ln216_fu_1746_p2;
        r_assign_2_load_reg_3835 <= r_assign_2_fu_206;
        tmp_86_reg_3865 <= select_ln131_10_fu_1711_p3[32'd7];
        trunc_ln134_10_reg_3860 <= trunc_ln134_10_fu_1719_p1;
        xor_ln180_reg_3870 <= xor_ln180_fu_1731_p2;
        z_5_reg_3850 <= clefia_s0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_2_load_2_reg_3562 <= fin_2_q1;
        fin_2_load_3_reg_3569 <= fin_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        fin_2_load_30_reg_4247 <= fin_2_q1;
        fin_2_load_31_reg_4252 <= fin_2_q0;
        tmp_126_reg_4236 <= select_ln131_30_fu_3054_p3[32'd7];
        trunc_ln134_30_reg_4231 <= trunc_ln134_30_fu_3062_p1;
        xor_ln180_1_reg_4241 <= xor_ln180_1_fu_3074_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_2_load_8_reg_3617 <= fin_2_q1;
        fin_2_load_9_reg_3624 <= fin_2_q0;
        tmp_78_reg_3612 <= select_ln131_6_fu_1154_p3[32'd7];
        trunc_ln134_6_reg_3607 <= trunc_ln134_6_fu_1162_p1;
        x_assign_3_reg_3601 <= x_assign_3_fu_1132_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        idx21_i_load_reg_3483 <= ap_sig_allocacmp_idx21_i_load;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        or_ln134_1_reg_4005 <= or_ln134_1_fu_2164_p3;
        or_ln134_2_reg_4010 <= or_ln134_2_fu_2170_p3;
        or_ln134_3_reg_4015 <= or_ln134_3_fu_2176_p3;
        or_ln134_4_reg_4020 <= or_ln134_4_fu_2182_p3;
        tmp_118_reg_4058 <= select_ln131_26_fu_2318_p3[32'd7];
        trunc_ln134_26_reg_4053 <= trunc_ln134_26_fu_2326_p1;
        x_assign_15_reg_4047 <= x_assign_15_fu_2296_p3;
        xor_ln124_47_reg_4025 <= xor_ln124_47_fu_2209_p2;
        xor_ln124_48_reg_4031 <= xor_ln124_48_fu_2236_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_1002 <= con256_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_1006 <= clefia_s0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_1010 <= clefia_s1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6))) begin
        reg_1014 <= clefia_s0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1018 <= clefia_s1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_1022 <= fin_2_q1;
        reg_1026 <= fin_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_104_reg_3937 <= select_ln131_19_fu_1928_p3[32'd7];
        trunc_ln134_19_reg_3932 <= trunc_ln134_19_fu_1936_p1;
        x_assign_6_reg_3926 <= x_assign_6_fu_1864_p3;
        xor_ln124_29_reg_3909 <= xor_ln124_29_fu_1786_p2;
        xor_ln124_30_reg_3915 <= xor_ln124_30_fu_1814_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_110_reg_4137 <= select_ln131_22_fu_2542_p3[32'd7];
        trunc_ln134_22_reg_4132 <= trunc_ln134_22_fu_2550_p1;
        x_assign_13_reg_4126 <= x_assign_13_fu_2520_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        tmp_120_reg_4101 <= select_ln131_27_fu_2446_p3[32'd7];
        trunc_ln134_27_reg_4096 <= trunc_ln134_27_fu_2454_p1;
        x_assign_12_reg_4090 <= x_assign_12_fu_2424_p3;
        xor_ln124_49_reg_4073 <= xor_ln124_49_fu_2353_p2;
        xor_ln124_50_reg_4079 <= xor_ln124_50_fu_2374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_134_reg_4288 <= select_ln131_34_fu_3305_p3[32'd7];
        trunc_ln134_34_reg_4283 <= trunc_ln134_34_fu_3313_p1;
        x_assign_19_reg_4278 <= x_assign_19_fu_3241_p3;
        xor_ln124_66_reg_4293 <= xor_ln124_66_fu_3360_p2;
        xor_ln124_68_reg_4299 <= xor_ln124_68_fu_3382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_140_reg_4221 <= select_ln131_37_fu_2926_p3[32'd7];
        trunc_ln134_37_reg_4216 <= trunc_ln134_37_fu_2934_p1;
        x_assign_21_reg_4211 <= x_assign_21_fu_2862_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        tmp_144_reg_4273 <= select_ln131_39_fu_3187_p3[32'd7];
        trunc_ln134_39_reg_4268 <= trunc_ln134_39_fu_3195_p1;
        x_assign_18_reg_4262 <= x_assign_18_fu_3123_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tmp_94_reg_3980 <= select_ln131_14_fu_2124_p3[32'd7];
        trunc_ln134_14_reg_3975 <= trunc_ln134_14_fu_2132_p1;
        x_assign_7_reg_3969 <= x_assign_7_fu_2060_p3;
        xor_ln124_33_reg_3957 <= xor_ln124_33_fu_1992_p2;
        xor_ln124_34_reg_3963 <= xor_ln124_34_fu_2020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xor_ln124_57_reg_4157 <= xor_ln124_57_fu_2697_p2;
        xor_ln124_58_reg_4163 <= xor_ln124_58_fu_2725_p2;
        xor_ln124_59_reg_4169 <= xor_ln124_59_fu_2754_p2;
        xor_ln124_60_reg_4175 <= xor_ln124_60_fu_2782_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_condition_exit_pp0_iter0_stage23 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage23 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_idx21_i_load = 8'd0;
    end else begin
        ap_sig_allocacmp_idx21_i_load = idx21_i_fu_202;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        clefia_s0_address0 = zext_ln176_1_fu_3084_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        clefia_s0_address0 = zext_ln174_1_fu_2823_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        clefia_s0_address0 = zext_ln152_1_fu_2385_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        clefia_s0_address0 = zext_ln150_1_fu_2159_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        clefia_s0_address0 = zext_ln176_fu_1825_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        clefia_s0_address0 = zext_ln174_fu_1477_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        clefia_s0_address0 = zext_ln152_fu_1179_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        clefia_s0_address0 = zext_ln150_fu_1073_p1;
    end else begin
        clefia_s0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        clefia_s0_ce0 = 1'b1;
    end else begin
        clefia_s0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        clefia_s1_address0 = zext_ln175_1_fu_2951_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        clefia_s1_address0 = zext_ln173_1_fu_2803_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        clefia_s1_address0 = zext_ln153_1_fu_2481_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        clefia_s1_address0 = zext_ln151_1_fu_2257_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        clefia_s1_address0 = zext_ln175_fu_1608_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        clefia_s1_address0 = zext_ln173_fu_1457_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        clefia_s1_address0 = zext_ln153_fu_1275_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        clefia_s1_address0 = zext_ln151_fu_1093_p1;
    end else begin
        clefia_s1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        clefia_s1_ce0 = 1'b1;
    end else begin
        clefia_s1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        con256_address0 = zext_ln121_53_fu_2818_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        con256_address0 = zext_ln121_52_fu_2798_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        con256_address0 = zext_ln121_51_fu_2567_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        con256_address0 = zext_ln121_50_fu_2471_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        con256_address0 = zext_ln121_49_fu_2252_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        con256_address0 = zext_ln121_48_fu_2154_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        con256_address0 = zext_ln121_47_fu_1953_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        con256_address0 = zext_ln121_46_fu_1741_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        con256_address0 = zext_ln121_45_fu_1472_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        con256_address0 = zext_ln121_44_fu_1452_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        con256_address0 = zext_ln121_43_fu_1361_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        con256_address0 = zext_ln121_42_fu_1265_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        con256_address0 = zext_ln121_41_fu_1088_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        con256_address0 = zext_ln121_39_fu_1068_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        con256_address0 = zext_ln121_38_fu_1053_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        con256_address0 = idx21_i_cast_fu_1043_p1;
    end else begin
        con256_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        con256_ce0 = 1'b1;
    end else begin
        con256_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_address0 = fin_2_addr_4_reg_3781;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        fin_2_address0 = fin_2_addr_6_reg_3731;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        fin_2_address0 = fin_2_addr_12_reg_3681;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        fin_2_address0 = fin_2_addr_14_reg_3631;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        fin_2_address0 = fin_2_addr_20_reg_3581;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        fin_2_address0 = fin_2_addr_22_reg_3547;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        fin_2_address0 = fin_2_addr_28_reg_3518;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        fin_2_address0 = fin_2_addr_30_reg_3503;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)))) begin
        fin_2_address0 = 64'd31;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        fin_2_address0 = 64'd29;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        fin_2_address0 = 64'd23;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        fin_2_address0 = 64'd21;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        fin_2_address0 = 64'd15;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        fin_2_address0 = 64'd13;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        fin_2_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        fin_2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_2_address0 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_2_address0 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_2_address0 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_2_address0 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_2_address0 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_2_address0 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_2_address0 = 64'd1;
    end else begin
        fin_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_address1 = fin_2_addr_5_reg_3786;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        fin_2_address1 = fin_2_addr_7_reg_3736;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        fin_2_address1 = fin_2_addr_13_reg_3686;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        fin_2_address1 = fin_2_addr_15_reg_3636;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        fin_2_address1 = fin_2_addr_21_reg_3586;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        fin_2_address1 = fin_2_addr_23_reg_3552;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        fin_2_address1 = fin_2_addr_29_reg_3523;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        fin_2_address1 = fin_2_addr_31_reg_3508;
    end else if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)))) begin
        fin_2_address1 = 64'd30;
    end else if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)))) begin
        fin_2_address1 = 64'd28;
    end else if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)))) begin
        fin_2_address1 = 64'd22;
    end else if (((1'b1 == ap_CS_fsm_state13) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        fin_2_address1 = 64'd20;
    end else if (((1'b1 == ap_CS_fsm_state12) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)))) begin
        fin_2_address1 = 64'd14;
    end else if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        fin_2_address1 = 64'd12;
    end else if (((1'b1 == ap_CS_fsm_state10) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        fin_2_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        fin_2_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fin_2_address1 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        fin_2_address1 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        fin_2_address1 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        fin_2_address1 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        fin_2_address1 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        fin_2_address1 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        fin_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fin_2_address1 = 64'd0;
    end else begin
        fin_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_2_ce0 = 1'b1;
    end else begin
        fin_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state2) | ((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)) | ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fin_2_ce1 = 1'b1;
    end else begin
        fin_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_d0 = xor_ln124_68_reg_4299;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        fin_2_d0 = xor_ln124_66_reg_4293;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        fin_2_d0 = xor_ln124_60_reg_4175;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        fin_2_d0 = xor_ln124_58_reg_4163;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        fin_2_d0 = xor_ln124_50_reg_4079;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        fin_2_d0 = xor_ln124_48_reg_4031;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        fin_2_d0 = xor_ln124_34_reg_3963;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        fin_2_d0 = xor_ln124_30_reg_3915;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        fin_2_d0 = fin_2_load_3_reg_3569;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        fin_2_d0 = fin_2_load_1_reg_3540;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        fin_2_d0 = fin_2_load_27_reg_3888;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        fin_2_d0 = fin_2_load_25_reg_3828;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        fin_2_d0 = fin_2_load_19_reg_3774;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        fin_2_d0 = fin_2_load_17_reg_3724;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        fin_2_d0 = fin_2_load_11_reg_3674;
    end else if (((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        fin_2_d0 = fin_2_load_9_reg_3624;
    end else begin
        fin_2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_d1 = xor_ln124_67_reg_4311;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        fin_2_d1 = xor_ln124_65_reg_4305;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        fin_2_d1 = xor_ln124_59_reg_4169;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        fin_2_d1 = xor_ln124_57_reg_4157;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20))) begin
        fin_2_d1 = xor_ln124_49_reg_4073;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        fin_2_d1 = xor_ln124_47_reg_4025;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        fin_2_d1 = xor_ln124_33_reg_3957;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        fin_2_d1 = xor_ln124_29_reg_3909;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        fin_2_d1 = fin_2_load_2_reg_3562;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        fin_2_d1 = fin_2_load_reg_3528;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14))) begin
        fin_2_d1 = fin_2_load_26_reg_3881;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        fin_2_d1 = fin_2_load_24_reg_3821;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        fin_2_d1 = fin_2_load_18_reg_3767;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        fin_2_d1 = fin_2_load_16_reg_3717;
    end else if (((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        fin_2_d1 = fin_2_load_10_reg_3667;
    end else if (((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        fin_2_d1 = fin_2_load_8_reg_3617;
    end else begin
        fin_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_10_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_11_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_16_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_17_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_18_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_19_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_1_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_24_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_25_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_26_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_27_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_2_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_3_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_8_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_9_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        fin_2_load_out_ap_vld = 1'b1;
    end else begin
        fin_2_load_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        fin_2_we0 = 1'b1;
    end else begin
        fin_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln216_fu_1746_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state23)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state21)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state19)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state17)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state16)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state15)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state13)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state11)) | ((icmp_ln216_reg_3895 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        fin_2_we1 = 1'b1;
    end else begin
        fin_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_29_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_30_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_33_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_34_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_47_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_47_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_48_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_48_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_49_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_49_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_50_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_50_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_57_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_57_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_58_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_58_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_59_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_59_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_60_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_60_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_65_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_65_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_66_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_66_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_67_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_67_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln216_reg_3895 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        xor_ln124_68_out_ap_vld = 1'b1;
    end else begin
        xor_ln124_68_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln210_fu_3455_p2 = ($signed(r_assign_2_load_reg_3835) + $signed(4'd15));

assign add_ln215_fu_3450_p2 = (idx21_i_load_reg_3483 + 8'd16);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage23;

assign fin_2_addr_12_reg_3681 = 64'd19;

assign fin_2_addr_13_reg_3686 = 64'd18;

assign fin_2_addr_14_reg_3631 = 64'd17;

assign fin_2_addr_15_reg_3636 = 64'd16;

assign fin_2_addr_20_reg_3581 = 64'd11;

assign fin_2_addr_21_reg_3586 = 64'd10;

assign fin_2_addr_22_reg_3547 = 64'd9;

assign fin_2_addr_23_reg_3552 = 64'd8;

assign fin_2_addr_28_reg_3518 = 64'd3;

assign fin_2_addr_29_reg_3523 = 64'd2;

assign fin_2_addr_30_reg_3503 = 64'd1;

assign fin_2_addr_31_reg_3508 = 64'd0;

assign fin_2_addr_4_reg_3781 = 64'd27;

assign fin_2_addr_5_reg_3786 = 64'd26;

assign fin_2_addr_6_reg_3731 = 64'd25;

assign fin_2_addr_7_reg_3736 = 64'd24;

assign fin_2_load_10_out = fin_2_load_10_reg_3667;

assign fin_2_load_11_out = fin_2_load_11_reg_3674;

assign fin_2_load_16_out = fin_2_load_16_reg_3717;

assign fin_2_load_17_out = fin_2_load_17_reg_3724;

assign fin_2_load_18_out = fin_2_load_18_reg_3767;

assign fin_2_load_19_out = fin_2_load_19_reg_3774;

assign fin_2_load_1_out = fin_2_load_1_reg_3540;

assign fin_2_load_24_out = fin_2_load_24_reg_3821;

assign fin_2_load_25_out = fin_2_load_25_reg_3828;

assign fin_2_load_26_out = fin_2_load_26_reg_3881;

assign fin_2_load_27_out = fin_2_load_27_reg_3888;

assign fin_2_load_2_out = fin_2_load_2_reg_3562;

assign fin_2_load_3_out = fin_2_load_3_reg_3569;

assign fin_2_load_8_out = fin_2_load_8_reg_3617;

assign fin_2_load_9_out = fin_2_load_9_reg_3624;

assign fin_2_load_out = fin_2_load_reg_3528;

assign icmp_ln216_fu_1746_p2 = ((r_assign_2_fu_206 == 4'd0) ? 1'b1 : 1'b0);

assign idx21_i_cast_fu_1043_p1 = ap_sig_allocacmp_idx21_i_load;

assign or_ln121_10_fu_1447_p2 = (idx21_i_load_reg_3483 | 8'd6);

assign or_ln121_11_fu_1467_p2 = (idx21_i_load_reg_3483 | 8'd7);

assign or_ln121_12_fu_1948_p2 = (idx21_i_load_reg_3483 | 8'd9);

assign or_ln121_13_fu_2149_p2 = (idx21_i_load_reg_3483 | 8'd10);

assign or_ln121_14_fu_2247_p2 = (idx21_i_load_reg_3483 | 8'd11);

assign or_ln121_15_fu_2562_p2 = (idx21_i_load_reg_3483 | 8'd13);

assign or_ln121_16_fu_2793_p2 = (idx21_i_load_reg_3483 | 8'd14);

assign or_ln121_17_fu_2813_p2 = (idx21_i_load_reg_3483 | 8'd15);

assign or_ln121_6_fu_1048_p2 = (idx21_i_load_reg_3483 | 8'd1);

assign or_ln121_7_fu_1063_p2 = (idx21_i_load_reg_3483 | 8'd2);

assign or_ln121_8_fu_1083_p2 = (idx21_i_load_reg_3483 | 8'd3);

assign or_ln121_9_fu_1356_p2 = (idx21_i_load_reg_3483 | 8'd5);

assign or_ln134_10_fu_2662_p3 = {{trunc_ln134_26_reg_4053}, {tmp_118_reg_4058}};

assign or_ln134_11_fu_2668_p3 = {{trunc_ln134_27_reg_4096}, {tmp_120_reg_4101}};

assign or_ln134_12_fu_3388_p3 = {{trunc_ln134_30_reg_4231}, {tmp_126_reg_4236}};

assign or_ln134_13_fu_3394_p3 = {{trunc_ln134_34_reg_4283}, {tmp_134_reg_4288}};

assign or_ln134_14_fu_3325_p3 = {{trunc_ln134_37_reg_4216}, {tmp_140_reg_4221}};

assign or_ln134_15_fu_3331_p3 = {{trunc_ln134_39_reg_4268}, {tmp_144_reg_4273}};

assign or_ln134_1_fu_2164_p3 = {{trunc_ln134_10_reg_3860}, {tmp_86_reg_3865}};

assign or_ln134_2_fu_2170_p3 = {{trunc_ln134_14_reg_3975}, {tmp_94_reg_3980}};

assign or_ln134_3_fu_2176_p3 = {{trunc_ln134_17_reg_3811}, {tmp_100_reg_3816}};

assign or_ln134_4_fu_2182_p3 = {{trunc_ln134_19_reg_3932}, {tmp_104_reg_3937}};

assign or_ln134_5_fu_2572_p3 = {{trunc_ln134_22_reg_4132}, {tmp_110_reg_4137}};

assign or_ln134_6_fu_2654_p3 = {{trunc_ln134_24_fu_2642_p1}, {tmp_114_fu_2646_p3}};

assign or_ln134_7_fu_1758_p3 = {{trunc_ln134_4_reg_3747}, {tmp_74_reg_3752}};

assign or_ln134_8_fu_1958_p3 = {{trunc_ln134_6_reg_3607}, {tmp_78_reg_3612}};

assign or_ln134_9_fu_1752_p3 = {{trunc_ln134_2_reg_3702}, {tmp_70_reg_3707}};

assign or_ln134_s_fu_1964_p3 = {{trunc_ln134_7_reg_3652}, {tmp_80_reg_3657}};

assign or_ln212_fu_1260_p2 = (idx21_i_load_reg_3483 | 8'd4);

assign or_ln213_fu_1736_p2 = (idx21_i_load_reg_3483 | 8'd8);

assign or_ln214_fu_2466_p2 = (idx21_i_load_reg_3483 | 8'd12);

assign select_ln131_10_fu_1711_p3 = ((tmp_85_fu_1697_p3[0:0] == 1'b1) ? xor_ln132_10_fu_1705_p2 : x_assign_5_fu_1689_p3);

assign select_ln131_11_fu_1844_p3 = ((tmp_87_fu_1830_p3[0:0] == 1'b1) ? xor_ln132_11_fu_1838_p2 : clefia_s1_q0);

assign select_ln131_12_fu_2040_p3 = ((tmp_89_fu_2026_p3[0:0] == 1'b1) ? xor_ln132_12_fu_2034_p2 : clefia_s0_q0);

assign select_ln131_13_fu_2082_p3 = ((tmp_91_fu_2068_p3[0:0] == 1'b1) ? xor_ln132_13_fu_2076_p2 : x_assign_7_fu_2060_p3);

assign select_ln131_14_fu_2124_p3 = ((tmp_93_fu_2110_p3[0:0] == 1'b1) ? xor_ln132_14_fu_2118_p2 : x_assign_8_fu_2102_p3);

assign select_ln131_15_fu_1496_p3 = ((tmp_95_fu_1482_p3[0:0] == 1'b1) ? xor_ln132_15_fu_1490_p2 : clefia_s1_q0);

assign select_ln131_16_fu_1538_p3 = ((tmp_97_fu_1524_p3[0:0] == 1'b1) ? xor_ln132_16_fu_1532_p2 : x_assign_9_fu_1516_p3);

assign select_ln131_17_fu_1580_p3 = ((tmp_99_fu_1566_p3[0:0] == 1'b1) ? xor_ln132_17_fu_1574_p2 : x_assign_10_fu_1558_p3);

assign select_ln131_18_fu_1886_p3 = ((tmp_101_fu_1872_p3[0:0] == 1'b1) ? xor_ln132_18_fu_1880_p2 : x_assign_6_fu_1864_p3);

assign select_ln131_19_fu_1928_p3 = ((tmp_103_fu_1914_p3[0:0] == 1'b1) ? xor_ln132_19_fu_1922_p2 : x_assign_11_fu_1906_p3);

assign select_ln131_1_fu_1294_p3 = ((tmp_67_fu_1280_p3[0:0] == 1'b1) ? xor_ln132_1_fu_1288_p2 : clefia_s0_q0);

assign select_ln131_20_fu_2404_p3 = ((tmp_105_fu_2390_p3[0:0] == 1'b1) ? xor_ln132_20_fu_2398_p2 : clefia_s1_q0);

assign select_ln131_21_fu_2500_p3 = ((tmp_107_fu_2486_p3[0:0] == 1'b1) ? xor_ln132_21_fu_2494_p2 : clefia_s0_q0);

assign select_ln131_22_fu_2542_p3 = ((tmp_109_fu_2528_p3[0:0] == 1'b1) ? xor_ln132_22_fu_2536_p2 : x_assign_13_fu_2520_p3);

assign select_ln131_23_fu_2592_p3 = ((tmp_111_fu_2578_p3[0:0] == 1'b1) ? xor_ln132_23_fu_2586_p2 : clefia_s1_q0);

assign select_ln131_24_fu_2634_p3 = ((tmp_113_fu_2620_p3[0:0] == 1'b1) ? xor_ln132_24_fu_2628_p2 : x_assign_14_fu_2612_p3);

assign select_ln131_25_fu_2276_p3 = ((tmp_115_fu_2262_p3[0:0] == 1'b1) ? xor_ln132_25_fu_2270_p2 : clefia_s0_q0);

assign select_ln131_26_fu_2318_p3 = ((tmp_117_fu_2304_p3[0:0] == 1'b1) ? xor_ln132_26_fu_2312_p2 : x_assign_15_fu_2296_p3);

assign select_ln131_27_fu_2446_p3 = ((tmp_119_fu_2432_p3[0:0] == 1'b1) ? xor_ln132_27_fu_2440_p2 : x_assign_12_fu_2424_p3);

assign select_ln131_28_fu_2970_p3 = ((tmp_121_fu_2956_p3[0:0] == 1'b1) ? xor_ln132_28_fu_2964_p2 : clefia_s0_q0);

assign select_ln131_29_fu_3012_p3 = ((tmp_123_fu_2998_p3[0:0] == 1'b1) ? xor_ln132_29_fu_3006_p2 : x_assign_16_fu_2990_p3);

assign select_ln131_2_fu_1336_p3 = ((tmp_69_fu_1322_p3[0:0] == 1'b1) ? xor_ln132_2_fu_1330_p2 : x_assign_1_fu_1314_p3);

assign select_ln131_30_fu_3054_p3 = ((tmp_125_fu_3040_p3[0:0] == 1'b1) ? xor_ln132_30_fu_3048_p2 : x_assign_17_fu_3032_p3);

assign select_ln131_31_fu_3103_p3 = ((tmp_127_fu_3089_p3[0:0] == 1'b1) ? xor_ln132_31_fu_3097_p2 : clefia_s1_q0);

assign select_ln131_32_fu_3221_p3 = ((tmp_129_fu_3207_p3[0:0] == 1'b1) ? xor_ln132_32_fu_3215_p2 : clefia_s0_q0);

assign select_ln131_33_fu_3263_p3 = ((tmp_131_fu_3249_p3[0:0] == 1'b1) ? xor_ln132_33_fu_3257_p2 : x_assign_19_fu_3241_p3);

assign select_ln131_34_fu_3305_p3 = ((tmp_133_fu_3291_p3[0:0] == 1'b1) ? xor_ln132_34_fu_3299_p2 : x_assign_20_fu_3283_p3);

assign select_ln131_35_fu_2842_p3 = ((tmp_135_fu_2828_p3[0:0] == 1'b1) ? xor_ln132_35_fu_2836_p2 : clefia_s1_q0);

assign select_ln131_36_fu_2884_p3 = ((tmp_137_fu_2870_p3[0:0] == 1'b1) ? xor_ln132_36_fu_2878_p2 : x_assign_21_fu_2862_p3);

assign select_ln131_37_fu_2926_p3 = ((tmp_139_fu_2912_p3[0:0] == 1'b1) ? xor_ln132_37_fu_2920_p2 : x_assign_22_fu_2904_p3);

assign select_ln131_38_fu_3145_p3 = ((tmp_141_fu_3131_p3[0:0] == 1'b1) ? xor_ln132_38_fu_3139_p2 : x_assign_18_fu_3123_p3);

assign select_ln131_39_fu_3187_p3 = ((tmp_143_fu_3173_p3[0:0] == 1'b1) ? xor_ln132_39_fu_3181_p2 : x_assign_23_fu_3165_p3);

assign select_ln131_3_fu_1380_p3 = ((tmp_71_fu_1366_p3[0:0] == 1'b1) ? xor_ln132_3_fu_1374_p2 : clefia_s1_q0);

assign select_ln131_4_fu_1422_p3 = ((tmp_73_fu_1408_p3[0:0] == 1'b1) ? xor_ln132_4_fu_1416_p2 : x_assign_2_fu_1400_p3);

assign select_ln131_5_fu_1112_p3 = ((tmp_75_fu_1098_p3[0:0] == 1'b1) ? xor_ln132_5_fu_1106_p2 : clefia_s0_q0);

assign select_ln131_6_fu_1154_p3 = ((tmp_77_fu_1140_p3[0:0] == 1'b1) ? xor_ln132_6_fu_1148_p2 : x_assign_3_fu_1132_p3);

assign select_ln131_7_fu_1240_p3 = ((tmp_79_fu_1226_p3[0:0] == 1'b1) ? xor_ln132_7_fu_1234_p2 : x_assign_s_fu_1218_p3);

assign select_ln131_8_fu_1627_p3 = ((tmp_81_fu_1613_p3[0:0] == 1'b1) ? xor_ln132_8_fu_1621_p2 : clefia_s0_q0);

assign select_ln131_9_fu_1669_p3 = ((tmp_83_fu_1655_p3[0:0] == 1'b1) ? xor_ln132_9_fu_1663_p2 : x_assign_4_fu_1647_p3);

assign select_ln131_fu_1198_p3 = ((tmp_fu_1184_p3[0:0] == 1'b1) ? xor_ln132_fu_1192_p2 : clefia_s1_q0);

assign tmp_101_fu_1872_p3 = select_ln131_11_fu_1844_p3[32'd6];

assign tmp_102_fu_1898_p3 = select_ln131_18_fu_1886_p3[32'd7];

assign tmp_103_fu_1914_p3 = select_ln131_18_fu_1886_p3[32'd6];

assign tmp_105_fu_2390_p3 = clefia_s1_q0[32'd7];

assign tmp_106_fu_2416_p3 = select_ln131_20_fu_2404_p3[32'd7];

assign tmp_107_fu_2486_p3 = clefia_s0_q0[32'd7];

assign tmp_108_fu_2512_p3 = select_ln131_21_fu_2500_p3[32'd7];

assign tmp_109_fu_2528_p3 = select_ln131_21_fu_2500_p3[32'd6];

assign tmp_111_fu_2578_p3 = clefia_s1_q0[32'd7];

assign tmp_112_fu_2604_p3 = select_ln131_23_fu_2592_p3[32'd7];

assign tmp_113_fu_2620_p3 = select_ln131_23_fu_2592_p3[32'd6];

assign tmp_114_fu_2646_p3 = select_ln131_24_fu_2634_p3[32'd7];

assign tmp_115_fu_2262_p3 = clefia_s0_q0[32'd7];

assign tmp_116_fu_2288_p3 = select_ln131_25_fu_2276_p3[32'd7];

assign tmp_117_fu_2304_p3 = select_ln131_25_fu_2276_p3[32'd6];

assign tmp_119_fu_2432_p3 = select_ln131_20_fu_2404_p3[32'd6];

assign tmp_121_fu_2956_p3 = clefia_s0_q0[32'd7];

assign tmp_122_fu_2982_p3 = select_ln131_28_fu_2970_p3[32'd7];

assign tmp_123_fu_2998_p3 = select_ln131_28_fu_2970_p3[32'd6];

assign tmp_124_fu_3024_p3 = select_ln131_29_fu_3012_p3[32'd7];

assign tmp_125_fu_3040_p3 = select_ln131_29_fu_3012_p3[32'd6];

assign tmp_127_fu_3089_p3 = clefia_s1_q0[32'd7];

assign tmp_128_fu_3115_p3 = select_ln131_31_fu_3103_p3[32'd7];

assign tmp_129_fu_3207_p3 = clefia_s0_q0[32'd7];

assign tmp_130_fu_3233_p3 = select_ln131_32_fu_3221_p3[32'd7];

assign tmp_131_fu_3249_p3 = select_ln131_32_fu_3221_p3[32'd6];

assign tmp_132_fu_3275_p3 = select_ln131_33_fu_3263_p3[32'd7];

assign tmp_133_fu_3291_p3 = select_ln131_33_fu_3263_p3[32'd6];

assign tmp_135_fu_2828_p3 = clefia_s1_q0[32'd7];

assign tmp_136_fu_2854_p3 = select_ln131_35_fu_2842_p3[32'd7];

assign tmp_137_fu_2870_p3 = select_ln131_35_fu_2842_p3[32'd6];

assign tmp_138_fu_2896_p3 = select_ln131_36_fu_2884_p3[32'd7];

assign tmp_139_fu_2912_p3 = select_ln131_36_fu_2884_p3[32'd6];

assign tmp_141_fu_3131_p3 = select_ln131_31_fu_3103_p3[32'd6];

assign tmp_142_fu_3157_p3 = select_ln131_38_fu_3145_p3[32'd7];

assign tmp_143_fu_3173_p3 = select_ln131_38_fu_3145_p3[32'd6];

assign tmp_66_fu_1210_p3 = select_ln131_fu_1198_p3[32'd7];

assign tmp_67_fu_1280_p3 = clefia_s0_q0[32'd7];

assign tmp_68_fu_1306_p3 = select_ln131_1_fu_1294_p3[32'd7];

assign tmp_69_fu_1322_p3 = select_ln131_1_fu_1294_p3[32'd6];

assign tmp_71_fu_1366_p3 = clefia_s1_q0[32'd7];

assign tmp_72_fu_1392_p3 = select_ln131_3_fu_1380_p3[32'd7];

assign tmp_73_fu_1408_p3 = select_ln131_3_fu_1380_p3[32'd6];

assign tmp_75_fu_1098_p3 = clefia_s0_q0[32'd7];

assign tmp_76_fu_1124_p3 = select_ln131_5_fu_1112_p3[32'd7];

assign tmp_77_fu_1140_p3 = select_ln131_5_fu_1112_p3[32'd6];

assign tmp_79_fu_1226_p3 = select_ln131_fu_1198_p3[32'd6];

assign tmp_81_fu_1613_p3 = clefia_s0_q0[32'd7];

assign tmp_82_fu_1639_p3 = select_ln131_8_fu_1627_p3[32'd7];

assign tmp_83_fu_1655_p3 = select_ln131_8_fu_1627_p3[32'd6];

assign tmp_84_fu_1681_p3 = select_ln131_9_fu_1669_p3[32'd7];

assign tmp_85_fu_1697_p3 = select_ln131_9_fu_1669_p3[32'd6];

assign tmp_87_fu_1830_p3 = clefia_s1_q0[32'd7];

assign tmp_88_fu_1856_p3 = select_ln131_11_fu_1844_p3[32'd7];

assign tmp_89_fu_2026_p3 = clefia_s0_q0[32'd7];

assign tmp_90_fu_2052_p3 = select_ln131_12_fu_2040_p3[32'd7];

assign tmp_91_fu_2068_p3 = select_ln131_12_fu_2040_p3[32'd6];

assign tmp_92_fu_2094_p3 = select_ln131_13_fu_2082_p3[32'd7];

assign tmp_93_fu_2110_p3 = select_ln131_13_fu_2082_p3[32'd6];

assign tmp_95_fu_1482_p3 = clefia_s1_q0[32'd7];

assign tmp_96_fu_1508_p3 = select_ln131_15_fu_1496_p3[32'd7];

assign tmp_97_fu_1524_p3 = select_ln131_15_fu_1496_p3[32'd6];

assign tmp_98_fu_1550_p3 = select_ln131_16_fu_1538_p3[32'd7];

assign tmp_99_fu_1566_p3 = select_ln131_16_fu_1538_p3[32'd6];

assign tmp_fu_1184_p3 = clefia_s1_q0[32'd7];

assign trunc_ln134_10_fu_1719_p1 = select_ln131_10_fu_1711_p3[6:0];

assign trunc_ln134_11_fu_1852_p1 = select_ln131_11_fu_1844_p3[6:0];

assign trunc_ln134_12_fu_2048_p1 = select_ln131_12_fu_2040_p3[6:0];

assign trunc_ln134_13_fu_2090_p1 = select_ln131_13_fu_2082_p3[6:0];

assign trunc_ln134_14_fu_2132_p1 = select_ln131_14_fu_2124_p3[6:0];

assign trunc_ln134_15_fu_1504_p1 = select_ln131_15_fu_1496_p3[6:0];

assign trunc_ln134_16_fu_1546_p1 = select_ln131_16_fu_1538_p3[6:0];

assign trunc_ln134_17_fu_1588_p1 = select_ln131_17_fu_1580_p3[6:0];

assign trunc_ln134_18_fu_1894_p1 = select_ln131_18_fu_1886_p3[6:0];

assign trunc_ln134_19_fu_1936_p1 = select_ln131_19_fu_1928_p3[6:0];

assign trunc_ln134_1_fu_1302_p1 = select_ln131_1_fu_1294_p3[6:0];

assign trunc_ln134_20_fu_2412_p1 = select_ln131_20_fu_2404_p3[6:0];

assign trunc_ln134_21_fu_2508_p1 = select_ln131_21_fu_2500_p3[6:0];

assign trunc_ln134_22_fu_2550_p1 = select_ln131_22_fu_2542_p3[6:0];

assign trunc_ln134_23_fu_2600_p1 = select_ln131_23_fu_2592_p3[6:0];

assign trunc_ln134_24_fu_2642_p1 = select_ln131_24_fu_2634_p3[6:0];

assign trunc_ln134_25_fu_2284_p1 = select_ln131_25_fu_2276_p3[6:0];

assign trunc_ln134_26_fu_2326_p1 = select_ln131_26_fu_2318_p3[6:0];

assign trunc_ln134_27_fu_2454_p1 = select_ln131_27_fu_2446_p3[6:0];

assign trunc_ln134_28_fu_2978_p1 = select_ln131_28_fu_2970_p3[6:0];

assign trunc_ln134_29_fu_3020_p1 = select_ln131_29_fu_3012_p3[6:0];

assign trunc_ln134_2_fu_1344_p1 = select_ln131_2_fu_1336_p3[6:0];

assign trunc_ln134_30_fu_3062_p1 = select_ln131_30_fu_3054_p3[6:0];

assign trunc_ln134_31_fu_3111_p1 = select_ln131_31_fu_3103_p3[6:0];

assign trunc_ln134_32_fu_3229_p1 = select_ln131_32_fu_3221_p3[6:0];

assign trunc_ln134_33_fu_3271_p1 = select_ln131_33_fu_3263_p3[6:0];

assign trunc_ln134_34_fu_3313_p1 = select_ln131_34_fu_3305_p3[6:0];

assign trunc_ln134_35_fu_2850_p1 = select_ln131_35_fu_2842_p3[6:0];

assign trunc_ln134_36_fu_2892_p1 = select_ln131_36_fu_2884_p3[6:0];

assign trunc_ln134_37_fu_2934_p1 = select_ln131_37_fu_2926_p3[6:0];

assign trunc_ln134_38_fu_3153_p1 = select_ln131_38_fu_3145_p3[6:0];

assign trunc_ln134_39_fu_3195_p1 = select_ln131_39_fu_3187_p3[6:0];

assign trunc_ln134_3_fu_1388_p1 = select_ln131_3_fu_1380_p3[6:0];

assign trunc_ln134_4_fu_1430_p1 = select_ln131_4_fu_1422_p3[6:0];

assign trunc_ln134_5_fu_1120_p1 = select_ln131_5_fu_1112_p3[6:0];

assign trunc_ln134_6_fu_1162_p1 = select_ln131_6_fu_1154_p3[6:0];

assign trunc_ln134_7_fu_1248_p1 = select_ln131_7_fu_1240_p3[6:0];

assign trunc_ln134_8_fu_1635_p1 = select_ln131_8_fu_1627_p3[6:0];

assign trunc_ln134_9_fu_1677_p1 = select_ln131_9_fu_1669_p3[6:0];

assign trunc_ln134_fu_1206_p1 = select_ln131_fu_1198_p3[6:0];

assign x_assign_10_fu_1558_p3 = {{trunc_ln134_16_fu_1546_p1}, {tmp_98_fu_1550_p3}};

assign x_assign_11_fu_1906_p3 = {{trunc_ln134_18_fu_1894_p1}, {tmp_102_fu_1898_p3}};

assign x_assign_12_fu_2424_p3 = {{trunc_ln134_20_fu_2412_p1}, {tmp_106_fu_2416_p3}};

assign x_assign_13_fu_2520_p3 = {{trunc_ln134_21_fu_2508_p1}, {tmp_108_fu_2512_p3}};

assign x_assign_14_fu_2612_p3 = {{trunc_ln134_23_fu_2600_p1}, {tmp_112_fu_2604_p3}};

assign x_assign_15_fu_2296_p3 = {{trunc_ln134_25_fu_2284_p1}, {tmp_116_fu_2288_p3}};

assign x_assign_16_fu_2990_p3 = {{trunc_ln134_28_fu_2978_p1}, {tmp_122_fu_2982_p3}};

assign x_assign_17_fu_3032_p3 = {{trunc_ln134_29_fu_3020_p1}, {tmp_124_fu_3024_p3}};

assign x_assign_18_fu_3123_p3 = {{trunc_ln134_31_fu_3111_p1}, {tmp_128_fu_3115_p3}};

assign x_assign_19_fu_3241_p3 = {{trunc_ln134_32_fu_3229_p1}, {tmp_130_fu_3233_p3}};

assign x_assign_1_fu_1314_p3 = {{trunc_ln134_1_fu_1302_p1}, {tmp_68_fu_1306_p3}};

assign x_assign_20_fu_3283_p3 = {{trunc_ln134_33_fu_3271_p1}, {tmp_132_fu_3275_p3}};

assign x_assign_21_fu_2862_p3 = {{trunc_ln134_35_fu_2850_p1}, {tmp_136_fu_2854_p3}};

assign x_assign_22_fu_2904_p3 = {{trunc_ln134_36_fu_2892_p1}, {tmp_138_fu_2896_p3}};

assign x_assign_23_fu_3165_p3 = {{trunc_ln134_38_fu_3153_p1}, {tmp_142_fu_3157_p3}};

assign x_assign_2_fu_1400_p3 = {{trunc_ln134_3_fu_1388_p1}, {tmp_72_fu_1392_p3}};

assign x_assign_3_fu_1132_p3 = {{trunc_ln134_5_fu_1120_p1}, {tmp_76_fu_1124_p3}};

assign x_assign_4_fu_1647_p3 = {{trunc_ln134_8_fu_1635_p1}, {tmp_82_fu_1639_p3}};

assign x_assign_5_fu_1689_p3 = {{trunc_ln134_9_fu_1677_p1}, {tmp_84_fu_1681_p3}};

assign x_assign_6_fu_1864_p3 = {{trunc_ln134_11_fu_1852_p1}, {tmp_88_fu_1856_p3}};

assign x_assign_7_fu_2060_p3 = {{trunc_ln134_12_fu_2048_p1}, {tmp_90_fu_2052_p3}};

assign x_assign_8_fu_2102_p3 = {{trunc_ln134_13_fu_2090_p1}, {tmp_92_fu_2094_p3}};

assign x_assign_9_fu_1516_p3 = {{trunc_ln134_15_fu_1504_p1}, {tmp_96_fu_1508_p3}};

assign x_assign_s_fu_1218_p3 = {{trunc_ln134_fu_1206_p1}, {tmp_66_fu_1210_p3}};

assign xor_ln124_16_fu_1058_p2 = (reg_1002 ^ fin_2_load_reg_3528);

assign xor_ln124_17_fu_1078_p2 = (reg_1002 ^ fin_2_load_1_reg_3540);

assign xor_ln124_19_fu_1174_p2 = (reg_1002 ^ fin_2_load_2_reg_3562);

assign xor_ln124_20_fu_1270_p2 = (reg_1002 ^ fin_2_load_3_reg_3569);

assign xor_ln124_217_fu_1769_p2 = (xor_ln124_fu_1764_p2 ^ reg_1006);

assign xor_ln124_218_fu_1775_p2 = (x_assign_s_reg_3646 ^ or_ln134_9_fu_1752_p3);

assign xor_ln124_219_fu_1780_p2 = (xor_ln124_218_fu_1775_p2 ^ or_ln134_7_fu_1758_p3);

assign xor_ln124_220_fu_1792_p2 = (or_ln134_9_fu_1752_p3 ^ fin_2_q0);

assign xor_ln124_221_fu_1798_p2 = (xor_ln124_220_fu_1792_p2 ^ reg_1010);

assign xor_ln124_222_fu_1804_p2 = (x_assign_3_reg_3601 ^ x_assign_1_reg_3696);

assign xor_ln124_223_fu_1808_p2 = (xor_ln124_222_fu_1804_p2 ^ or_ln134_7_fu_1758_p3);

assign xor_ln124_224_fu_1970_p2 = (or_ln134_s_fu_1964_p3 ^ fin_2_q1);

assign xor_ln124_225_fu_1976_p2 = (xor_ln124_224_fu_1970_p2 ^ reg_1014);

assign xor_ln124_226_fu_1982_p2 = (x_assign_s_reg_3646 ^ or_ln134_8_fu_1958_p3);

assign xor_ln124_227_fu_1987_p2 = (xor_ln124_226_fu_1982_p2 ^ x_assign_2_reg_3741);

assign xor_ln124_228_fu_1998_p2 = (or_ln134_s_fu_1964_p3 ^ fin_2_q0);

assign xor_ln124_229_fu_2004_p2 = (xor_ln124_228_fu_1998_p2 ^ reg_1018);

assign xor_ln124_230_fu_2010_p2 = (x_assign_3_reg_3601 ^ or_ln134_8_fu_1958_p3);

assign xor_ln124_231_fu_2015_p2 = (xor_ln124_230_fu_2010_p2 ^ x_assign_1_reg_3696);

assign xor_ln124_232_fu_2188_p2 = (x_assign_7_reg_3969 ^ fin_2_q1);

assign xor_ln124_233_fu_2193_p2 = (z_4_reg_3796 ^ xor_ln124_232_fu_2188_p2);

assign xor_ln124_234_fu_2198_p2 = (x_assign_6_reg_3926 ^ or_ln134_2_fu_2170_p3);

assign xor_ln124_235_fu_2203_p2 = (xor_ln124_234_fu_2198_p2 ^ or_ln134_1_fu_2164_p3);

assign xor_ln124_236_fu_2215_p2 = (x_assign_7_reg_3969 ^ fin_2_q0);

assign xor_ln124_237_fu_2220_p2 = (z_5_reg_3850 ^ xor_ln124_236_fu_2215_p2);

assign xor_ln124_238_fu_2225_p2 = (x_assign_6_reg_3926 ^ or_ln134_3_fu_2176_p3);

assign xor_ln124_239_fu_2230_p2 = (xor_ln124_237_fu_2220_p2 ^ or_ln134_4_fu_2182_p3);

assign xor_ln124_240_fu_2338_p2 = (reg_1010 ^ fin_2_q1);

assign xor_ln124_241_fu_2344_p2 = (xor_ln180_reg_3870 ^ or_ln134_2_reg_4010);

assign xor_ln124_242_fu_2348_p2 = (xor_ln124_240_fu_2338_p2 ^ or_ln134_1_reg_4005);

assign xor_ln124_243_fu_2359_p2 = (reg_1006 ^ fin_2_q0);

assign xor_ln124_244_fu_2365_p2 = (xor_ln180_reg_3870 ^ or_ln134_4_reg_4020);

assign xor_ln124_245_fu_2369_p2 = (xor_ln124_243_fu_2359_p2 ^ or_ln134_3_reg_4015);

assign xor_ln124_246_fu_2674_p2 = (x_assign_14_fu_2612_p3 ^ reg_1022);

assign xor_ln124_247_fu_2680_p2 = (xor_ln124_246_fu_2674_p2 ^ reg_1014);

assign xor_ln124_248_fu_2686_p2 = (x_assign_12_reg_4090 ^ or_ln134_5_fu_2572_p3);

assign xor_ln124_249_fu_2691_p2 = (xor_ln124_248_fu_2686_p2 ^ or_ln134_6_fu_2654_p3);

assign xor_ln124_250_fu_2703_p2 = (reg_1026 ^ or_ln134_5_fu_2572_p3);

assign xor_ln124_251_fu_2709_p2 = (xor_ln124_250_fu_2703_p2 ^ reg_1010);

assign xor_ln124_252_fu_2715_p2 = (x_assign_15_reg_4047 ^ x_assign_13_reg_4126);

assign xor_ln124_253_fu_2719_p2 = (xor_ln124_252_fu_2715_p2 ^ or_ln134_6_fu_2654_p3);

assign xor_ln124_254_fu_2731_p2 = (or_ln134_11_fu_2668_p3 ^ fin_2_q1);

assign xor_ln124_255_fu_2737_p2 = (xor_ln124_254_fu_2731_p2 ^ reg_1006);

assign xor_ln124_256_fu_2743_p2 = (x_assign_12_reg_4090 ^ or_ln134_10_fu_2662_p3);

assign xor_ln124_257_fu_2748_p2 = (xor_ln124_256_fu_2743_p2 ^ x_assign_14_fu_2612_p3);

assign xor_ln124_258_fu_2760_p2 = (or_ln134_11_fu_2668_p3 ^ fin_2_q0);

assign xor_ln124_259_fu_2766_p2 = (xor_ln124_258_fu_2760_p2 ^ clefia_s1_q0);

assign xor_ln124_260_fu_2772_p2 = (x_assign_15_reg_4047 ^ or_ln134_10_fu_2662_p3);

assign xor_ln124_261_fu_2777_p2 = (xor_ln124_260_fu_2772_p2 ^ x_assign_13_reg_4126);

assign xor_ln124_262_fu_3400_p2 = (x_assign_19_reg_4278 ^ reg_1022);

assign xor_ln124_263_fu_3405_p2 = (xor_ln124_262_fu_3400_p2 ^ reg_1010);

assign xor_ln124_264_fu_3411_p2 = (x_assign_18_reg_4262 ^ or_ln134_13_fu_3394_p3);

assign xor_ln124_265_fu_3416_p2 = (xor_ln124_264_fu_3411_p2 ^ or_ln134_12_fu_3388_p3);

assign xor_ln124_266_fu_3337_p2 = (x_assign_19_fu_3241_p3 ^ reg_1026);

assign xor_ln124_267_fu_3343_p2 = (xor_ln124_266_fu_3337_p2 ^ reg_1006);

assign xor_ln124_268_fu_3349_p2 = (x_assign_18_reg_4262 ^ or_ln134_14_fu_3325_p3);

assign xor_ln124_269_fu_3354_p2 = (xor_ln124_267_fu_3343_p2 ^ or_ln134_15_fu_3331_p3);

assign xor_ln124_270_fu_3428_p2 = (reg_1018 ^ fin_2_load_30_reg_4247);

assign xor_ln124_271_fu_3433_p2 = (xor_ln180_1_reg_4241 ^ or_ln134_13_fu_3394_p3);

assign xor_ln124_272_fu_3438_p2 = (xor_ln124_270_fu_3428_p2 ^ or_ln134_12_fu_3388_p3);

assign xor_ln124_273_fu_3366_p2 = (fin_2_load_31_reg_4252 ^ clefia_s0_q0);

assign xor_ln124_274_fu_3371_p2 = (xor_ln180_1_reg_4241 ^ or_ln134_15_fu_3331_p3);

assign xor_ln124_275_fu_3376_p2 = (xor_ln124_273_fu_3366_p2 ^ or_ln134_14_fu_3325_p3);

assign xor_ln124_29_fu_1786_p2 = (xor_ln124_219_fu_1780_p2 ^ xor_ln124_217_fu_1769_p2);

assign xor_ln124_29_out = xor_ln124_29_reg_3909;

assign xor_ln124_30_fu_1814_p2 = (xor_ln124_223_fu_1808_p2 ^ xor_ln124_221_fu_1798_p2);

assign xor_ln124_30_out = xor_ln124_30_reg_3915;

assign xor_ln124_33_fu_1992_p2 = (xor_ln124_227_fu_1987_p2 ^ xor_ln124_225_fu_1976_p2);

assign xor_ln124_33_out = xor_ln124_33_reg_3957;

assign xor_ln124_34_fu_2020_p2 = (xor_ln124_231_fu_2015_p2 ^ xor_ln124_229_fu_2004_p2);

assign xor_ln124_34_out = xor_ln124_34_reg_3963;

assign xor_ln124_35_fu_1442_p2 = (reg_1002 ^ fin_2_load_8_reg_3617);

assign xor_ln124_36_fu_1462_p2 = (reg_1002 ^ fin_2_load_9_reg_3624);

assign xor_ln124_37_fu_1603_p2 = (reg_1002 ^ fin_2_load_10_reg_3667);

assign xor_ln124_38_fu_1820_p2 = (reg_1002 ^ fin_2_load_11_reg_3674);

assign xor_ln124_47_fu_2209_p2 = (xor_ln124_235_fu_2203_p2 ^ xor_ln124_233_fu_2193_p2);

assign xor_ln124_47_out = xor_ln124_47_reg_4025;

assign xor_ln124_48_fu_2236_p2 = (xor_ln124_239_fu_2230_p2 ^ xor_ln124_238_fu_2225_p2);

assign xor_ln124_48_out = xor_ln124_48_reg_4031;

assign xor_ln124_49_fu_2353_p2 = (xor_ln124_242_fu_2348_p2 ^ xor_ln124_241_fu_2344_p2);

assign xor_ln124_49_out = xor_ln124_49_reg_4073;

assign xor_ln124_50_fu_2374_p2 = (xor_ln124_245_fu_2369_p2 ^ xor_ln124_244_fu_2365_p2);

assign xor_ln124_50_out = xor_ln124_50_reg_4079;

assign xor_ln124_53_fu_2144_p2 = (reg_1002 ^ fin_2_load_16_reg_3717);

assign xor_ln124_54_fu_2242_p2 = (reg_1002 ^ fin_2_load_17_reg_3724);

assign xor_ln124_55_fu_2380_p2 = (reg_1002 ^ fin_2_load_18_reg_3767);

assign xor_ln124_56_fu_2476_p2 = (reg_1002 ^ fin_2_load_19_reg_3774);

assign xor_ln124_57_fu_2697_p2 = (xor_ln124_249_fu_2691_p2 ^ xor_ln124_247_fu_2680_p2);

assign xor_ln124_57_out = xor_ln124_57_reg_4157;

assign xor_ln124_58_fu_2725_p2 = (xor_ln124_253_fu_2719_p2 ^ xor_ln124_251_fu_2709_p2);

assign xor_ln124_58_out = xor_ln124_58_reg_4163;

assign xor_ln124_59_fu_2754_p2 = (xor_ln124_257_fu_2748_p2 ^ xor_ln124_255_fu_2737_p2);

assign xor_ln124_59_out = xor_ln124_59_reg_4169;

assign xor_ln124_60_fu_2782_p2 = (xor_ln124_261_fu_2777_p2 ^ xor_ln124_259_fu_2766_p2);

assign xor_ln124_60_out = xor_ln124_60_reg_4175;

assign xor_ln124_61_fu_2788_p2 = (reg_1002 ^ fin_2_load_24_reg_3821);

assign xor_ln124_62_fu_2808_p2 = (reg_1002 ^ fin_2_load_25_reg_3828);

assign xor_ln124_63_fu_2946_p2 = (reg_1002 ^ fin_2_load_26_reg_3881);

assign xor_ln124_64_fu_3079_p2 = (reg_1002 ^ fin_2_load_27_reg_3888);

assign xor_ln124_65_fu_3422_p2 = (xor_ln124_265_fu_3416_p2 ^ xor_ln124_263_fu_3405_p2);

assign xor_ln124_65_out = xor_ln124_65_reg_4305;

assign xor_ln124_66_fu_3360_p2 = (xor_ln124_269_fu_3354_p2 ^ xor_ln124_268_fu_3349_p2);

assign xor_ln124_66_out = xor_ln124_66_reg_4293;

assign xor_ln124_67_fu_3444_p2 = (xor_ln124_272_fu_3438_p2 ^ xor_ln124_271_fu_3433_p2);

assign xor_ln124_67_out = xor_ln124_67_reg_4311;

assign xor_ln124_68_fu_3382_p2 = (xor_ln124_275_fu_3376_p2 ^ xor_ln124_274_fu_3371_p2);

assign xor_ln124_68_out = xor_ln124_68_reg_4299;

assign xor_ln124_fu_1764_p2 = (x_assign_2_reg_3741 ^ fin_2_q1);

assign xor_ln132_10_fu_1705_p2 = (x_assign_5_fu_1689_p3 ^ 8'd14);

assign xor_ln132_11_fu_1838_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_12_fu_2034_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_13_fu_2076_p2 = (x_assign_7_fu_2060_p3 ^ 8'd14);

assign xor_ln132_14_fu_2118_p2 = (x_assign_8_fu_2102_p3 ^ 8'd14);

assign xor_ln132_15_fu_1490_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_16_fu_1532_p2 = (x_assign_9_fu_1516_p3 ^ 8'd14);

assign xor_ln132_17_fu_1574_p2 = (x_assign_10_fu_1558_p3 ^ 8'd14);

assign xor_ln132_18_fu_1880_p2 = (x_assign_6_fu_1864_p3 ^ 8'd14);

assign xor_ln132_19_fu_1922_p2 = (x_assign_11_fu_1906_p3 ^ 8'd14);

assign xor_ln132_1_fu_1288_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_20_fu_2398_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_21_fu_2494_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_22_fu_2536_p2 = (x_assign_13_fu_2520_p3 ^ 8'd14);

assign xor_ln132_23_fu_2586_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_24_fu_2628_p2 = (x_assign_14_fu_2612_p3 ^ 8'd14);

assign xor_ln132_25_fu_2270_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_26_fu_2312_p2 = (x_assign_15_fu_2296_p3 ^ 8'd14);

assign xor_ln132_27_fu_2440_p2 = (x_assign_12_fu_2424_p3 ^ 8'd14);

assign xor_ln132_28_fu_2964_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_29_fu_3006_p2 = (x_assign_16_fu_2990_p3 ^ 8'd14);

assign xor_ln132_2_fu_1330_p2 = (x_assign_1_fu_1314_p3 ^ 8'd14);

assign xor_ln132_30_fu_3048_p2 = (x_assign_17_fu_3032_p3 ^ 8'd14);

assign xor_ln132_31_fu_3097_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_32_fu_3215_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_33_fu_3257_p2 = (x_assign_19_fu_3241_p3 ^ 8'd14);

assign xor_ln132_34_fu_3299_p2 = (x_assign_20_fu_3283_p3 ^ 8'd14);

assign xor_ln132_35_fu_2836_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_36_fu_2878_p2 = (x_assign_21_fu_2862_p3 ^ 8'd14);

assign xor_ln132_37_fu_2920_p2 = (x_assign_22_fu_2904_p3 ^ 8'd14);

assign xor_ln132_38_fu_3139_p2 = (x_assign_18_fu_3123_p3 ^ 8'd14);

assign xor_ln132_39_fu_3181_p2 = (x_assign_23_fu_3165_p3 ^ 8'd14);

assign xor_ln132_3_fu_1374_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln132_4_fu_1416_p2 = (x_assign_2_fu_1400_p3 ^ 8'd14);

assign xor_ln132_5_fu_1106_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_6_fu_1148_p2 = (x_assign_3_fu_1132_p3 ^ 8'd14);

assign xor_ln132_7_fu_1234_p2 = (x_assign_s_fu_1218_p3 ^ 8'd14);

assign xor_ln132_8_fu_1621_p2 = (clefia_s0_q0 ^ 8'd14);

assign xor_ln132_9_fu_1663_p2 = (x_assign_4_fu_1647_p3 ^ 8'd14);

assign xor_ln132_fu_1192_p2 = (clefia_s1_q0 ^ 8'd14);

assign xor_ln180_1_fu_3074_p2 = (x_assign_21_reg_4211 ^ x_assign_16_fu_2990_p3);

assign xor_ln180_fu_1731_p2 = (x_assign_9_reg_3806 ^ x_assign_4_fu_1647_p3);

assign zext_ln121_38_fu_1053_p1 = or_ln121_6_fu_1048_p2;

assign zext_ln121_39_fu_1068_p1 = or_ln121_7_fu_1063_p2;

assign zext_ln121_41_fu_1088_p1 = or_ln121_8_fu_1083_p2;

assign zext_ln121_42_fu_1265_p1 = or_ln212_fu_1260_p2;

assign zext_ln121_43_fu_1361_p1 = or_ln121_9_fu_1356_p2;

assign zext_ln121_44_fu_1452_p1 = or_ln121_10_fu_1447_p2;

assign zext_ln121_45_fu_1472_p1 = or_ln121_11_fu_1467_p2;

assign zext_ln121_46_fu_1741_p1 = or_ln213_fu_1736_p2;

assign zext_ln121_47_fu_1953_p1 = or_ln121_12_fu_1948_p2;

assign zext_ln121_48_fu_2154_p1 = or_ln121_13_fu_2149_p2;

assign zext_ln121_49_fu_2252_p1 = or_ln121_14_fu_2247_p2;

assign zext_ln121_50_fu_2471_p1 = or_ln214_fu_2466_p2;

assign zext_ln121_51_fu_2567_p1 = or_ln121_15_fu_2562_p2;

assign zext_ln121_52_fu_2798_p1 = or_ln121_16_fu_2793_p2;

assign zext_ln121_53_fu_2818_p1 = or_ln121_17_fu_2813_p2;

assign zext_ln150_1_fu_2159_p1 = xor_ln124_53_fu_2144_p2;

assign zext_ln150_fu_1073_p1 = xor_ln124_16_fu_1058_p2;

assign zext_ln151_1_fu_2257_p1 = xor_ln124_54_fu_2242_p2;

assign zext_ln151_fu_1093_p1 = xor_ln124_17_fu_1078_p2;

assign zext_ln152_1_fu_2385_p1 = xor_ln124_55_fu_2380_p2;

assign zext_ln152_fu_1179_p1 = xor_ln124_19_fu_1174_p2;

assign zext_ln153_1_fu_2481_p1 = xor_ln124_56_fu_2476_p2;

assign zext_ln153_fu_1275_p1 = xor_ln124_20_fu_1270_p2;

assign zext_ln173_1_fu_2803_p1 = xor_ln124_61_fu_2788_p2;

assign zext_ln173_fu_1457_p1 = xor_ln124_35_fu_1442_p2;

assign zext_ln174_1_fu_2823_p1 = xor_ln124_62_fu_2808_p2;

assign zext_ln174_fu_1477_p1 = xor_ln124_36_fu_1462_p2;

assign zext_ln175_1_fu_2951_p1 = xor_ln124_63_fu_2946_p2;

assign zext_ln175_fu_1608_p1 = xor_ln124_37_fu_1603_p2;

assign zext_ln176_1_fu_3084_p1 = xor_ln124_64_fu_3079_p2;

assign zext_ln176_fu_1825_p1 = xor_ln124_38_fu_1820_p2;

endmodule //clefia_clefia_Pipeline_ClefiaGfn8_label458
