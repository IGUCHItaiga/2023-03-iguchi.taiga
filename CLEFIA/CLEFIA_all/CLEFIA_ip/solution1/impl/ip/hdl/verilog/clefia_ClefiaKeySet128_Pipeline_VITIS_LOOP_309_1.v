// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module clefia_ClefiaKeySet128_Pipeline_VITIS_LOOP_309_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lk_address0,
        lk_ce0,
        lk_we0,
        lk_d0,
        lk_q0,
        lk_address1,
        lk_ce1,
        lk_we1,
        lk_d1,
        lk_q1,
        rk_address0,
        rk_ce0,
        rk_we0,
        rk_d0,
        rk_address1,
        rk_ce1,
        rk_we1,
        rk_d1,
        con128_address0,
        con128_ce0,
        con128_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] lk_address0;
output   lk_ce0;
output   lk_we0;
output  [7:0] lk_d0;
input  [7:0] lk_q0;
output  [3:0] lk_address1;
output   lk_ce1;
output   lk_we1;
output  [7:0] lk_d1;
input  [7:0] lk_q1;
output  [7:0] rk_address0;
output   rk_ce0;
output   rk_we0;
output  [7:0] rk_d0;
output  [7:0] rk_address1;
output   rk_ce1;
output   rk_we1;
output  [7:0] rk_d1;
output  [7:0] con128_address0;
output   con128_ce0;
input  [7:0] con128_q0;

reg ap_idle;
reg[3:0] lk_address0;
reg lk_ce0;
reg lk_we0;
reg[7:0] lk_d0;
reg[3:0] lk_address1;
reg lk_ce1;
reg lk_we1;
reg[7:0] lk_d1;
reg[7:0] rk_address0;
reg rk_ce0;
reg rk_we0;
reg[7:0] rk_d0;
reg[7:0] rk_address1;
reg rk_ce1;
reg rk_we1;
reg[7:0] rk_d1;
reg[7:0] con128_address0;
reg con128_ce0;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln309_reg_1500;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
reg   [7:0] reg_586;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state18_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [7:0] reg_590;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state19_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [7:0] reg_594;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state17_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] lk_addr_14_reg_1490;
wire   [3:0] lk_addr_15_reg_1495;
wire   [0:0] icmp_ln309_fu_611_p2;
wire   [3:0] add_ln309_fu_617_p2;
reg   [3:0] add_ln309_reg_1504;
wire   [7:0] shl_ln_fu_623_p3;
reg   [7:0] shl_ln_reg_1509;
wire   [0:0] empty_53_fu_642_p1;
reg   [0:0] empty_53_reg_1533;
reg   [0:0] empty_53_reg_1533_pp0_iter1_reg;
wire   [3:0] lk_addr_12_reg_1537;
wire   [3:0] lk_addr_13_reg_1542;
wire   [3:0] lk_addr_10_reg_1552;
wire   [3:0] lk_addr_11_reg_1557;
reg   [7:0] idx74_load_1_reg_1562;
wire   [7:0] or_ln300_fu_656_p2;
reg   [7:0] or_ln300_reg_1573;
reg   [7:0] rk_addr_reg_1585;
wire   [7:0] xor_ln124_fu_667_p2;
reg   [7:0] xor_ln124_reg_1590;
reg   [7:0] lk_load_2_reg_1600;
reg   [7:0] lk_load_3_reg_1607;
wire   [3:0] lk_addr_8_reg_1614;
wire   [3:0] lk_addr_9_reg_1619;
reg   [7:0] rk_addr_1_reg_1624;
wire   [7:0] xor_ln124_1_fu_694_p2;
reg   [7:0] xor_ln124_1_reg_1629;
reg   [7:0] lk_load_4_reg_1639;
reg   [7:0] lk_load_5_reg_1646;
wire   [3:0] lk_addr_6_reg_1653;
wire   [3:0] lk_addr_7_reg_1658;
reg   [7:0] rk_addr_2_reg_1663;
wire   [7:0] xor_ln124_2_fu_727_p2;
reg   [7:0] xor_ln124_2_reg_1668;
reg   [7:0] lk_load_6_reg_1678;
reg   [7:0] lk_load_7_reg_1685;
wire   [3:0] lk_addr_4_reg_1692;
wire   [3:0] lk_addr_5_reg_1697;
reg   [7:0] rk_addr_3_reg_1702;
wire   [7:0] xor_ln124_3_fu_759_p2;
reg   [7:0] xor_ln124_3_reg_1707;
reg   [7:0] lk_load_8_reg_1717;
reg   [7:0] lk_load_9_reg_1724;
wire   [3:0] lk_addr_2_reg_1731;
wire   [3:0] lk_addr_3_reg_1736;
reg   [7:0] rk_addr_4_reg_1741;
wire   [7:0] xor_ln124_4_fu_791_p2;
reg   [7:0] xor_ln124_4_reg_1746;
reg   [7:0] lk_load_10_reg_1756;
reg   [7:0] lk_load_11_reg_1763;
wire   [3:0] lk_addr_reg_1770;
wire   [3:0] lk_addr_1_reg_1775;
reg   [7:0] rk_addr_5_reg_1780;
wire   [7:0] xor_ln124_5_fu_823_p2;
reg   [7:0] xor_ln124_5_reg_1785;
reg   [7:0] lk_load_12_reg_1795;
reg   [7:0] lk_load_13_reg_1802;
reg   [7:0] rk_addr_6_reg_1809;
wire   [7:0] xor_ln124_6_fu_855_p2;
reg   [7:0] xor_ln124_6_reg_1814;
wire   [0:0] trunc_ln248_fu_922_p1;
reg   [0:0] trunc_ln248_reg_1824;
reg   [6:0] tmp_8_reg_1829;
reg   [7:0] rk_addr_7_reg_1834;
wire   [7:0] xor_ln124_7_fu_949_p2;
reg   [7:0] xor_ln124_7_reg_1839;
wire   [0:0] trunc_ln250_fu_1009_p1;
reg   [0:0] trunc_ln250_reg_1849;
reg   [7:0] rk_addr_8_reg_1854;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire   [7:0] xor_ln124_8_fu_1022_p2;
reg   [7:0] xor_ln124_8_reg_1859;
wire   [7:0] xor_ln124_9_fu_1028_p2;
reg   [7:0] xor_ln124_9_reg_1864;
wire   [0:0] trunc_ln252_fu_1087_p1;
reg   [0:0] trunc_ln252_reg_1875;
reg   [7:0] rk_addr_9_reg_1880;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire   [7:0] xor_ln124_10_fu_1100_p2;
reg   [7:0] xor_ln124_10_reg_1885;
reg   [7:0] rk_addr_10_reg_1896;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire   [7:0] xor_ln124_11_fu_1164_p2;
reg   [7:0] xor_ln124_11_reg_1901;
wire   [6:0] trunc_ln257_fu_1219_p1;
reg   [6:0] trunc_ln257_reg_1912;
reg   [7:0] rk_addr_11_reg_1917;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire   [7:0] xor_ln124_12_fu_1232_p2;
reg   [7:0] xor_ln124_12_reg_1922;
wire   [6:0] trunc_ln259_fu_1287_p1;
reg   [6:0] trunc_ln259_reg_1933;
reg   [7:0] rk_addr_12_reg_1938;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire   [7:0] xor_ln124_13_fu_1300_p2;
reg   [7:0] xor_ln124_13_reg_1943;
wire   [6:0] trunc_ln261_fu_1355_p1;
reg   [6:0] trunc_ln261_reg_1954;
reg   [7:0] rk_addr_13_reg_1959;
wire    ap_block_pp0_stage15_11001;
wire   [7:0] xor_ln124_14_fu_1368_p2;
reg   [7:0] xor_ln124_14_reg_1964;
reg   [7:0] rk_addr_14_reg_1975;
wire   [7:0] xor_ln124_15_fu_1437_p2;
reg   [7:0] xor_ln124_15_reg_1980;
reg   [7:0] rk_addr_15_reg_1986;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln121_fu_637_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln121_29_fu_651_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln300_fu_662_p1;
wire   [63:0] zext_ln121_31_fu_679_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln121_30_fu_689_p1;
wire   [63:0] zext_ln121_33_fu_706_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln121_32_fu_722_p1;
wire   [63:0] zext_ln121_35_fu_738_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln121_34_fu_754_p1;
wire   [63:0] zext_ln121_37_fu_770_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln121_36_fu_786_p1;
wire   [63:0] zext_ln121_39_fu_802_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln121_38_fu_818_p1;
wire   [63:0] zext_ln121_41_fu_834_p1;
wire   [63:0] zext_ln121_40_fu_850_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln121_43_fu_866_p1;
wire   [63:0] zext_ln121_42_fu_944_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln121_45_fu_960_p1;
wire   [63:0] zext_ln121_44_fu_1017_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln121_47_fu_1038_p1;
wire   [63:0] zext_ln121_46_fu_1095_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln121_49_fu_1110_p1;
wire   [63:0] zext_ln121_48_fu_1159_p1;
wire    ap_block_pp0_stage12;
wire   [63:0] zext_ln121_51_fu_1174_p1;
wire   [63:0] zext_ln121_50_fu_1227_p1;
wire    ap_block_pp0_stage13;
wire   [63:0] zext_ln121_53_fu_1242_p1;
wire   [63:0] zext_ln121_52_fu_1295_p1;
wire    ap_block_pp0_stage14;
wire   [63:0] zext_ln121_55_fu_1310_p1;
wire   [63:0] zext_ln121_54_fu_1363_p1;
wire    ap_block_pp0_stage15;
wire   [63:0] zext_ln121_57_fu_1379_p1;
wire   [63:0] zext_ln121_56_fu_1432_p1;
wire   [63:0] zext_ln121_58_fu_1454_p1;
reg   [7:0] idx74_fu_152;
wire   [7:0] add_ln315_fu_1465_p2;
wire    ap_loop_init;
reg   [3:0] i_fu_156;
reg   [3:0] ap_sig_allocacmp_i_3;
wire   [7:0] or_ln_fu_891_p3;
wire   [7:0] or_ln1_fu_913_p3;
wire   [7:0] or_ln2_fu_980_p3;
wire   [7:0] or_ln3_fu_1000_p3;
wire   [7:0] or_ln4_fu_1058_p3;
wire   [7:0] or_ln5_fu_1078_p3;
wire   [7:0] or_ln6_fu_1130_p3;
wire   [7:0] or_ln253_i_fu_1145_p3;
wire   [7:0] or_ln7_fu_1192_p3;
wire   [7:0] or_ln8_fu_1210_p3;
wire   [7:0] or_ln9_fu_1260_p3;
wire   [7:0] or_ln10_fu_1278_p3;
wire   [7:0] or_ln11_fu_1328_p3;
wire   [7:0] or_ln12_fu_1346_p3;
wire   [7:0] or_ln13_fu_1398_p3;
wire   [7:0] or_ln14_fu_1418_p3;
wire   [7:0] xor_ln124_16_fu_711_p2;
wire   [7:0] xor_ln124_17_fu_743_p2;
wire   [7:0] xor_ln124_18_fu_775_p2;
wire   [7:0] xor_ln124_19_fu_807_p2;
wire   [7:0] xor_ln124_20_fu_839_p2;
wire   [7:0] xor_ln124_21_fu_871_p2;
wire   [7:0] xor_ln124_22_fu_965_p2;
wire   [7:0] xor_ln124_23_fu_1043_p2;
wire   [7:0] xor_ln124_24_fu_1115_p2;
wire   [7:0] xor_ln124_25_fu_1179_p2;
wire   [7:0] xor_ln124_26_fu_1247_p2;
wire   [7:0] xor_ln124_27_fu_1315_p2;
wire   [7:0] xor_ln124_28_fu_1384_p2;
wire   [7:0] xor_ln124_29_fu_1443_p2;
wire   [7:0] xor_ln124_30_fu_1459_p2;
wire   [7:0] add_ln121_fu_631_p2;
wire   [7:0] add_ln121_1_fu_646_p2;
wire   [7:0] add_ln121_2_fu_674_p2;
wire   [7:0] or_ln121_fu_684_p2;
wire   [7:0] add_ln121_3_fu_701_p2;
wire   [7:0] or_ln121_1_fu_717_p2;
wire   [7:0] add_ln121_4_fu_733_p2;
wire   [7:0] or_ln121_2_fu_749_p2;
wire   [7:0] add_ln121_5_fu_765_p2;
wire   [7:0] or_ln121_3_fu_781_p2;
wire   [7:0] add_ln121_6_fu_797_p2;
wire   [7:0] or_ln121_4_fu_813_p2;
wire   [7:0] add_ln121_7_fu_829_p2;
wire   [7:0] or_ln121_5_fu_845_p2;
wire   [7:0] add_ln121_8_fu_861_p2;
wire   [0:0] trunc_ln246_fu_877_p1;
wire   [6:0] lshr_ln_fu_881_p4;
wire   [0:0] trunc_ln247_fu_900_p1;
wire   [6:0] lshr_ln1_fu_904_p4;
wire   [7:0] or_ln121_6_fu_939_p2;
wire   [7:0] add_ln121_9_fu_955_p2;
wire   [6:0] lshr_ln2_fu_971_p4;
wire   [0:0] trunc_ln249_fu_988_p1;
wire   [6:0] lshr_ln3_fu_991_p4;
wire   [7:0] add_ln121_16_fu_1012_p2;
wire   [7:0] add_ln121_10_fu_1033_p2;
wire   [6:0] lshr_ln4_fu_1049_p4;
wire   [0:0] trunc_ln251_fu_1066_p1;
wire   [6:0] lshr_ln5_fu_1069_p4;
wire   [7:0] add_ln121_17_fu_1090_p2;
wire   [7:0] add_ln121_11_fu_1105_p2;
wire   [6:0] lshr_ln6_fu_1121_p4;
wire   [0:0] trunc_ln253_1_fu_1142_p1;
wire   [6:0] trunc_ln253_fu_1138_p1;
wire   [7:0] add_ln121_18_fu_1154_p2;
wire   [7:0] add_ln121_12_fu_1169_p2;
wire   [0:0] tmp_fu_1185_p3;
wire   [6:0] trunc_ln256_fu_1207_p1;
wire   [0:0] tmp_1_fu_1200_p3;
wire   [7:0] add_ln121_19_fu_1222_p2;
wire   [7:0] add_ln121_13_fu_1237_p2;
wire   [0:0] tmp_2_fu_1253_p3;
wire   [6:0] trunc_ln258_fu_1275_p1;
wire   [0:0] tmp_3_fu_1268_p3;
wire   [7:0] add_ln121_20_fu_1290_p2;
wire   [7:0] add_ln121_14_fu_1305_p2;
wire   [0:0] tmp_4_fu_1321_p3;
wire   [6:0] trunc_ln260_fu_1343_p1;
wire   [0:0] tmp_5_fu_1336_p3;
wire   [7:0] add_ln121_21_fu_1358_p2;
wire   [7:0] add_ln121_15_fu_1374_p2;
wire   [0:0] tmp_6_fu_1390_p3;
wire   [6:0] trunc_ln262_fu_1414_p1;
wire   [0:0] tmp_7_fu_1406_p3;
wire   [7:0] add_ln121_22_fu_1427_p2;
wire   [7:0] add_ln121_23_fu_1449_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [15:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

clefia_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_156 <= 4'd0;
    end else if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        i_fu_156 <= add_ln309_reg_1504;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        idx74_fu_152 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        idx74_fu_152 <= add_ln315_fu_1465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln309_reg_1504 <= add_ln309_fu_617_p2;
        empty_53_reg_1533_pp0_iter1_reg <= empty_53_reg_1533;
        icmp_ln309_reg_1500 <= icmp_ln309_fu_611_p2;
        rk_addr_14_reg_1975 <= zext_ln121_56_fu_1432_p1;
        xor_ln124_15_reg_1980 <= xor_ln124_15_fu_1437_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln309_fu_611_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_53_reg_1533 <= empty_53_fu_642_p1;
        shl_ln_reg_1509[7 : 4] <= shl_ln_fu_623_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        idx74_load_1_reg_1562 <= idx74_fu_152;
        lk_load_2_reg_1600 <= lk_q1;
        lk_load_3_reg_1607 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        lk_load_10_reg_1756 <= lk_q1;
        lk_load_11_reg_1763 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        lk_load_12_reg_1795 <= lk_q1;
        lk_load_13_reg_1802 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        lk_load_4_reg_1639 <= lk_q1;
        lk_load_5_reg_1646 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        lk_load_6_reg_1678 <= lk_q1;
        lk_load_7_reg_1685 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        lk_load_8_reg_1717 <= lk_q1;
        lk_load_9_reg_1724 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        or_ln300_reg_1573[2 : 0] <= or_ln300_fu_656_p2[2 : 0];
or_ln300_reg_1573[7 : 4] <= or_ln300_fu_656_p2[7 : 4];
        rk_addr_reg_1585[2 : 0] <= zext_ln300_fu_662_p1[2 : 0];
rk_addr_reg_1585[7 : 4] <= zext_ln300_fu_662_p1[7 : 4];
        xor_ln124_reg_1590 <= xor_ln124_fu_667_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_586 <= lk_q1;
        reg_594 <= lk_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_590 <= con128_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_addr_10_reg_1896 <= zext_ln121_48_fu_1159_p1;
        trunc_ln257_reg_1912 <= trunc_ln257_fu_1219_p1;
        xor_ln124_11_reg_1901 <= xor_ln124_11_fu_1164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_addr_11_reg_1917 <= zext_ln121_50_fu_1227_p1;
        trunc_ln259_reg_1933 <= trunc_ln259_fu_1287_p1;
        xor_ln124_12_reg_1922 <= xor_ln124_12_fu_1232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_addr_12_reg_1938 <= zext_ln121_52_fu_1295_p1;
        trunc_ln261_reg_1954 <= trunc_ln261_fu_1355_p1;
        xor_ln124_13_reg_1943 <= xor_ln124_13_fu_1300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_addr_13_reg_1959 <= zext_ln121_54_fu_1363_p1;
        xor_ln124_14_reg_1964 <= xor_ln124_14_fu_1368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_addr_15_reg_1986 <= zext_ln121_58_fu_1454_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_addr_1_reg_1624[2 : 1] <= zext_ln121_30_fu_689_p1[2 : 1];
rk_addr_1_reg_1624[7 : 4] <= zext_ln121_30_fu_689_p1[7 : 4];
        xor_ln124_1_reg_1629 <= xor_ln124_1_fu_694_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_addr_2_reg_1663[0] <= zext_ln121_32_fu_722_p1[0];
rk_addr_2_reg_1663[2] <= zext_ln121_32_fu_722_p1[2];
rk_addr_2_reg_1663[7 : 4] <= zext_ln121_32_fu_722_p1[7 : 4];
        xor_ln124_2_reg_1668 <= xor_ln124_2_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_addr_3_reg_1702[2] <= zext_ln121_34_fu_754_p1[2];
rk_addr_3_reg_1702[7 : 4] <= zext_ln121_34_fu_754_p1[7 : 4];
        xor_ln124_3_reg_1707 <= xor_ln124_3_fu_759_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_addr_4_reg_1741[1 : 0] <= zext_ln121_36_fu_786_p1[1 : 0];
rk_addr_4_reg_1741[7 : 4] <= zext_ln121_36_fu_786_p1[7 : 4];
        xor_ln124_4_reg_1746 <= xor_ln124_4_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_addr_5_reg_1780[1] <= zext_ln121_38_fu_818_p1[1];
rk_addr_5_reg_1780[7 : 4] <= zext_ln121_38_fu_818_p1[7 : 4];
        xor_ln124_5_reg_1785 <= xor_ln124_5_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_addr_6_reg_1809[0] <= zext_ln121_40_fu_850_p1[0];
rk_addr_6_reg_1809[7 : 4] <= zext_ln121_40_fu_850_p1[7 : 4];
        tmp_8_reg_1829 <= {{reg_586[7:1]}};
        trunc_ln248_reg_1824 <= trunc_ln248_fu_922_p1;
        xor_ln124_6_reg_1814 <= xor_ln124_6_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_addr_7_reg_1834[7 : 4] <= zext_ln121_42_fu_944_p1[7 : 4];
        trunc_ln250_reg_1849 <= trunc_ln250_fu_1009_p1;
        xor_ln124_7_reg_1839 <= xor_ln124_7_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_addr_8_reg_1854 <= zext_ln121_44_fu_1017_p1;
        trunc_ln252_reg_1875 <= trunc_ln252_fu_1087_p1;
        xor_ln124_8_reg_1859 <= xor_ln124_8_fu_1022_p2;
        xor_ln124_9_reg_1864 <= xor_ln124_9_fu_1028_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_addr_9_reg_1880 <= zext_ln121_46_fu_1095_p1;
        xor_ln124_10_reg_1885 <= xor_ln124_10_fu_1100_p2;
    end
end

always @ (*) begin
    if (((icmp_ln309_reg_1500 == 1'd1) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage15_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_3 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_156;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            con128_address0 = zext_ln121_57_fu_1379_p1;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            con128_address0 = zext_ln121_55_fu_1310_p1;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            con128_address0 = zext_ln121_53_fu_1242_p1;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            con128_address0 = zext_ln121_51_fu_1174_p1;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            con128_address0 = zext_ln121_49_fu_1110_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            con128_address0 = zext_ln121_47_fu_1038_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            con128_address0 = zext_ln121_45_fu_960_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            con128_address0 = zext_ln121_43_fu_866_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            con128_address0 = zext_ln121_41_fu_834_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            con128_address0 = zext_ln121_39_fu_802_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            con128_address0 = zext_ln121_37_fu_770_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            con128_address0 = zext_ln121_35_fu_738_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            con128_address0 = zext_ln121_33_fu_706_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            con128_address0 = zext_ln121_31_fu_679_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            con128_address0 = zext_ln121_29_fu_651_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            con128_address0 = zext_ln121_fu_637_p1;
        end else begin
            con128_address0 = 'bx;
        end
    end else begin
        con128_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        con128_ce0 = 1'b1;
    end else begin
        con128_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            lk_address0 = lk_addr_reg_1770;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            lk_address0 = lk_addr_2_reg_1731;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            lk_address0 = lk_addr_4_reg_1692;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            lk_address0 = lk_addr_6_reg_1653;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            lk_address0 = lk_addr_8_reg_1614;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            lk_address0 = lk_addr_10_reg_1552;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            lk_address0 = lk_addr_12_reg_1537;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            lk_address0 = lk_addr_14_reg_1490;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            lk_address0 = 64'd15;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            lk_address0 = 64'd13;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            lk_address0 = 64'd11;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            lk_address0 = 64'd9;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            lk_address0 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            lk_address0 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            lk_address0 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lk_address0 = 64'd1;
        end else begin
            lk_address0 = 'bx;
        end
    end else begin
        lk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            lk_address1 = lk_addr_1_reg_1775;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            lk_address1 = lk_addr_3_reg_1736;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            lk_address1 = lk_addr_5_reg_1697;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            lk_address1 = lk_addr_7_reg_1658;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            lk_address1 = lk_addr_9_reg_1619;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            lk_address1 = lk_addr_11_reg_1557;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            lk_address1 = lk_addr_13_reg_1542;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            lk_address1 = lk_addr_15_reg_1495;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            lk_address1 = 64'd14;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            lk_address1 = 64'd12;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            lk_address1 = 64'd10;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            lk_address1 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            lk_address1 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            lk_address1 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            lk_address1 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            lk_address1 = 64'd0;
        end else begin
            lk_address1 = 'bx;
        end
    end else begin
        lk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        lk_ce0 = 1'b1;
    end else begin
        lk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        lk_ce1 = 1'b1;
    end else begin
        lk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            lk_d0 = or_ln14_fu_1418_p3;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            lk_d0 = or_ln12_fu_1346_p3;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            lk_d0 = or_ln10_fu_1278_p3;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            lk_d0 = or_ln8_fu_1210_p3;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            lk_d0 = or_ln253_i_fu_1145_p3;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            lk_d0 = or_ln5_fu_1078_p3;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            lk_d0 = or_ln3_fu_1000_p3;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            lk_d0 = or_ln1_fu_913_p3;
        end else begin
            lk_d0 = 'bx;
        end
    end else begin
        lk_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage15) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
            lk_d1 = or_ln13_fu_1398_p3;
        end else if (((1'b0 == ap_block_pp0_stage14) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
            lk_d1 = or_ln11_fu_1328_p3;
        end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            lk_d1 = or_ln9_fu_1260_p3;
        end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
            lk_d1 = or_ln7_fu_1192_p3;
        end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            lk_d1 = or_ln6_fu_1130_p3;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            lk_d1 = or_ln4_fu_1058_p3;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            lk_d1 = or_ln2_fu_980_p3;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            lk_d1 = or_ln_fu_891_p3;
        end else begin
            lk_d1 = 'bx;
        end
    end else begin
        lk_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        lk_we0 = 1'b1;
    end else begin
        lk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        lk_we1 = 1'b1;
    end else begin
        lk_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_address0 = rk_addr_15_reg_1986;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_address0 = rk_addr_14_reg_1975;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_address0 = rk_addr_13_reg_1959;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_address0 = rk_addr_12_reg_1938;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_address0 = rk_addr_11_reg_1917;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_address0 = rk_addr_10_reg_1896;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_address0 = rk_addr_9_reg_1880;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_address0 = rk_addr_8_reg_1854;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_address0 = rk_addr_7_reg_1834;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_address0 = rk_addr_6_reg_1809;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_address0 = rk_addr_5_reg_1780;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_address0 = rk_addr_4_reg_1741;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_address0 = rk_addr_3_reg_1702;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_address0 = rk_addr_2_reg_1663;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_address0 = rk_addr_1_reg_1624;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_address0 = rk_addr_reg_1585;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_address1 = zext_ln121_58_fu_1454_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_address1 = zext_ln121_56_fu_1432_p1;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_address1 = zext_ln121_54_fu_1363_p1;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_address1 = zext_ln121_52_fu_1295_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_address1 = zext_ln121_50_fu_1227_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_address1 = zext_ln121_48_fu_1159_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_address1 = zext_ln121_46_fu_1095_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_address1 = zext_ln121_44_fu_1017_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_address1 = zext_ln121_42_fu_944_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_address1 = zext_ln121_40_fu_850_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_address1 = zext_ln121_38_fu_818_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_address1 = zext_ln121_36_fu_786_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_address1 = zext_ln121_34_fu_754_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_address1 = zext_ln121_32_fu_722_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_address1 = zext_ln121_30_fu_689_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_address1 = zext_ln300_fu_662_p1;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce0 = 1'b1;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_ce1 = 1'b1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_d0 = xor_ln124_15_reg_1980;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_d0 = xor_ln124_30_fu_1459_p2;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_d0 = xor_ln124_29_fu_1443_p2;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_d0 = xor_ln124_28_fu_1384_p2;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_d0 = xor_ln124_27_fu_1315_p2;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_d0 = xor_ln124_26_fu_1247_p2;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_d0 = xor_ln124_25_fu_1179_p2;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_d0 = xor_ln124_24_fu_1115_p2;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_d0 = xor_ln124_23_fu_1043_p2;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_d0 = xor_ln124_22_fu_965_p2;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_d0 = xor_ln124_21_fu_871_p2;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_d0 = xor_ln124_20_fu_839_p2;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_d0 = xor_ln124_19_fu_807_p2;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_d0 = xor_ln124_18_fu_775_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_d0 = xor_ln124_17_fu_743_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_d0 = xor_ln124_16_fu_711_p2;
    end else begin
        rk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        rk_d1 = xor_ln124_15_reg_1980;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rk_d1 = xor_ln124_14_reg_1964;
    end else if (((1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15))) begin
        rk_d1 = xor_ln124_13_reg_1943;
    end else if (((1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14))) begin
        rk_d1 = xor_ln124_12_reg_1922;
    end else if (((1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
        rk_d1 = xor_ln124_11_reg_1901;
    end else if (((1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12))) begin
        rk_d1 = xor_ln124_10_reg_1885;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        rk_d1 = xor_ln124_9_reg_1864;
    end else if (((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
        rk_d1 = xor_ln124_8_fu_1022_p2;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        rk_d1 = xor_ln124_7_fu_949_p2;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        rk_d1 = xor_ln124_6_fu_855_p2;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        rk_d1 = xor_ln124_5_fu_823_p2;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        rk_d1 = xor_ln124_4_fu_791_p2;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        rk_d1 = xor_ln124_3_fu_759_p2;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        rk_d1 = xor_ln124_2_fu_727_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rk_d1 = xor_ln124_1_fu_694_p2;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        rk_d1 = xor_ln124_fu_667_p2;
    end else begin
        rk_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_53_reg_1533_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (empty_53_reg_1533 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (empty_53_reg_1533_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_we0 = 1'b1;
    end else begin
        rk_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln309_reg_1500 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        rk_we1 = 1'b1;
    end else begin
        rk_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln121_10_fu_1033_p2 = (shl_ln_reg_1509 + 8'd106);

assign add_ln121_11_fu_1105_p2 = (shl_ln_reg_1509 + 8'd107);

assign add_ln121_12_fu_1169_p2 = (shl_ln_reg_1509 + 8'd108);

assign add_ln121_13_fu_1237_p2 = (shl_ln_reg_1509 + 8'd109);

assign add_ln121_14_fu_1305_p2 = (shl_ln_reg_1509 + 8'd110);

assign add_ln121_15_fu_1374_p2 = (shl_ln_reg_1509 + 8'd111);

assign add_ln121_16_fu_1012_p2 = (or_ln300_reg_1573 + 8'd8);

assign add_ln121_17_fu_1090_p2 = (or_ln300_reg_1573 + 8'd9);

assign add_ln121_18_fu_1154_p2 = (or_ln300_reg_1573 + 8'd10);

assign add_ln121_19_fu_1222_p2 = (or_ln300_reg_1573 + 8'd11);

assign add_ln121_1_fu_646_p2 = (shl_ln_reg_1509 + 8'd97);

assign add_ln121_20_fu_1290_p2 = (or_ln300_reg_1573 + 8'd12);

assign add_ln121_21_fu_1358_p2 = (or_ln300_reg_1573 + 8'd13);

assign add_ln121_22_fu_1427_p2 = (or_ln300_reg_1573 + 8'd14);

assign add_ln121_23_fu_1449_p2 = (or_ln300_reg_1573 + 8'd15);

assign add_ln121_2_fu_674_p2 = (shl_ln_reg_1509 + 8'd98);

assign add_ln121_3_fu_701_p2 = (shl_ln_reg_1509 + 8'd99);

assign add_ln121_4_fu_733_p2 = (shl_ln_reg_1509 + 8'd100);

assign add_ln121_5_fu_765_p2 = (shl_ln_reg_1509 + 8'd101);

assign add_ln121_6_fu_797_p2 = (shl_ln_reg_1509 + 8'd102);

assign add_ln121_7_fu_829_p2 = (shl_ln_reg_1509 + 8'd103);

assign add_ln121_8_fu_861_p2 = (shl_ln_reg_1509 + 8'd104);

assign add_ln121_9_fu_955_p2 = (shl_ln_reg_1509 + 8'd105);

assign add_ln121_fu_631_p2 = (shl_ln_fu_623_p3 + 8'd96);

assign add_ln309_fu_617_p2 = (ap_sig_allocacmp_i_3 + 4'd1);

assign add_ln315_fu_1465_p2 = (idx74_fu_152 + 8'd16);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign empty_53_fu_642_p1 = ap_sig_allocacmp_i_3[0:0];

assign icmp_ln309_fu_611_p2 = ((ap_sig_allocacmp_i_3 == 4'd9) ? 1'b1 : 1'b0);

assign lk_addr_10_reg_1552 = 64'd5;

assign lk_addr_11_reg_1557 = 64'd4;

assign lk_addr_12_reg_1537 = 64'd3;

assign lk_addr_13_reg_1542 = 64'd2;

assign lk_addr_14_reg_1490 = 64'd1;

assign lk_addr_15_reg_1495 = 64'd0;

assign lk_addr_1_reg_1775 = 64'd14;

assign lk_addr_2_reg_1731 = 64'd13;

assign lk_addr_3_reg_1736 = 64'd12;

assign lk_addr_4_reg_1692 = 64'd11;

assign lk_addr_5_reg_1697 = 64'd10;

assign lk_addr_6_reg_1653 = 64'd9;

assign lk_addr_7_reg_1658 = 64'd8;

assign lk_addr_8_reg_1614 = 64'd7;

assign lk_addr_9_reg_1619 = 64'd6;

assign lk_addr_reg_1770 = 64'd15;

assign lshr_ln1_fu_904_p4 = {{lk_load_2_reg_1600[7:1]}};

assign lshr_ln2_fu_971_p4 = {{lk_load_3_reg_1607[7:1]}};

assign lshr_ln3_fu_991_p4 = {{lk_load_4_reg_1639[7:1]}};

assign lshr_ln4_fu_1049_p4 = {{lk_load_5_reg_1646[7:1]}};

assign lshr_ln5_fu_1069_p4 = {{lk_load_6_reg_1678[7:1]}};

assign lshr_ln6_fu_1121_p4 = {{lk_load_7_reg_1685[7:1]}};

assign lshr_ln_fu_881_p4 = {{reg_594[7:1]}};

assign or_ln10_fu_1278_p3 = {{trunc_ln258_fu_1275_p1}, {tmp_3_fu_1268_p3}};

assign or_ln11_fu_1328_p3 = {{trunc_ln259_reg_1933}, {tmp_4_fu_1321_p3}};

assign or_ln121_1_fu_717_p2 = (idx74_load_1_reg_1562 | 8'd10);

assign or_ln121_2_fu_749_p2 = (idx74_load_1_reg_1562 | 8'd11);

assign or_ln121_3_fu_781_p2 = (idx74_load_1_reg_1562 | 8'd12);

assign or_ln121_4_fu_813_p2 = (idx74_load_1_reg_1562 | 8'd13);

assign or_ln121_5_fu_845_p2 = (idx74_load_1_reg_1562 | 8'd14);

assign or_ln121_6_fu_939_p2 = (idx74_load_1_reg_1562 | 8'd15);

assign or_ln121_fu_684_p2 = (idx74_load_1_reg_1562 | 8'd9);

assign or_ln12_fu_1346_p3 = {{trunc_ln260_fu_1343_p1}, {tmp_5_fu_1336_p3}};

assign or_ln13_fu_1398_p3 = {{trunc_ln261_reg_1954}, {tmp_6_fu_1390_p3}};

assign or_ln14_fu_1418_p3 = {{trunc_ln262_fu_1414_p1}, {tmp_7_fu_1406_p3}};

assign or_ln1_fu_913_p3 = {{trunc_ln247_fu_900_p1}, {lshr_ln1_fu_904_p4}};

assign or_ln253_i_fu_1145_p3 = {{trunc_ln253_1_fu_1142_p1}, {trunc_ln253_fu_1138_p1}};

assign or_ln2_fu_980_p3 = {{trunc_ln248_reg_1824}, {lshr_ln2_fu_971_p4}};

assign or_ln300_fu_656_p2 = (idx74_fu_152 | 8'd8);

assign or_ln3_fu_1000_p3 = {{trunc_ln249_fu_988_p1}, {lshr_ln3_fu_991_p4}};

assign or_ln4_fu_1058_p3 = {{trunc_ln250_reg_1849}, {lshr_ln4_fu_1049_p4}};

assign or_ln5_fu_1078_p3 = {{trunc_ln251_fu_1066_p1}, {lshr_ln5_fu_1069_p4}};

assign or_ln6_fu_1130_p3 = {{trunc_ln252_reg_1875}, {lshr_ln6_fu_1121_p4}};

assign or_ln7_fu_1192_p3 = {{tmp_8_reg_1829}, {tmp_fu_1185_p3}};

assign or_ln8_fu_1210_p3 = {{trunc_ln256_fu_1207_p1}, {tmp_1_fu_1200_p3}};

assign or_ln9_fu_1260_p3 = {{trunc_ln257_reg_1912}, {tmp_2_fu_1253_p3}};

assign or_ln_fu_891_p3 = {{trunc_ln246_fu_877_p1}, {lshr_ln_fu_881_p4}};

assign shl_ln_fu_623_p3 = {{ap_sig_allocacmp_i_3}, {4'd0}};

assign tmp_1_fu_1200_p3 = lk_load_9_reg_1724[32'd7];

assign tmp_2_fu_1253_p3 = lk_load_10_reg_1756[32'd7];

assign tmp_3_fu_1268_p3 = lk_load_11_reg_1763[32'd7];

assign tmp_4_fu_1321_p3 = lk_load_12_reg_1795[32'd7];

assign tmp_5_fu_1336_p3 = lk_load_13_reg_1802[32'd7];

assign tmp_6_fu_1390_p3 = reg_586[32'd7];

assign tmp_7_fu_1406_p3 = reg_594[32'd7];

assign tmp_fu_1185_p3 = lk_load_8_reg_1717[32'd7];

assign trunc_ln246_fu_877_p1 = reg_586[0:0];

assign trunc_ln247_fu_900_p1 = reg_594[0:0];

assign trunc_ln248_fu_922_p1 = lk_load_2_reg_1600[0:0];

assign trunc_ln249_fu_988_p1 = lk_load_3_reg_1607[0:0];

assign trunc_ln250_fu_1009_p1 = lk_load_4_reg_1639[0:0];

assign trunc_ln251_fu_1066_p1 = lk_load_5_reg_1646[0:0];

assign trunc_ln252_fu_1087_p1 = lk_load_6_reg_1678[0:0];

assign trunc_ln253_1_fu_1142_p1 = lk_load_7_reg_1685[0:0];

assign trunc_ln253_fu_1138_p1 = reg_594[6:0];

assign trunc_ln256_fu_1207_p1 = lk_load_8_reg_1717[6:0];

assign trunc_ln257_fu_1219_p1 = lk_load_9_reg_1724[6:0];

assign trunc_ln258_fu_1275_p1 = lk_load_10_reg_1756[6:0];

assign trunc_ln259_fu_1287_p1 = lk_load_11_reg_1763[6:0];

assign trunc_ln260_fu_1343_p1 = lk_load_12_reg_1795[6:0];

assign trunc_ln261_fu_1355_p1 = lk_load_13_reg_1802[6:0];

assign trunc_ln262_fu_1414_p1 = reg_586[6:0];

assign xor_ln124_10_fu_1100_p2 = (lk_load_10_reg_1756 ^ con128_q0);

assign xor_ln124_11_fu_1164_p2 = (lk_load_11_reg_1763 ^ con128_q0);

assign xor_ln124_12_fu_1232_p2 = (lk_load_12_reg_1795 ^ con128_q0);

assign xor_ln124_13_fu_1300_p2 = (lk_load_13_reg_1802 ^ con128_q0);

assign xor_ln124_14_fu_1368_p2 = (reg_586 ^ con128_q0);

assign xor_ln124_15_fu_1437_p2 = (reg_594 ^ con128_q0);

assign xor_ln124_16_fu_711_p2 = (xor_ln124_reg_1590 ^ 8'd255);

assign xor_ln124_17_fu_743_p2 = (xor_ln124_1_reg_1629 ^ 8'd238);

assign xor_ln124_18_fu_775_p2 = (xor_ln124_2_reg_1668 ^ 8'd221);

assign xor_ln124_19_fu_807_p2 = (xor_ln124_3_reg_1707 ^ 8'd204);

assign xor_ln124_1_fu_694_p2 = (reg_594 ^ reg_590);

assign xor_ln124_20_fu_839_p2 = (xor_ln124_4_reg_1746 ^ 8'd187);

assign xor_ln124_21_fu_871_p2 = (xor_ln124_5_reg_1785 ^ 8'd170);

assign xor_ln124_22_fu_965_p2 = (xor_ln124_6_reg_1814 ^ 8'd153);

assign xor_ln124_23_fu_1043_p2 = (xor_ln124_7_reg_1839 ^ 8'd136);

assign xor_ln124_24_fu_1115_p2 = (xor_ln124_8_reg_1859 ^ 8'd119);

assign xor_ln124_25_fu_1179_p2 = (xor_ln124_9_reg_1864 ^ 8'd102);

assign xor_ln124_26_fu_1247_p2 = (xor_ln124_10_reg_1885 ^ 8'd85);

assign xor_ln124_27_fu_1315_p2 = (xor_ln124_11_reg_1901 ^ 8'd68);

assign xor_ln124_28_fu_1384_p2 = (xor_ln124_12_reg_1922 ^ 8'd51);

assign xor_ln124_29_fu_1443_p2 = (xor_ln124_13_reg_1943 ^ 8'd34);

assign xor_ln124_2_fu_727_p2 = (reg_590 ^ lk_load_2_reg_1600);

assign xor_ln124_30_fu_1459_p2 = (xor_ln124_14_reg_1964 ^ 8'd17);

assign xor_ln124_3_fu_759_p2 = (reg_590 ^ lk_load_3_reg_1607);

assign xor_ln124_4_fu_791_p2 = (reg_590 ^ lk_load_4_reg_1639);

assign xor_ln124_5_fu_823_p2 = (reg_590 ^ lk_load_5_reg_1646);

assign xor_ln124_6_fu_855_p2 = (reg_590 ^ lk_load_6_reg_1678);

assign xor_ln124_7_fu_949_p2 = (reg_590 ^ lk_load_7_reg_1685);

assign xor_ln124_8_fu_1022_p2 = (reg_590 ^ lk_load_8_reg_1717);

assign xor_ln124_9_fu_1028_p2 = (lk_load_9_reg_1724 ^ con128_q0);

assign xor_ln124_fu_667_p2 = (reg_590 ^ reg_586);

assign zext_ln121_29_fu_651_p1 = add_ln121_1_fu_646_p2;

assign zext_ln121_30_fu_689_p1 = or_ln121_fu_684_p2;

assign zext_ln121_31_fu_679_p1 = add_ln121_2_fu_674_p2;

assign zext_ln121_32_fu_722_p1 = or_ln121_1_fu_717_p2;

assign zext_ln121_33_fu_706_p1 = add_ln121_3_fu_701_p2;

assign zext_ln121_34_fu_754_p1 = or_ln121_2_fu_749_p2;

assign zext_ln121_35_fu_738_p1 = add_ln121_4_fu_733_p2;

assign zext_ln121_36_fu_786_p1 = or_ln121_3_fu_781_p2;

assign zext_ln121_37_fu_770_p1 = add_ln121_5_fu_765_p2;

assign zext_ln121_38_fu_818_p1 = or_ln121_4_fu_813_p2;

assign zext_ln121_39_fu_802_p1 = add_ln121_6_fu_797_p2;

assign zext_ln121_40_fu_850_p1 = or_ln121_5_fu_845_p2;

assign zext_ln121_41_fu_834_p1 = add_ln121_7_fu_829_p2;

assign zext_ln121_42_fu_944_p1 = or_ln121_6_fu_939_p2;

assign zext_ln121_43_fu_866_p1 = add_ln121_8_fu_861_p2;

assign zext_ln121_44_fu_1017_p1 = add_ln121_16_fu_1012_p2;

assign zext_ln121_45_fu_960_p1 = add_ln121_9_fu_955_p2;

assign zext_ln121_46_fu_1095_p1 = add_ln121_17_fu_1090_p2;

assign zext_ln121_47_fu_1038_p1 = add_ln121_10_fu_1033_p2;

assign zext_ln121_48_fu_1159_p1 = add_ln121_18_fu_1154_p2;

assign zext_ln121_49_fu_1110_p1 = add_ln121_11_fu_1105_p2;

assign zext_ln121_50_fu_1227_p1 = add_ln121_19_fu_1222_p2;

assign zext_ln121_51_fu_1174_p1 = add_ln121_12_fu_1169_p2;

assign zext_ln121_52_fu_1295_p1 = add_ln121_20_fu_1290_p2;

assign zext_ln121_53_fu_1242_p1 = add_ln121_13_fu_1237_p2;

assign zext_ln121_54_fu_1363_p1 = add_ln121_21_fu_1358_p2;

assign zext_ln121_55_fu_1310_p1 = add_ln121_14_fu_1305_p2;

assign zext_ln121_56_fu_1432_p1 = add_ln121_22_fu_1427_p2;

assign zext_ln121_57_fu_1379_p1 = add_ln121_15_fu_1374_p2;

assign zext_ln121_58_fu_1454_p1 = add_ln121_23_fu_1449_p2;

assign zext_ln121_fu_637_p1 = add_ln121_fu_631_p2;

assign zext_ln300_fu_662_p1 = or_ln300_fu_656_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1509[3:0] <= 4'b0000;
    or_ln300_reg_1573[3] <= 1'b1;
    rk_addr_reg_1585[3] <= 1'b1;
    rk_addr_1_reg_1624[0] <= 1'b1;
    rk_addr_1_reg_1624[3] <= 1'b1;
    rk_addr_2_reg_1663[1] <= 1'b1;
    rk_addr_2_reg_1663[3] <= 1'b1;
    rk_addr_3_reg_1702[1:0] <= 2'b11;
    rk_addr_3_reg_1702[3] <= 1'b1;
    rk_addr_4_reg_1741[3:2] <= 2'b11;
    rk_addr_5_reg_1780[0] <= 1'b1;
    rk_addr_5_reg_1780[3:2] <= 2'b11;
    rk_addr_6_reg_1809[3:1] <= 3'b111;
    rk_addr_7_reg_1834[3:0] <= 4'b1111;
end

endmodule //clefia_ClefiaKeySet128_Pipeline_VITIS_LOOP_309_1
