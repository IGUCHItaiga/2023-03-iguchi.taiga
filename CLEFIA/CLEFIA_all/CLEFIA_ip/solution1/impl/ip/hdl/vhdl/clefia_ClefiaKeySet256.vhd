-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity clefia_ClefiaKeySet256 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce0 : OUT STD_LOGIC;
    rk_we0 : OUT STD_LOGIC;
    rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rk_ce1 : OUT STD_LOGIC;
    rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of clefia_ClefiaKeySet256 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (14 downto 0) := "000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (14 downto 0) := "000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (14 downto 0) := "000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (14 downto 0) := "000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (14 downto 0) := "000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (14 downto 0) := "000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (14 downto 0) := "000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (14 downto 0) := "000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (14 downto 0) := "000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (14 downto 0) := "001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (14 downto 0) := "010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (14 downto 0) := "100000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv9_A0 : STD_LOGIC_VECTOR (8 downto 0) := "010100000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln373_fu_196_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln373_reg_274 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal or_ln364_fu_202_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln364_reg_279 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln373_fu_190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln374_fu_210_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln374_reg_287 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_214_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_291 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln381_fu_234_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln381_reg_295 : STD_LOGIC_VECTOR (8 downto 0);
    signal fin_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal fin_ce0 : STD_LOGIC;
    signal fin_we0 : STD_LOGIC;
    signal fin_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fin_ce1 : STD_LOGIC;
    signal fin_we1 : STD_LOGIC;
    signal fin_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal fout_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal fout_ce0 : STD_LOGIC;
    signal fout_we0 : STD_LOGIC;
    signal fout_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal fout_ce1 : STD_LOGIC;
    signal fout_we1 : STD_LOGIC;
    signal fout_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lk_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lk_ce0 : STD_LOGIC;
    signal lk_we0 : STD_LOGIC;
    signal lk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lk_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal lk_ce1 : STD_LOGIC;
    signal lk_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce1 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we1 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce1 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we1 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce1 : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_ap_start : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_ap_done : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_ap_idle : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_ap_ready : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_ce0 : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_we0 : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_ce1 : STD_LOGIC;
    signal grp_ClefiaDoubleSwap_1_fu_157_lk_offset : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_done : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_idle : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_ready : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_we0 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce1 : STD_LOGIC;
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal idx35_fu_64 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln387_fu_242_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal i_fu_68 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln_fu_222_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln381_fu_230_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_block_state4_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fin_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fin_ce0 : OUT STD_LOGIC;
        fin_we0 : OUT STD_LOGIC;
        fin_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fin_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fin_ce0 : OUT STD_LOGIC;
        fin_we0 : OUT STD_LOGIC;
        fin_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fin_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fin_ce1 : OUT STD_LOGIC;
        fin_we1 : OUT STD_LOGIC;
        fin_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fin_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        fout_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fout_ce0 : OUT STD_LOGIC;
        fout_we0 : OUT STD_LOGIC;
        fout_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fout_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        fout_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fout_ce1 : OUT STD_LOGIC;
        fout_we1 : OUT STD_LOGIC;
        fout_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        fout_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        fout_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        fout_ce0 : OUT STD_LOGIC;
        fout_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        lk_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lk_ce0 : OUT STD_LOGIC;
        lk_we0 : OUT STD_LOGIC;
        lk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln381 : IN STD_LOGIC_VECTOR (8 downto 0);
        lk_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lk_ce0 : OUT STD_LOGIC;
        lk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        or_ln364 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln381 : IN STD_LOGIC_VECTOR (8 downto 0);
        lk_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lk_ce0 : OUT STD_LOGIC;
        lk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        or_ln364 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        or_ln364 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce1 : OUT STD_LOGIC;
        rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaDoubleSwap_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lk_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lk_ce0 : OUT STD_LOGIC;
        lk_we0 : OUT STD_LOGIC;
        lk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        lk_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        lk_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lk_ce1 : OUT STD_LOGIC;
        lk_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        lk_offset : IN STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        or_ln364 : IN STD_LOGIC_VECTOR (7 downto 0);
        rk_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce0 : OUT STD_LOGIC;
        rk_we0 : OUT STD_LOGIC;
        rk_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        rk_ce1 : OUT STD_LOGIC;
        rk_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component clefia_ClefiaKeySet256_lk_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    fin_U : component clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fin_address0,
        ce0 => fin_ce0,
        we0 => fin_we0,
        d0 => fin_d0,
        q0 => fin_q0,
        address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address1,
        ce1 => fin_ce1,
        we1 => fin_we1,
        d1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d1,
        q1 => fin_q1);

    fout_U : component clefia_ClefiaKeySet256_fin_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fout_address0,
        ce0 => fout_ce0,
        we0 => fout_we0,
        d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d0,
        q0 => fout_q0,
        address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address1,
        ce1 => fout_ce1,
        we1 => fout_we1,
        d1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d1,
        q1 => fout_q1);

    lk_U : component clefia_ClefiaKeySet256_lk_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lk_address0,
        ce0 => lk_ce0,
        we0 => lk_we0,
        d0 => lk_d0,
        q0 => lk_q0,
        address1 => grp_ClefiaDoubleSwap_1_fu_157_lk_address1,
        ce1 => lk_ce1,
        q1 => lk_q1);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_ready,
        fin_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_address0,
        fin_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_ce0,
        fin_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_we0,
        fin_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_ready,
        fin_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address0,
        fin_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce0,
        fin_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we0,
        fin_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d0,
        fin_q0 => fin_q0,
        fin_address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address1,
        fin_ce1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce1,
        fin_we1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we1,
        fin_d1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d1,
        fin_q1 => fin_q1,
        fout_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address0,
        fout_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce0,
        fout_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we0,
        fout_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d0,
        fout_q0 => fout_q0,
        fout_address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address1,
        fout_ce1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce1,
        fout_we1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we1,
        fout_d1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_d1,
        fout_q1 => fout_q1);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_ready,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_ready,
        fout_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_address0,
        fout_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_ce0,
        fout_q0 => fout_q0,
        lk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_address0,
        lk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_ce0,
        lk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_we0,
        lk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_ready,
        add_ln381 => add_ln381_reg_295,
        lk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_address0,
        lk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_ce0,
        lk_q0 => lk_q0,
        or_ln364 => or_ln364_reg_279,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_ready,
        add_ln381 => add_ln381_reg_295,
        lk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_address0,
        lk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_ce0,
        lk_q0 => lk_q0,
        or_ln364 => or_ln364_reg_279,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_ready,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_d0);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_ready,
        or_ln364 => or_ln364_reg_279,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_d0,
        rk_address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address1,
        rk_ce1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce1,
        rk_q1 => rk_q1);

    grp_ClefiaDoubleSwap_1_fu_157 : component clefia_ClefiaDoubleSwap_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaDoubleSwap_1_fu_157_ap_start,
        ap_done => grp_ClefiaDoubleSwap_1_fu_157_ap_done,
        ap_idle => grp_ClefiaDoubleSwap_1_fu_157_ap_idle,
        ap_ready => grp_ClefiaDoubleSwap_1_fu_157_ap_ready,
        lk_address0 => grp_ClefiaDoubleSwap_1_fu_157_lk_address0,
        lk_ce0 => grp_ClefiaDoubleSwap_1_fu_157_lk_ce0,
        lk_we0 => grp_ClefiaDoubleSwap_1_fu_157_lk_we0,
        lk_d0 => grp_ClefiaDoubleSwap_1_fu_157_lk_d0,
        lk_q0 => lk_q0,
        lk_address1 => grp_ClefiaDoubleSwap_1_fu_157_lk_address1,
        lk_ce1 => grp_ClefiaDoubleSwap_1_fu_157_lk_ce1,
        lk_q1 => lk_q1,
        lk_offset => grp_ClefiaDoubleSwap_1_fu_157_lk_offset);

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165 : component clefia_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start,
        ap_done => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_done,
        ap_idle => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_idle,
        ap_ready => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_ready,
        or_ln364 => or_ln364_reg_279,
        rk_address0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address0,
        rk_ce0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce0,
        rk_we0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_we0,
        rk_d0 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_d0,
        rk_address1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address1,
        rk_ce1 => grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce1,
        rk_q1 => rk_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14)) or ((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
                    grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaDoubleSwap_1_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_214_p3 = ap_const_lv1_1) and (icmp_ln373_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_214_p3 = ap_const_lv1_0) and (icmp_ln373_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln373_fu_190_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_ready = ap_const_logic_1)) then 
                    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_68_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_68 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_fu_68 <= add_ln373_reg_274;
            end if; 
        end if;
    end process;

    idx35_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                idx35_fu_64 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                idx35_fu_64 <= add_ln387_fu_242_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln373_reg_274 <= add_ln373_fu_196_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln373_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    add_ln381_reg_295(8 downto 4) <= add_ln381_fu_234_p2(8 downto 4);
                    or_ln364_reg_279(2 downto 0) <= or_ln364_fu_202_p2(2 downto 0);    or_ln364_reg_279(7 downto 4) <= or_ln364_fu_202_p2(7 downto 4);
                tmp_reg_291 <= i_fu_68(1 downto 1);
                trunc_ln374_reg_287 <= trunc_ln374_fu_210_p1;
            end if;
        end if;
    end process;
    or_ln364_reg_279(3) <= '1';
    add_ln381_reg_295(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state7, icmp_ln373_fu_190_p2, trunc_ln374_reg_287, tmp_fu_214_p3, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, ap_CS_fsm_state14, ap_block_state14_on_subcall_done, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, ap_block_state4_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_boolean_0 = ap_block_state4_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((tmp_fu_214_p3 = ap_const_lv1_1) and (icmp_ln373_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((tmp_fu_214_p3 = ap_const_lv1_0) and (icmp_ln373_fu_190_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state8 => 
                if (((trunc_ln374_reg_287 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state8) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((trunc_ln374_reg_287 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln373_fu_196_p2 <= std_logic_vector(unsigned(i_fu_68) + unsigned(ap_const_lv4_1));
    add_ln381_fu_234_p2 <= std_logic_vector(unsigned(zext_ln381_fu_230_p1) + unsigned(ap_const_lv9_A0));
    add_ln387_fu_242_p2 <= std_logic_vector(unsigned(idx35_fu_64) + unsigned(ap_const_lv8_10));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(ap_block_state10_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state10_on_subcall_done)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state11_blk_assign_proc : process(ap_block_state11_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state11_on_subcall_done)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done)
    begin
        if ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(ap_block_state14_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state14_on_subcall_done)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state15_blk_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done)
    begin
        if ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done)
    begin
        if ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(ap_block_state4_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state4_on_subcall_done)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done)
    begin
        if ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done)
    begin
        if ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state10_on_subcall_done_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((trunc_ln374_reg_287 = ap_const_lv1_1) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_done = ap_const_logic_0));
    end process;


    ap_block_state11_on_subcall_done_assign_proc : process(tmp_reg_291, grp_ClefiaDoubleSwap_1_fu_157_ap_done)
    begin
                ap_block_state11_on_subcall_done <= (((tmp_reg_291 = ap_const_lv1_1) and (grp_ClefiaDoubleSwap_1_fu_157_ap_done = ap_const_logic_0)) or ((tmp_reg_291 = ap_const_lv1_0) and (grp_ClefiaDoubleSwap_1_fu_157_ap_done = ap_const_logic_0)));
    end process;


    ap_block_state14_on_subcall_done_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_done)
    begin
                ap_block_state14_on_subcall_done <= ((trunc_ln374_reg_287 = ap_const_lv1_1) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_done = ap_const_logic_0));
    end process;


    ap_block_state4_on_subcall_done_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_done, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_done)
    begin
                ap_block_state4_on_subcall_done <= ((grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_done = ap_const_logic_0) or (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done, ap_CS_fsm_state15)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    fin_address0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_address0;
        else 
            fin_address0 <= "XXXXX";
        end if; 
    end process;


    fin_ce0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_ce0;
        else 
            fin_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_ce1_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_ce1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_ce1;
        else 
            fin_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fin_d0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_d0;
        else 
            fin_d0 <= "XXXXXXXX";
        end if; 
    end process;


    fin_we0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            fin_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_fin_we0;
        else 
            fin_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fin_we1_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fin_we1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fin_we1;
        else 
            fin_we1 <= ap_const_logic_0;
        end if; 
    end process;


    fout_address0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_address0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            fout_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fout_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_address0;
        else 
            fout_address0 <= "XXXXX";
        end if; 
    end process;


    fout_ce0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_ce0, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            fout_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_fout_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fout_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce0;
        else 
            fout_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fout_ce1_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fout_ce1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_ce1;
        else 
            fout_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    fout_we0_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fout_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we0;
        else 
            fout_we0 <= ap_const_logic_0;
        end if; 
    end process;


    fout_we1_assign_proc : process(grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we1, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            fout_we1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_fout_we1;
        else 
            fout_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_ClefiaDoubleSwap_1_fu_157_ap_start <= grp_ClefiaDoubleSwap_1_fu_157_ap_start_reg;

    grp_ClefiaDoubleSwap_1_fu_157_lk_offset_assign_proc : process(tmp_reg_291, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
            if ((tmp_reg_291 = ap_const_lv1_1)) then 
                grp_ClefiaDoubleSwap_1_fu_157_lk_offset <= ap_const_lv5_10;
            elsif ((tmp_reg_291 = ap_const_lv1_0)) then 
                grp_ClefiaDoubleSwap_1_fu_157_lk_offset <= ap_const_lv5_0;
            else 
                grp_ClefiaDoubleSwap_1_fu_157_lk_offset <= "XXXXX";
            end if;
        else 
            grp_ClefiaDoubleSwap_1_fu_157_lk_offset <= "XXXXX";
        end if; 
    end process;

    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_1_fu_84_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_ap_start_reg;
    grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_210_1_fu_92_ap_start_reg;
    icmp_ln373_fu_190_p2 <= "1" when (i_fu_68 = ap_const_lv4_D) else "0";

    lk_address0_assign_proc : process(tmp_reg_291, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_address0, grp_ClefiaDoubleSwap_1_fu_157_lk_address0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if ((((tmp_reg_291 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            lk_address0 <= grp_ClefiaDoubleSwap_1_fu_157_lk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            lk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            lk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            lk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_address0;
        else 
            lk_address0 <= "XXXXX";
        end if; 
    end process;


    lk_ce0_assign_proc : process(tmp_reg_291, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_ce0, grp_ClefiaDoubleSwap_1_fu_157_lk_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if ((((tmp_reg_291 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            lk_ce0 <= grp_ClefiaDoubleSwap_1_fu_157_lk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            lk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_lk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            lk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_lk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            lk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_ce0;
        else 
            lk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lk_ce1_assign_proc : process(tmp_reg_291, grp_ClefiaDoubleSwap_1_fu_157_lk_ce1, ap_CS_fsm_state11)
    begin
        if ((((tmp_reg_291 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            lk_ce1 <= grp_ClefiaDoubleSwap_1_fu_157_lk_ce1;
        else 
            lk_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    lk_d0_assign_proc : process(tmp_reg_291, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_d0, grp_ClefiaDoubleSwap_1_fu_157_lk_d0, ap_CS_fsm_state6, ap_CS_fsm_state11)
    begin
        if ((((tmp_reg_291 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            lk_d0 <= grp_ClefiaDoubleSwap_1_fu_157_lk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            lk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_d0;
        else 
            lk_d0 <= "XXXXXXXX";
        end if; 
    end process;


    lk_we0_assign_proc : process(tmp_reg_291, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_we0, grp_ClefiaDoubleSwap_1_fu_157_lk_we0, ap_CS_fsm_state6, ap_CS_fsm_state11)
    begin
        if ((((tmp_reg_291 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((tmp_reg_291 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            lk_we0 <= grp_ClefiaDoubleSwap_1_fu_157_lk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            lk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_116_13_fu_112_lk_we0;
        else 
            lk_we0 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln364_fu_202_p2 <= (idx35_fu_64 or ap_const_lv8_8);

    rk_address0_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address0;
        elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_address0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_address0;
        else 
            rk_address0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_address1_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address1, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address1, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((trunc_ln374_reg_287 = ap_const_lv1_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                rk_address1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_address1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                rk_address1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_address1;
            else 
                rk_address1 <= "XXXXXXXX";
            end if;
        else 
            rk_address1 <= "XXXXXXXX";
        end if; 
    end process;


    rk_ce0_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce0;
        elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_ce0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_ce0;
        else 
            rk_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rk_ce1_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce1, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce1, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if ((trunc_ln374_reg_287 = ap_const_lv1_1)) then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                rk_ce1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_ce1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                rk_ce1 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_ce1;
            else 
                rk_ce1 <= ap_const_logic_0;
            end if;
        else 
            rk_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    rk_d0_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_d0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_d0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_d0;
        elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_d0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_d0;
        else 
            rk_d0 <= "XXXXXXXX";
        end if; 
    end process;


    rk_we0_assign_proc : process(trunc_ln374_reg_287, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_we0, grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_we0, ap_CS_fsm_state4, ap_CS_fsm_state8, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state10, ap_CS_fsm_state14)
    begin
        if (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_15_fu_165_rk_we0;
        elsif (((trunc_ln374_reg_287 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_17_fu_148_rk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_18_fu_140_rk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_14_fu_129_rk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_16_fu_118_rk_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rk_we0 <= grp_ClefiaKeySet256_Pipeline_VITIS_LOOP_123_1_fu_104_rk_we0;
        else 
            rk_we0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln_fu_222_p3 <= (i_fu_68 & ap_const_lv4_0);
    tmp_fu_214_p3 <= i_fu_68(1 downto 1);
    trunc_ln374_fu_210_p1 <= i_fu_68(1 - 1 downto 0);
    zext_ln381_fu_230_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_222_p3),9));
end behav;
