// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="clefia_clefia,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.084000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=28,HLS_SYN_DSP=0,HLS_SYN_FF=4689,HLS_SYN_LUT=20301,HLS_VERSION=2022_1}" *)

module clefia (
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [7:0] pt_q0;
wire   [31:0] key_bitlen;
reg   [3:0] Clefia_enc_address0;
reg    Clefia_enc_ce0;
reg    Clefia_enc_we0;
wire   [7:0] Clefia_enc_q0;
wire   [7:0] Clefia_dec_q0;
reg   [31:0] key_bitlen_read_reg_244;
wire   [0:0] icmp_ln395_fu_238_p2;
reg   [0:0] icmp_ln395_reg_250;
wire   [0:0] grp_fu_226_p2;
reg   [0:0] icmp_ln398_reg_254;
wire   [0:0] grp_fu_232_p2;
reg   [0:0] icmp_ln401_reg_258;
reg   [3:0] ct_address0;
reg    ct_ce0;
reg    ct_we0;
wire   [7:0] ct_q0;
reg   [7:0] rk_address0;
reg    rk_ce0;
reg    rk_we0;
reg   [7:0] rk_d0;
wire   [7:0] rk_q0;
reg   [7:0] rk_address1;
reg    rk_ce1;
reg    rk_we1;
wire   [7:0] rk_q1;
wire    grp_ClefiaKeySet256_fu_148_ap_start;
wire    grp_ClefiaKeySet256_fu_148_ap_done;
wire    grp_ClefiaKeySet256_fu_148_ap_idle;
wire    grp_ClefiaKeySet256_fu_148_ap_ready;
wire   [7:0] grp_ClefiaKeySet256_fu_148_rk_address0;
wire    grp_ClefiaKeySet256_fu_148_rk_ce0;
wire    grp_ClefiaKeySet256_fu_148_rk_we0;
wire   [7:0] grp_ClefiaKeySet256_fu_148_rk_d0;
wire   [7:0] grp_ClefiaKeySet256_fu_148_rk_address1;
wire    grp_ClefiaKeySet256_fu_148_rk_ce1;
wire    grp_ClefiaKeySet192_fu_162_ap_start;
wire    grp_ClefiaKeySet192_fu_162_ap_done;
wire    grp_ClefiaKeySet192_fu_162_ap_idle;
wire    grp_ClefiaKeySet192_fu_162_ap_ready;
wire   [7:0] grp_ClefiaKeySet192_fu_162_rk_address0;
wire    grp_ClefiaKeySet192_fu_162_rk_ce0;
wire    grp_ClefiaKeySet192_fu_162_rk_we0;
wire   [7:0] grp_ClefiaKeySet192_fu_162_rk_d0;
wire   [7:0] grp_ClefiaKeySet192_fu_162_rk_address1;
wire    grp_ClefiaKeySet192_fu_162_rk_ce1;
wire    grp_ClefiaKeySet128_fu_176_ap_start;
wire    grp_ClefiaKeySet128_fu_176_ap_done;
wire    grp_ClefiaKeySet128_fu_176_ap_idle;
wire    grp_ClefiaKeySet128_fu_176_ap_ready;
wire   [7:0] grp_ClefiaKeySet128_fu_176_rk_address0;
wire    grp_ClefiaKeySet128_fu_176_rk_ce0;
wire    grp_ClefiaKeySet128_fu_176_rk_we0;
wire   [7:0] grp_ClefiaKeySet128_fu_176_rk_d0;
wire   [7:0] grp_ClefiaKeySet128_fu_176_rk_address1;
wire    grp_ClefiaKeySet128_fu_176_rk_ce1;
wire    grp_ClefiaKeySet128_fu_176_rk_we1;
wire   [7:0] grp_ClefiaKeySet128_fu_176_rk_d1;
wire    grp_ClefiaEncrypt_1_fu_190_ap_start;
wire    grp_ClefiaEncrypt_1_fu_190_ap_done;
wire    grp_ClefiaEncrypt_1_fu_190_ap_idle;
wire    grp_ClefiaEncrypt_1_fu_190_ap_ready;
wire   [3:0] grp_ClefiaEncrypt_1_fu_190_Clefia_enc_address0;
wire    grp_ClefiaEncrypt_1_fu_190_Clefia_enc_ce0;
wire    grp_ClefiaEncrypt_1_fu_190_Clefia_enc_we0;
wire   [7:0] grp_ClefiaEncrypt_1_fu_190_Clefia_enc_d0;
wire   [3:0] grp_ClefiaEncrypt_1_fu_190_pt_address0;
wire    grp_ClefiaEncrypt_1_fu_190_pt_ce0;
wire   [7:0] grp_ClefiaEncrypt_1_fu_190_rk_address0;
wire    grp_ClefiaEncrypt_1_fu_190_rk_ce0;
wire   [7:0] grp_ClefiaEncrypt_1_fu_190_rk_address1;
wire    grp_ClefiaEncrypt_1_fu_190_rk_ce1;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_idle;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_ready;
wire   [3:0] grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_address0;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_ce0;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_we0;
wire   [7:0] grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_d0;
wire   [3:0] grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_address0;
wire    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_ce0;
wire    grp_ClefiaDecrypt_1_fu_212_ap_start;
wire    grp_ClefiaDecrypt_1_fu_212_ap_done;
wire    grp_ClefiaDecrypt_1_fu_212_ap_idle;
wire    grp_ClefiaDecrypt_1_fu_212_ap_ready;
wire   [3:0] grp_ClefiaDecrypt_1_fu_212_Clefia_dec_address0;
wire    grp_ClefiaDecrypt_1_fu_212_Clefia_dec_ce0;
wire    grp_ClefiaDecrypt_1_fu_212_Clefia_dec_we0;
wire   [7:0] grp_ClefiaDecrypt_1_fu_212_Clefia_dec_d0;
wire   [3:0] grp_ClefiaDecrypt_1_fu_212_ct_address0;
wire    grp_ClefiaDecrypt_1_fu_212_ct_ce0;
wire   [7:0] grp_ClefiaDecrypt_1_fu_212_rk_address0;
wire    grp_ClefiaDecrypt_1_fu_212_rk_ce0;
wire   [7:0] grp_ClefiaDecrypt_1_fu_212_rk_address1;
wire    grp_ClefiaDecrypt_1_fu_212_rk_ce1;
reg   [4:0] r_reg_104;
wire    ap_CS_fsm_state2;
reg    ap_predicate_op41_call_state2;
reg    ap_predicate_op43_call_state2;
reg    ap_block_state2_on_subcall_done;
reg   [4:0] r_1_reg_126;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state6;
reg    grp_ClefiaKeySet256_fu_148_ap_start_reg;
reg    grp_ClefiaKeySet192_fu_162_ap_start_reg;
reg    grp_ClefiaKeySet128_fu_176_ap_start_reg;
reg    grp_ClefiaEncrypt_1_fu_190_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg;
wire    ap_CS_fsm_state5;
reg    grp_ClefiaDecrypt_1_fu_212_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg   [31:0] grp_fu_226_p0;
reg   [31:0] grp_fu_232_p0;
reg   [10:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 grp_ClefiaKeySet256_fu_148_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet192_fu_162_ap_start_reg = 1'b0;
#0 grp_ClefiaKeySet128_fu_176_ap_start_reg = 1'b0;
#0 grp_ClefiaEncrypt_1_fu_190_ap_start_reg = 1'b0;
#0 grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg = 1'b0;
#0 grp_ClefiaDecrypt_1_fu_212_ap_start_reg = 1'b0;
end

clefia_ct_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
ct_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(ct_address0),
    .ce0(ct_ce0),
    .we0(ct_we0),
    .d0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_d0),
    .q0(ct_q0)
);

clefia_rk_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 224 ),
    .AddressWidth( 8 ))
rk_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(rk_address0),
    .ce0(rk_ce0),
    .we0(rk_we0),
    .d0(rk_d0),
    .q0(rk_q0),
    .address1(rk_address1),
    .ce1(rk_ce1),
    .we1(rk_we1),
    .d1(grp_ClefiaKeySet128_fu_176_rk_d1),
    .q1(rk_q1)
);

clefia_ClefiaKeySet256 grp_ClefiaKeySet256_fu_148(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ClefiaKeySet256_fu_148_ap_start),
    .ap_done(grp_ClefiaKeySet256_fu_148_ap_done),
    .ap_idle(grp_ClefiaKeySet256_fu_148_ap_idle),
    .ap_ready(grp_ClefiaKeySet256_fu_148_ap_ready),
    .rk_address0(grp_ClefiaKeySet256_fu_148_rk_address0),
    .rk_ce0(grp_ClefiaKeySet256_fu_148_rk_ce0),
    .rk_we0(grp_ClefiaKeySet256_fu_148_rk_we0),
    .rk_d0(grp_ClefiaKeySet256_fu_148_rk_d0),
    .rk_address1(grp_ClefiaKeySet256_fu_148_rk_address1),
    .rk_ce1(grp_ClefiaKeySet256_fu_148_rk_ce1),
    .rk_q1(rk_q1)
);

clefia_ClefiaKeySet192 grp_ClefiaKeySet192_fu_162(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ClefiaKeySet192_fu_162_ap_start),
    .ap_done(grp_ClefiaKeySet192_fu_162_ap_done),
    .ap_idle(grp_ClefiaKeySet192_fu_162_ap_idle),
    .ap_ready(grp_ClefiaKeySet192_fu_162_ap_ready),
    .rk_address0(grp_ClefiaKeySet192_fu_162_rk_address0),
    .rk_ce0(grp_ClefiaKeySet192_fu_162_rk_ce0),
    .rk_we0(grp_ClefiaKeySet192_fu_162_rk_we0),
    .rk_d0(grp_ClefiaKeySet192_fu_162_rk_d0),
    .rk_address1(grp_ClefiaKeySet192_fu_162_rk_address1),
    .rk_ce1(grp_ClefiaKeySet192_fu_162_rk_ce1),
    .rk_q1(rk_q1)
);

clefia_ClefiaKeySet128 grp_ClefiaKeySet128_fu_176(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ClefiaKeySet128_fu_176_ap_start),
    .ap_done(grp_ClefiaKeySet128_fu_176_ap_done),
    .ap_idle(grp_ClefiaKeySet128_fu_176_ap_idle),
    .ap_ready(grp_ClefiaKeySet128_fu_176_ap_ready),
    .rk_address0(grp_ClefiaKeySet128_fu_176_rk_address0),
    .rk_ce0(grp_ClefiaKeySet128_fu_176_rk_ce0),
    .rk_we0(grp_ClefiaKeySet128_fu_176_rk_we0),
    .rk_d0(grp_ClefiaKeySet128_fu_176_rk_d0),
    .rk_address1(grp_ClefiaKeySet128_fu_176_rk_address1),
    .rk_ce1(grp_ClefiaKeySet128_fu_176_rk_ce1),
    .rk_we1(grp_ClefiaKeySet128_fu_176_rk_we1),
    .rk_d1(grp_ClefiaKeySet128_fu_176_rk_d1)
);

clefia_ClefiaEncrypt_1 grp_ClefiaEncrypt_1_fu_190(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ClefiaEncrypt_1_fu_190_ap_start),
    .ap_done(grp_ClefiaEncrypt_1_fu_190_ap_done),
    .ap_idle(grp_ClefiaEncrypt_1_fu_190_ap_idle),
    .ap_ready(grp_ClefiaEncrypt_1_fu_190_ap_ready),
    .Clefia_enc_address0(grp_ClefiaEncrypt_1_fu_190_Clefia_enc_address0),
    .Clefia_enc_ce0(grp_ClefiaEncrypt_1_fu_190_Clefia_enc_ce0),
    .Clefia_enc_we0(grp_ClefiaEncrypt_1_fu_190_Clefia_enc_we0),
    .Clefia_enc_d0(grp_ClefiaEncrypt_1_fu_190_Clefia_enc_d0),
    .Clefia_enc_q0(Clefia_enc_q0),
    .pt_address0(grp_ClefiaEncrypt_1_fu_190_pt_address0),
    .pt_ce0(grp_ClefiaEncrypt_1_fu_190_pt_ce0),
    .pt_q0(pt_q0),
    .rk_address0(grp_ClefiaEncrypt_1_fu_190_rk_address0),
    .rk_ce0(grp_ClefiaEncrypt_1_fu_190_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaEncrypt_1_fu_190_rk_address1),
    .rk_ce1(grp_ClefiaEncrypt_1_fu_190_rk_ce1),
    .rk_q1(rk_q1),
    .r(r_reg_104)
);

clefia_clefia_Pipeline_VITIS_LOOP_116_1 grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start),
    .ap_done(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done),
    .ap_idle(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_idle),
    .ap_ready(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_ready),
    .ct_address0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_address0),
    .ct_ce0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_ce0),
    .ct_we0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_we0),
    .ct_d0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_d0),
    .Clefia_enc_address0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_address0),
    .Clefia_enc_ce0(grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_ce0),
    .Clefia_enc_q0(Clefia_enc_q0)
);

clefia_ClefiaDecrypt_1 grp_ClefiaDecrypt_1_fu_212(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ClefiaDecrypt_1_fu_212_ap_start),
    .ap_done(grp_ClefiaDecrypt_1_fu_212_ap_done),
    .ap_idle(grp_ClefiaDecrypt_1_fu_212_ap_idle),
    .ap_ready(grp_ClefiaDecrypt_1_fu_212_ap_ready),
    .Clefia_dec_address0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_address0),
    .Clefia_dec_ce0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_ce0),
    .Clefia_dec_we0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_we0),
    .Clefia_dec_d0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_d0),
    .Clefia_dec_q0(Clefia_dec_q0),
    .ct_address0(grp_ClefiaDecrypt_1_fu_212_ct_address0),
    .ct_ce0(grp_ClefiaDecrypt_1_fu_212_ct_ce0),
    .ct_q0(ct_q0),
    .rk_address0(grp_ClefiaDecrypt_1_fu_212_rk_address0),
    .rk_ce0(grp_ClefiaDecrypt_1_fu_212_rk_ce0),
    .rk_q0(rk_q0),
    .rk_address1(grp_ClefiaDecrypt_1_fu_212_rk_address1),
    .rk_ce1(grp_ClefiaDecrypt_1_fu_212_rk_ce1),
    .rk_q1(rk_q1),
    .r(r_1_reg_126)
);

clefia_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .pt_address0(grp_ClefiaEncrypt_1_fu_190_pt_address0),
    .pt_ce0(grp_ClefiaEncrypt_1_fu_190_pt_ce0),
    .pt_q0(pt_q0),
    .key_bitlen(key_bitlen),
    .Clefia_enc_address0(Clefia_enc_address0),
    .Clefia_enc_ce0(Clefia_enc_ce0),
    .Clefia_enc_we0(Clefia_enc_we0),
    .Clefia_enc_d0(grp_ClefiaEncrypt_1_fu_190_Clefia_enc_d0),
    .Clefia_enc_q0(Clefia_enc_q0),
    .Clefia_dec_address0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_address0),
    .Clefia_dec_ce0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_ce0),
    .Clefia_dec_we0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_we0),
    .Clefia_dec_d0(grp_ClefiaDecrypt_1_fu_212_Clefia_dec_d0),
    .Clefia_dec_q0(Clefia_dec_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ClefiaDecrypt_1_fu_212_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_ClefiaDecrypt_1_fu_212_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaDecrypt_1_fu_212_ap_ready == 1'b1)) begin
            grp_ClefiaDecrypt_1_fu_212_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ClefiaEncrypt_1_fu_190_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_ClefiaEncrypt_1_fu_190_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaEncrypt_1_fu_190_ap_ready == 1'b1)) begin
            grp_ClefiaEncrypt_1_fu_190_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ClefiaKeySet128_fu_176_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln395_fu_238_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1)))) begin
            grp_ClefiaKeySet128_fu_176_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet128_fu_176_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet128_fu_176_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ClefiaKeySet192_fu_162_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_fu_226_p2 == 1'd1) & (icmp_ln395_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((grp_fu_226_p2 == 1'd1) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1)))) begin
            grp_ClefiaKeySet192_fu_162_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet192_fu_162_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet192_fu_162_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ClefiaKeySet256_fu_148_ap_start_reg <= 1'b0;
    end else begin
        if ((((grp_fu_232_p2 == 1'd1) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)) | ((grp_fu_232_p2 == 1'd1) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1)))) begin
            grp_ClefiaKeySet256_fu_148_ap_start_reg <= 1'b1;
        end else if ((grp_ClefiaKeySet256_fu_148_ap_ready == 1'b1)) begin
            grp_ClefiaKeySet256_fu_148_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg <= 1'b1;
        end else if ((grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_ready == 1'b1)) begin
            grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_232_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1))) begin
                r_1_reg_126[1] <= 1'b0;
        r_1_reg_126[2] <= 1'b0;
        r_1_reg_126[3] <= 1'b0;
        r_1_reg_126[4] <= 1'b0;
    end else if (((grp_ClefiaKeySet256_fu_148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                r_1_reg_126[1] <= 1'b1;
        r_1_reg_126[2] <= 1'b0;
        r_1_reg_126[3] <= 1'b1;
        r_1_reg_126[4] <= 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state8) & (grp_ClefiaKeySet192_fu_162_ap_done == 1'b1))) begin
                r_1_reg_126[1] <= 1'b1;
        r_1_reg_126[2] <= 1'b1;
        r_1_reg_126[3] <= 1'b0;
        r_1_reg_126[4] <= 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state9) & (grp_ClefiaKeySet128_fu_176_ap_done == 1'b1))) begin
                r_1_reg_126[1] <= 1'b1;
        r_1_reg_126[2] <= 1'b0;
        r_1_reg_126[3] <= 1'b0;
        r_1_reg_126[4] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_232_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                r_reg_104[1] <= 1'b0;
        r_reg_104[2] <= 1'b0;
        r_reg_104[3] <= 1'b0;
        r_reg_104[4] <= 1'b0;
    end else if (((icmp_ln401_reg_258 == 1'd1) & (icmp_ln398_reg_254 == 1'd0) & (icmp_ln395_reg_250 == 1'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                r_reg_104[1] <= 1'b1;
        r_reg_104[2] <= 1'b0;
        r_reg_104[3] <= 1'b1;
        r_reg_104[4] <= 1'b1;
    end else if (((icmp_ln398_reg_254 == 1'd1) & (icmp_ln395_reg_250 == 1'd0) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                r_reg_104[1] <= 1'b1;
        r_reg_104[2] <= 1'b1;
        r_reg_104[3] <= 1'b0;
        r_reg_104[4] <= 1'b1;
    end else if (((icmp_ln395_reg_250 == 1'd1) & (1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                r_reg_104[1] <= 1'b1;
        r_reg_104[2] <= 1'b0;
        r_reg_104[3] <= 1'b0;
        r_reg_104[4] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln395_reg_250 <= icmp_ln395_fu_238_p2;
        key_bitlen_read_reg_244 <= key_bitlen;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln395_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln398_reg_254 <= grp_fu_226_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_fu_226_p2 == 1'd0) & (icmp_ln395_fu_238_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        icmp_ln401_reg_258 <= grp_fu_232_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Clefia_enc_address0 = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Clefia_enc_address0 = grp_ClefiaEncrypt_1_fu_190_Clefia_enc_address0;
    end else begin
        Clefia_enc_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Clefia_enc_ce0 = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_Clefia_enc_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        Clefia_enc_ce0 = grp_ClefiaEncrypt_1_fu_190_Clefia_enc_ce0;
    end else begin
        Clefia_enc_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Clefia_enc_we0 = grp_ClefiaEncrypt_1_fu_190_Clefia_enc_we0;
    end else begin
        Clefia_enc_we0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaDecrypt_1_fu_212_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state2_on_subcall_done)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_ClefiaEncrypt_1_fu_190_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ClefiaKeySet256_fu_148_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ClefiaKeySet192_fu_162_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_ClefiaKeySet128_fu_176_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_ClefiaDecrypt_1_fu_212_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (grp_ClefiaDecrypt_1_fu_212_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ct_address0 = grp_ClefiaDecrypt_1_fu_212_ct_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ct_address0 = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_address0;
    end else begin
        ct_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ct_ce0 = grp_ClefiaDecrypt_1_fu_212_ct_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ct_ce0 = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_ce0;
    end else begin
        ct_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ct_we0 = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ct_we0;
    end else begin
        ct_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_226_p0 = key_bitlen_read_reg_244;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_226_p0 = key_bitlen;
    end else begin
        grp_fu_226_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_232_p0 = key_bitlen_read_reg_244;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_232_p0 = key_bitlen;
    end else begin
        grp_fu_232_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rk_address0 = grp_ClefiaDecrypt_1_fu_212_rk_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_address0 = grp_ClefiaEncrypt_1_fu_190_rk_address0;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address0 = grp_ClefiaKeySet128_fu_176_rk_address0;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address0 = grp_ClefiaKeySet192_fu_162_rk_address0;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address0 = grp_ClefiaKeySet256_fu_148_rk_address0;
    end else begin
        rk_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rk_address1 = grp_ClefiaDecrypt_1_fu_212_rk_address1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_address1 = grp_ClefiaEncrypt_1_fu_190_rk_address1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address1 = grp_ClefiaKeySet128_fu_176_rk_address1;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address1 = grp_ClefiaKeySet192_fu_162_rk_address1;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_address1 = grp_ClefiaKeySet256_fu_148_rk_address1;
    end else begin
        rk_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rk_ce0 = grp_ClefiaDecrypt_1_fu_212_rk_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_ce0 = grp_ClefiaEncrypt_1_fu_190_rk_ce0;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce0 = grp_ClefiaKeySet128_fu_176_rk_ce0;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce0 = grp_ClefiaKeySet192_fu_162_rk_ce0;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce0 = grp_ClefiaKeySet256_fu_148_rk_ce0;
    end else begin
        rk_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rk_ce1 = grp_ClefiaDecrypt_1_fu_212_rk_ce1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        rk_ce1 = grp_ClefiaEncrypt_1_fu_190_rk_ce1;
    end else if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce1 = grp_ClefiaKeySet128_fu_176_rk_ce1;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce1 = grp_ClefiaKeySet192_fu_162_rk_ce1;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_ce1 = grp_ClefiaKeySet256_fu_148_rk_ce1;
    end else begin
        rk_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_d0 = grp_ClefiaKeySet128_fu_176_rk_d0;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_d0 = grp_ClefiaKeySet192_fu_162_rk_d0;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_d0 = grp_ClefiaKeySet256_fu_148_rk_d0;
    end else begin
        rk_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_we0 = grp_ClefiaKeySet128_fu_176_rk_we0;
    end else if (((1'b1 == ap_CS_fsm_state8) | ((ap_predicate_op43_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_we0 = grp_ClefiaKeySet192_fu_162_rk_we0;
    end else if (((1'b1 == ap_CS_fsm_state7) | ((ap_predicate_op41_call_state2 == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_we0 = grp_ClefiaKeySet256_fu_148_rk_we0;
    end else begin
        rk_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        rk_we1 = grp_ClefiaKeySet128_fu_176_rk_we1;
    end else begin
        rk_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_on_subcall_done) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (grp_ClefiaEncrypt_1_fu_190_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_fu_232_p2 == 1'd0) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else if (((grp_fu_232_p2 == 1'd1) & (grp_fu_226_p2 == 1'd0) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((grp_fu_226_p2 == 1'd1) & (icmp_ln395_reg_250 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if (((icmp_ln395_reg_250 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((grp_ClefiaKeySet256_fu_148_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_ClefiaKeySet192_fu_162_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_ClefiaKeySet128_fu_176_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_ClefiaDecrypt_1_fu_212_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state2_on_subcall_done = (((icmp_ln395_reg_250 == 1'd1) & (grp_ClefiaKeySet128_fu_176_ap_done == 1'b0)) | ((ap_predicate_op43_call_state2 == 1'b1) & (grp_ClefiaKeySet192_fu_162_ap_done == 1'b0)) | ((grp_ClefiaKeySet256_fu_148_ap_done == 1'b0) & (ap_predicate_op41_call_state2 == 1'b1)));
end

always @ (*) begin
    ap_predicate_op41_call_state2 = ((icmp_ln401_reg_258 == 1'd1) & (icmp_ln398_reg_254 == 1'd0) & (icmp_ln395_reg_250 == 1'd0));
end

always @ (*) begin
    ap_predicate_op43_call_state2 = ((icmp_ln398_reg_254 == 1'd1) & (icmp_ln395_reg_250 == 1'd0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_ClefiaDecrypt_1_fu_212_ap_start = grp_ClefiaDecrypt_1_fu_212_ap_start_reg;

assign grp_ClefiaEncrypt_1_fu_190_ap_start = grp_ClefiaEncrypt_1_fu_190_ap_start_reg;

assign grp_ClefiaKeySet128_fu_176_ap_start = grp_ClefiaKeySet128_fu_176_ap_start_reg;

assign grp_ClefiaKeySet192_fu_162_ap_start = grp_ClefiaKeySet192_fu_162_ap_start_reg;

assign grp_ClefiaKeySet256_fu_148_ap_start = grp_ClefiaKeySet256_fu_148_ap_start_reg;

assign grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start = grp_clefia_Pipeline_VITIS_LOOP_116_1_fu_205_ap_start_reg;

assign grp_fu_226_p2 = ((grp_fu_226_p0 == 32'd192) ? 1'b1 : 1'b0);

assign grp_fu_232_p2 = ((grp_fu_232_p0 == 32'd256) ? 1'b1 : 1'b0);

assign icmp_ln395_fu_238_p2 = ((key_bitlen == 32'd128) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    r_reg_104[0] <= 1'b0;
    r_1_reg_126[0] <= 1'b0;
end

endmodule //clefia
